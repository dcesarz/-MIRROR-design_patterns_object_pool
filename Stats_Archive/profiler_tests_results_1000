
====== FIRST POOL, 1 THREADS, 1000 OBJECTS, 10000 OPERATIONS INSIDE FUNCTION ======

         59 function calls in 1.573 seconds

   Ordered by: standard name

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000    1.573    1.573 <string>:1(<module>)
        1    0.000    0.000    0.000    0.000 _weakrefset.py:82(add)
        1    0.000    0.000    1.573    1.573 client.py:36(test_function)
        2    0.000    0.000    0.000    0.000 singleton.py:4(__call__)
        1    0.000    0.000    0.000    0.000 thread_builder.py:115(__init__)
        1    0.000    0.000    0.000    0.000 thread_builder.py:131(config)
        1    0.000    0.000    0.000    0.000 thread_builder.py:177(get_thread)
        1    0.000    0.000    1.573    1.573 threading.py:1001(join)
        1    0.000    0.000    1.573    1.573 threading.py:1039(_wait_for_tstate_lock)
        2    0.000    0.000    0.000    0.000 threading.py:1107(daemon)
        1    0.000    0.000    0.000    0.000 threading.py:1189(_make_invoke_excepthook)
        2    0.000    0.000    0.000    0.000 threading.py:1318(current_thread)
        3    0.000    0.000    0.000    0.000 threading.py:228(__init__)
        1    0.000    0.000    0.000    0.000 threading.py:256(__enter__)
        1    0.000    0.000    0.000    0.000 threading.py:259(__exit__)
        1    0.000    0.000    0.000    0.000 threading.py:265(_release_save)
        1    0.000    0.000    0.000    0.000 threading.py:268(_acquire_restore)
        1    0.000    0.000    0.000    0.000 threading.py:271(_is_owned)
        1    0.000    0.000    0.000    0.000 threading.py:280(wait)
        3    0.000    0.000    0.000    0.000 threading.py:521(__init__)
        2    0.000    0.000    0.000    0.000 threading.py:529(is_set)
        1    0.000    0.000    0.000    0.000 threading.py:556(wait)
        1    0.000    0.000    0.000    0.000 threading.py:750(_newname)
        1    0.000    0.000    0.000    0.000 threading.py:777(__init__)
        1    0.000    0.000    0.000    0.000 threading.py:855(start)
        1    0.000    0.000    0.000    0.000 threading.py:966(_stop)
        4    0.000    0.000    0.000    0.000 {built-in method _thread.allocate_lock}
        2    0.000    0.000    0.000    0.000 {built-in method _thread.get_ident}
        1    0.000    0.000    0.000    0.000 {built-in method _thread.start_new_thread}
        1    0.000    0.000    1.573    1.573 {built-in method builtins.exec}
        1    0.000    0.000    0.000    0.000 {method '__enter__' of '_thread.lock' objects}
        3    0.000    0.000    0.000    0.000 {method '__exit__' of '_thread.lock' objects}
        5    1.573    0.315    1.573    0.315 {method 'acquire' of '_thread.lock' objects}
        1    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
        1    0.000    0.000    0.000    0.000 {method 'append' of 'collections.deque' objects}
        1    0.000    0.000    0.000    0.000 {method 'append' of 'list' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        1    0.000    0.000    0.000    0.000 {method 'discard' of 'set' objects}
        1    0.000    0.000    0.000    0.000 {method 'locked' of '_thread.lock' objects}
        2    0.000    0.000    0.000    0.000 {method 'release' of '_thread.lock' objects}



====== SECOND POOL, 1 THREADS, 1000 OBJECTS, 10000 OPERATIONS INSIDE FUNCTION ======

         59 function calls in 1.561 seconds

   Ordered by: standard name

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000    1.561    1.561 <string>:1(<module>)
        1    0.000    0.000    0.000    0.000 _weakrefset.py:82(add)
        1    0.000    0.000    1.561    1.561 client.py:36(test_function)
        2    0.000    0.000    0.000    0.000 singleton.py:4(__call__)
        1    0.000    0.000    0.000    0.000 thread_builder.py:115(__init__)
        1    0.000    0.000    0.000    0.000 thread_builder.py:131(config)
        1    0.000    0.000    0.000    0.000 thread_builder.py:177(get_thread)
        1    0.000    0.000    1.561    1.561 threading.py:1001(join)
        1    0.000    0.000    1.561    1.561 threading.py:1039(_wait_for_tstate_lock)
        2    0.000    0.000    0.000    0.000 threading.py:1107(daemon)
        1    0.000    0.000    0.000    0.000 threading.py:1189(_make_invoke_excepthook)
        2    0.000    0.000    0.000    0.000 threading.py:1318(current_thread)
        3    0.000    0.000    0.000    0.000 threading.py:228(__init__)
        1    0.000    0.000    0.000    0.000 threading.py:256(__enter__)
        1    0.000    0.000    0.000    0.000 threading.py:259(__exit__)
        1    0.000    0.000    0.000    0.000 threading.py:265(_release_save)
        1    0.000    0.000    0.000    0.000 threading.py:268(_acquire_restore)
        1    0.000    0.000    0.000    0.000 threading.py:271(_is_owned)
        1    0.000    0.000    0.000    0.000 threading.py:280(wait)
        3    0.000    0.000    0.000    0.000 threading.py:521(__init__)
        2    0.000    0.000    0.000    0.000 threading.py:529(is_set)
        1    0.000    0.000    0.000    0.000 threading.py:556(wait)
        1    0.000    0.000    0.000    0.000 threading.py:750(_newname)
        1    0.000    0.000    0.000    0.000 threading.py:777(__init__)
        1    0.000    0.000    0.000    0.000 threading.py:855(start)
        1    0.000    0.000    0.000    0.000 threading.py:966(_stop)
        4    0.000    0.000    0.000    0.000 {built-in method _thread.allocate_lock}
        2    0.000    0.000    0.000    0.000 {built-in method _thread.get_ident}
        1    0.000    0.000    0.000    0.000 {built-in method _thread.start_new_thread}
        1    0.000    0.000    1.561    1.561 {built-in method builtins.exec}
        1    0.000    0.000    0.000    0.000 {method '__enter__' of '_thread.lock' objects}
        3    0.000    0.000    0.000    0.000 {method '__exit__' of '_thread.lock' objects}
        5    1.561    0.312    1.561    0.312 {method 'acquire' of '_thread.lock' objects}
        1    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
        1    0.000    0.000    0.000    0.000 {method 'append' of 'collections.deque' objects}
        1    0.000    0.000    0.000    0.000 {method 'append' of 'list' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        1    0.000    0.000    0.000    0.000 {method 'discard' of 'set' objects}
        1    0.000    0.000    0.000    0.000 {method 'locked' of '_thread.lock' objects}
        2    0.000    0.000    0.000    0.000 {method 'release' of '_thread.lock' objects}



====== THIRD POOL, 1 THREADS, 1000 OBJECTS, 10000 OPERATIONS INSIDE FUNCTION ======

         59 function calls in 1.560 seconds

   Ordered by: standard name

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000    1.560    1.560 <string>:1(<module>)
        1    0.000    0.000    0.000    0.000 _weakrefset.py:82(add)
        1    0.000    0.000    1.560    1.560 client.py:36(test_function)
        2    0.000    0.000    0.000    0.000 singleton.py:4(__call__)
        1    0.000    0.000    0.000    0.000 thread_builder.py:115(__init__)
        1    0.000    0.000    0.000    0.000 thread_builder.py:131(config)
        1    0.000    0.000    0.000    0.000 thread_builder.py:177(get_thread)
        1    0.000    0.000    1.560    1.560 threading.py:1001(join)
        1    0.000    0.000    1.560    1.560 threading.py:1039(_wait_for_tstate_lock)
        2    0.000    0.000    0.000    0.000 threading.py:1107(daemon)
        1    0.000    0.000    0.000    0.000 threading.py:1189(_make_invoke_excepthook)
        2    0.000    0.000    0.000    0.000 threading.py:1318(current_thread)
        3    0.000    0.000    0.000    0.000 threading.py:228(__init__)
        1    0.000    0.000    0.000    0.000 threading.py:256(__enter__)
        1    0.000    0.000    0.000    0.000 threading.py:259(__exit__)
        1    0.000    0.000    0.000    0.000 threading.py:265(_release_save)
        1    0.000    0.000    0.000    0.000 threading.py:268(_acquire_restore)
        1    0.000    0.000    0.000    0.000 threading.py:271(_is_owned)
        1    0.000    0.000    0.000    0.000 threading.py:280(wait)
        3    0.000    0.000    0.000    0.000 threading.py:521(__init__)
        2    0.000    0.000    0.000    0.000 threading.py:529(is_set)
        1    0.000    0.000    0.000    0.000 threading.py:556(wait)
        1    0.000    0.000    0.000    0.000 threading.py:750(_newname)
        1    0.000    0.000    0.000    0.000 threading.py:777(__init__)
        1    0.000    0.000    0.000    0.000 threading.py:855(start)
        1    0.000    0.000    0.000    0.000 threading.py:966(_stop)
        4    0.000    0.000    0.000    0.000 {built-in method _thread.allocate_lock}
        2    0.000    0.000    0.000    0.000 {built-in method _thread.get_ident}
        1    0.000    0.000    0.000    0.000 {built-in method _thread.start_new_thread}
        1    0.000    0.000    1.560    1.560 {built-in method builtins.exec}
        1    0.000    0.000    0.000    0.000 {method '__enter__' of '_thread.lock' objects}
        3    0.000    0.000    0.000    0.000 {method '__exit__' of '_thread.lock' objects}
        5    1.560    0.312    1.560    0.312 {method 'acquire' of '_thread.lock' objects}
        1    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
        1    0.000    0.000    0.000    0.000 {method 'append' of 'collections.deque' objects}
        1    0.000    0.000    0.000    0.000 {method 'append' of 'list' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        1    0.000    0.000    0.000    0.000 {method 'discard' of 'set' objects}
        1    0.000    0.000    0.000    0.000 {method 'locked' of '_thread.lock' objects}
        2    0.000    0.000    0.000    0.000 {method 'release' of '_thread.lock' objects}



====== FIRST POOL, 100 THREADS, 1000 OBJECTS, 10000 OPERATIONS INSIDE FUNCTION ======

         5504 function calls in 2.341 seconds

   Ordered by: standard name

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000    2.341    2.341 <string>:1(<module>)
      100    0.000    0.000    0.000    0.000 _weakrefset.py:82(add)
        1    0.000    0.000    2.341    2.341 client.py:36(test_function)
      200    0.000    0.000    0.000    0.000 singleton.py:4(__call__)
      100    0.000    0.000    0.001    0.000 thread_builder.py:115(__init__)
      100    0.000    0.000    0.002    0.000 thread_builder.py:131(config)
      100    0.000    0.000    0.003    0.000 thread_builder.py:177(get_thread)
      100    0.000    0.000    2.316    0.023 threading.py:1001(join)
      100    0.000    0.000    2.316    0.023 threading.py:1039(_wait_for_tstate_lock)
      200    0.000    0.000    0.000    0.000 threading.py:1107(daemon)
      100    0.000    0.000    0.000    0.000 threading.py:1189(_make_invoke_excepthook)
      200    0.000    0.000    0.000    0.000 threading.py:1318(current_thread)
      300    0.001    0.000    0.001    0.000 threading.py:228(__init__)
      100    0.000    0.000    0.000    0.000 threading.py:256(__enter__)
      100    0.000    0.000    0.000    0.000 threading.py:259(__exit__)
      100    0.000    0.000    0.000    0.000 threading.py:265(_release_save)
      100    0.000    0.000    0.000    0.000 threading.py:268(_acquire_restore)
      100    0.000    0.000    0.000    0.000 threading.py:271(_is_owned)
      100    0.000    0.000    0.015    0.000 threading.py:280(wait)
      300    0.000    0.000    0.002    0.000 threading.py:521(__init__)
      200    0.000    0.000    0.000    0.000 threading.py:529(is_set)
      100    0.001    0.000    0.016    0.000 threading.py:556(wait)
      100    0.000    0.000    0.000    0.000 threading.py:750(_newname)
      100    0.000    0.000    0.001    0.000 threading.py:777(__init__)
      100    0.001    0.000    0.021    0.000 threading.py:855(start)
      100    0.000    0.000    0.000    0.000 threading.py:966(_stop)
      400    0.001    0.000    0.001    0.000 {built-in method _thread.allocate_lock}
      200    0.000    0.000    0.000    0.000 {built-in method _thread.get_ident}
      100    0.005    0.000    0.005    0.000 {built-in method _thread.start_new_thread}
        1    0.000    0.000    2.341    2.341 {built-in method builtins.exec}
      100    0.000    0.000    0.000    0.000 {method '__enter__' of '_thread.lock' objects}
      300    0.000    0.000    0.000    0.000 {method '__exit__' of '_thread.lock' objects}
      500    2.329    0.005    2.329    0.005 {method 'acquire' of '_thread.lock' objects}
      100    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
      100    0.000    0.000    0.000    0.000 {method 'append' of 'collections.deque' objects}
      100    0.000    0.000    0.000    0.000 {method 'append' of 'list' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
      100    0.000    0.000    0.000    0.000 {method 'discard' of 'set' objects}
      100    0.000    0.000    0.000    0.000 {method 'locked' of '_thread.lock' objects}
      200    0.000    0.000    0.000    0.000 {method 'release' of '_thread.lock' objects}



====== SECOND POOL, 100 THREADS, 1000 OBJECTS, 10000 OPERATIONS INSIDE FUNCTION ======

         5504 function calls in 2.387 seconds

   Ordered by: standard name

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000    2.387    2.387 <string>:1(<module>)
      100    0.000    0.000    0.000    0.000 _weakrefset.py:82(add)
        1    0.000    0.000    2.387    2.387 client.py:36(test_function)
      200    0.000    0.000    0.000    0.000 singleton.py:4(__call__)
      100    0.000    0.000    0.001    0.000 thread_builder.py:115(__init__)
      100    0.000    0.000    0.002    0.000 thread_builder.py:131(config)
      100    0.000    0.000    0.004    0.000 thread_builder.py:177(get_thread)
      100    0.000    0.000    2.362    0.024 threading.py:1001(join)
      100    0.000    0.000    2.361    0.024 threading.py:1039(_wait_for_tstate_lock)
      200    0.000    0.000    0.000    0.000 threading.py:1107(daemon)
      100    0.000    0.000    0.000    0.000 threading.py:1189(_make_invoke_excepthook)
      200    0.000    0.000    0.000    0.000 threading.py:1318(current_thread)
      300    0.001    0.000    0.001    0.000 threading.py:228(__init__)
      100    0.000    0.000    0.000    0.000 threading.py:256(__enter__)
      100    0.000    0.000    0.000    0.000 threading.py:259(__exit__)
      100    0.000    0.000    0.000    0.000 threading.py:265(_release_save)
      100    0.000    0.000    0.000    0.000 threading.py:268(_acquire_restore)
      100    0.000    0.000    0.000    0.000 threading.py:271(_is_owned)
      100    0.000    0.000    0.015    0.000 threading.py:280(wait)
      300    0.000    0.000    0.002    0.000 threading.py:521(__init__)
      200    0.000    0.000    0.000    0.000 threading.py:529(is_set)
      100    0.001    0.000    0.016    0.000 threading.py:556(wait)
      100    0.000    0.000    0.000    0.000 threading.py:750(_newname)
      100    0.000    0.000    0.002    0.000 threading.py:777(__init__)
      100    0.000    0.000    0.021    0.000 threading.py:855(start)
      100    0.000    0.000    0.000    0.000 threading.py:966(_stop)
      400    0.001    0.000    0.001    0.000 {built-in method _thread.allocate_lock}
      200    0.000    0.000    0.000    0.000 {built-in method _thread.get_ident}
      100    0.005    0.000    0.005    0.000 {built-in method _thread.start_new_thread}
        1    0.000    0.000    2.387    2.387 {built-in method builtins.exec}
      100    0.000    0.000    0.000    0.000 {method '__enter__' of '_thread.lock' objects}
      300    0.000    0.000    0.000    0.000 {method '__exit__' of '_thread.lock' objects}
      500    2.374    0.005    2.374    0.005 {method 'acquire' of '_thread.lock' objects}
      100    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
      100    0.000    0.000    0.000    0.000 {method 'append' of 'collections.deque' objects}
      100    0.000    0.000    0.000    0.000 {method 'append' of 'list' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
      100    0.000    0.000    0.000    0.000 {method 'discard' of 'set' objects}
      100    0.000    0.000    0.000    0.000 {method 'locked' of '_thread.lock' objects}
      200    0.000    0.000    0.000    0.000 {method 'release' of '_thread.lock' objects}



====== THIRD POOL, 100 THREADS, 1000 OBJECTS, 10000 OPERATIONS INSIDE FUNCTION ======

         5504 function calls in 2.357 seconds

   Ordered by: standard name

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000    2.357    2.357 <string>:1(<module>)
      100    0.000    0.000    0.000    0.000 _weakrefset.py:82(add)
        1    0.000    0.000    2.357    2.357 client.py:36(test_function)
      200    0.000    0.000    0.000    0.000 singleton.py:4(__call__)
      100    0.000    0.000    0.001    0.000 thread_builder.py:115(__init__)
      100    0.000    0.000    0.002    0.000 thread_builder.py:131(config)
      100    0.000    0.000    0.004    0.000 thread_builder.py:177(get_thread)
      100    0.001    0.000    2.303    0.023 threading.py:1001(join)
      100    0.000    0.000    2.302    0.023 threading.py:1039(_wait_for_tstate_lock)
      200    0.000    0.000    0.000    0.000 threading.py:1107(daemon)
      100    0.000    0.000    0.000    0.000 threading.py:1189(_make_invoke_excepthook)
      200    0.000    0.000    0.000    0.000 threading.py:1318(current_thread)
      300    0.001    0.000    0.001    0.000 threading.py:228(__init__)
      100    0.000    0.000    0.000    0.000 threading.py:256(__enter__)
      100    0.000    0.000    0.000    0.000 threading.py:259(__exit__)
      100    0.000    0.000    0.000    0.000 threading.py:265(_release_save)
      100    0.000    0.000    0.000    0.000 threading.py:268(_acquire_restore)
      100    0.000    0.000    0.000    0.000 threading.py:271(_is_owned)
      100    0.001    0.000    0.041    0.000 threading.py:280(wait)
      300    0.000    0.000    0.002    0.000 threading.py:521(__init__)
      200    0.000    0.000    0.000    0.000 threading.py:529(is_set)
      100    0.001    0.000    0.043    0.000 threading.py:556(wait)
      100    0.000    0.000    0.000    0.000 threading.py:750(_newname)
      100    0.001    0.000    0.002    0.000 threading.py:777(__init__)
      100    0.001    0.000    0.050    0.001 threading.py:855(start)
      100    0.000    0.000    0.000    0.000 threading.py:966(_stop)
      400    0.001    0.000    0.001    0.000 {built-in method _thread.allocate_lock}
      200    0.000    0.000    0.000    0.000 {built-in method _thread.get_ident}
      100    0.007    0.000    0.007    0.000 {built-in method _thread.start_new_thread}
        1    0.000    0.000    2.357    2.357 {built-in method builtins.exec}
      100    0.000    0.000    0.000    0.000 {method '__enter__' of '_thread.lock' objects}
      300    0.000    0.000    0.000    0.000 {method '__exit__' of '_thread.lock' objects}
      500    2.341    0.005    2.341    0.005 {method 'acquire' of '_thread.lock' objects}
      100    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
      100    0.000    0.000    0.000    0.000 {method 'append' of 'collections.deque' objects}
      100    0.000    0.000    0.000    0.000 {method 'append' of 'list' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
      100    0.000    0.000    0.000    0.000 {method 'discard' of 'set' objects}
      100    0.000    0.000    0.000    0.000 {method 'locked' of '_thread.lock' objects}
      200    0.000    0.000    0.000    0.000 {method 'release' of '_thread.lock' objects}



====== FIRST POOL, 200 THREADS, 1000 OBJECTS, 10000 OPERATIONS INSIDE FUNCTION ======

         11004 function calls in 2.759 seconds

   Ordered by: standard name

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000    2.759    2.759 <string>:1(<module>)
      200    0.000    0.000    0.000    0.000 _weakrefset.py:82(add)
        1    0.001    0.001    2.759    2.759 client.py:36(test_function)
      400    0.000    0.000    0.000    0.000 singleton.py:4(__call__)
      200    0.001    0.000    0.002    0.000 thread_builder.py:115(__init__)
      200    0.001    0.000    0.004    0.000 thread_builder.py:131(config)
      200    0.000    0.000    0.008    0.000 thread_builder.py:177(get_thread)
      200    0.001    0.000    2.616    0.013 threading.py:1001(join)
      200    0.000    0.000    2.615    0.013 threading.py:1039(_wait_for_tstate_lock)
      400    0.000    0.000    0.000    0.000 threading.py:1107(daemon)
      200    0.001    0.000    0.001    0.000 threading.py:1189(_make_invoke_excepthook)
      400    0.000    0.000    0.000    0.000 threading.py:1318(current_thread)
      600    0.002    0.000    0.002    0.000 threading.py:228(__init__)
      200    0.000    0.000    0.000    0.000 threading.py:256(__enter__)
      200    0.000    0.000    0.000    0.000 threading.py:259(__exit__)
      200    0.000    0.000    0.000    0.000 threading.py:265(_release_save)
      200    0.000    0.000    0.000    0.000 threading.py:268(_acquire_restore)
      200    0.000    0.000    0.000    0.000 threading.py:271(_is_owned)
      200    0.001    0.000    0.119    0.001 threading.py:280(wait)
      600    0.001    0.000    0.004    0.000 threading.py:521(__init__)
      400    0.000    0.000    0.000    0.000 threading.py:529(is_set)
      200    0.001    0.000    0.121    0.001 threading.py:556(wait)
      200    0.000    0.000    0.000    0.000 threading.py:750(_newname)
      200    0.001    0.000    0.003    0.000 threading.py:777(__init__)
      200    0.001    0.000    0.135    0.001 threading.py:855(start)
      200    0.000    0.000    0.000    0.000 threading.py:966(_stop)
      800    0.002    0.000    0.002    0.000 {built-in method _thread.allocate_lock}
      400    0.000    0.000    0.000    0.000 {built-in method _thread.get_ident}
      200    0.012    0.000    0.012    0.000 {built-in method _thread.start_new_thread}
        1    0.000    0.000    2.759    2.759 {built-in method builtins.exec}
      200    0.000    0.000    0.000    0.000 {method '__enter__' of '_thread.lock' objects}
      600    0.000    0.000    0.000    0.000 {method '__exit__' of '_thread.lock' objects}
     1000    2.731    0.003    2.731    0.003 {method 'acquire' of '_thread.lock' objects}
      200    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
      200    0.000    0.000    0.000    0.000 {method 'append' of 'collections.deque' objects}
      200    0.000    0.000    0.000    0.000 {method 'append' of 'list' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
      200    0.000    0.000    0.000    0.000 {method 'discard' of 'set' objects}
      200    0.000    0.000    0.000    0.000 {method 'locked' of '_thread.lock' objects}
      400    0.000    0.000    0.000    0.000 {method 'release' of '_thread.lock' objects}



====== SECOND POOL, 200 THREADS, 1000 OBJECTS, 10000 OPERATIONS INSIDE FUNCTION ======

         11004 function calls in 2.901 seconds

   Ordered by: standard name

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000    2.901    2.901 <string>:1(<module>)
      200    0.000    0.000    0.000    0.000 _weakrefset.py:82(add)
        1    0.000    0.000    2.901    2.901 client.py:36(test_function)
      400    0.000    0.000    0.000    0.000 singleton.py:4(__call__)
      200    0.001    0.000    0.002    0.000 thread_builder.py:115(__init__)
      200    0.001    0.000    0.003    0.000 thread_builder.py:131(config)
      200    0.000    0.000    0.006    0.000 thread_builder.py:177(get_thread)
      200    0.001    0.000    2.815    0.014 threading.py:1001(join)
      200    0.000    0.000    2.814    0.014 threading.py:1039(_wait_for_tstate_lock)
      400    0.000    0.000    0.000    0.000 threading.py:1107(daemon)
      200    0.000    0.000    0.000    0.000 threading.py:1189(_make_invoke_excepthook)
      400    0.000    0.000    0.000    0.000 threading.py:1318(current_thread)
      600    0.001    0.000    0.001    0.000 threading.py:228(__init__)
      200    0.000    0.000    0.000    0.000 threading.py:256(__enter__)
      200    0.000    0.000    0.000    0.000 threading.py:259(__exit__)
      200    0.000    0.000    0.000    0.000 threading.py:265(_release_save)
      200    0.000    0.000    0.000    0.000 threading.py:268(_acquire_restore)
      200    0.000    0.000    0.000    0.000 threading.py:271(_is_owned)
      200    0.001    0.000    0.068    0.000 threading.py:280(wait)
      600    0.000    0.000    0.003    0.000 threading.py:521(__init__)
      400    0.000    0.000    0.000    0.000 threading.py:529(is_set)
      200    0.001    0.000    0.069    0.000 threading.py:556(wait)
      200    0.000    0.000    0.000    0.000 threading.py:750(_newname)
      200    0.001    0.000    0.002    0.000 threading.py:777(__init__)
      200    0.001    0.000    0.079    0.000 threading.py:855(start)
      200    0.000    0.000    0.001    0.000 threading.py:966(_stop)
      800    0.002    0.000    0.002    0.000 {built-in method _thread.allocate_lock}
      400    0.000    0.000    0.000    0.000 {built-in method _thread.get_ident}
      200    0.009    0.000    0.009    0.000 {built-in method _thread.start_new_thread}
        1    0.000    0.000    2.901    2.901 {built-in method builtins.exec}
      200    0.000    0.000    0.000    0.000 {method '__enter__' of '_thread.lock' objects}
      600    0.000    0.000    0.000    0.000 {method '__exit__' of '_thread.lock' objects}
     1000    2.878    0.003    2.878    0.003 {method 'acquire' of '_thread.lock' objects}
      200    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
      200    0.000    0.000    0.000    0.000 {method 'append' of 'collections.deque' objects}
      200    0.000    0.000    0.000    0.000 {method 'append' of 'list' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
      200    0.000    0.000    0.000    0.000 {method 'discard' of 'set' objects}
      200    0.000    0.000    0.000    0.000 {method 'locked' of '_thread.lock' objects}
      400    0.000    0.000    0.000    0.000 {method 'release' of '_thread.lock' objects}



====== THIRD POOL, 200 THREADS, 1000 OBJECTS, 10000 OPERATIONS INSIDE FUNCTION ======

         11004 function calls in 2.636 seconds

   Ordered by: standard name

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000    2.636    2.636 <string>:1(<module>)
      200    0.000    0.000    0.000    0.000 _weakrefset.py:82(add)
        1    0.001    0.001    2.636    2.636 client.py:36(test_function)
      400    0.000    0.000    0.000    0.000 singleton.py:4(__call__)
      200    0.001    0.000    0.002    0.000 thread_builder.py:115(__init__)
      200    0.001    0.000    0.005    0.000 thread_builder.py:131(config)
      200    0.000    0.000    0.009    0.000 thread_builder.py:177(get_thread)
      200    0.001    0.000    2.506    0.013 threading.py:1001(join)
      200    0.000    0.000    2.505    0.013 threading.py:1039(_wait_for_tstate_lock)
      400    0.000    0.000    0.000    0.000 threading.py:1107(daemon)
      200    0.001    0.000    0.001    0.000 threading.py:1189(_make_invoke_excepthook)
      400    0.000    0.000    0.000    0.000 threading.py:1318(current_thread)
      600    0.002    0.000    0.002    0.000 threading.py:228(__init__)
      200    0.000    0.000    0.000    0.000 threading.py:256(__enter__)
      200    0.000    0.000    0.000    0.000 threading.py:259(__exit__)
      200    0.000    0.000    0.000    0.000 threading.py:265(_release_save)
      200    0.000    0.000    0.000    0.000 threading.py:268(_acquire_restore)
      200    0.000    0.000    0.000    0.000 threading.py:271(_is_owned)
      200    0.001    0.000    0.108    0.001 threading.py:280(wait)
      600    0.001    0.000    0.004    0.000 threading.py:521(__init__)
      400    0.000    0.000    0.000    0.000 threading.py:529(is_set)
      200    0.001    0.000    0.109    0.001 threading.py:556(wait)
      200    0.000    0.000    0.000    0.000 threading.py:750(_newname)
      200    0.001    0.000    0.004    0.000 threading.py:777(__init__)
      200    0.001    0.000    0.121    0.001 threading.py:855(start)
      200    0.000    0.000    0.001    0.000 threading.py:966(_stop)
      800    0.002    0.000    0.002    0.000 {built-in method _thread.allocate_lock}
      400    0.000    0.000    0.000    0.000 {built-in method _thread.get_ident}
      200    0.010    0.000    0.010    0.000 {built-in method _thread.start_new_thread}
        1    0.000    0.000    2.636    2.636 {built-in method builtins.exec}
      200    0.000    0.000    0.000    0.000 {method '__enter__' of '_thread.lock' objects}
      600    0.000    0.000    0.000    0.000 {method '__exit__' of '_thread.lock' objects}
     1000    2.610    0.003    2.610    0.003 {method 'acquire' of '_thread.lock' objects}
      200    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
      200    0.000    0.000    0.000    0.000 {method 'append' of 'collections.deque' objects}
      200    0.000    0.000    0.000    0.000 {method 'append' of 'list' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
      200    0.000    0.000    0.000    0.000 {method 'discard' of 'set' objects}
      200    0.000    0.000    0.000    0.000 {method 'locked' of '_thread.lock' objects}
      400    0.000    0.000    0.000    0.000 {method 'release' of '_thread.lock' objects}



====== FIRST POOL, 300 THREADS, 1000 OBJECTS, 10000 OPERATIONS INSIDE FUNCTION ======

         16504 function calls in 3.981 seconds

   Ordered by: standard name

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000    3.981    3.981 <string>:1(<module>)
      300    0.000    0.000    0.001    0.000 _weakrefset.py:82(add)
        1    0.001    0.001    3.981    3.981 client.py:36(test_function)
      600    0.000    0.000    0.000    0.000 singleton.py:4(__call__)
      300    0.002    0.000    0.004    0.000 thread_builder.py:115(__init__)
      300    0.002    0.000    0.008    0.000 thread_builder.py:131(config)
      300    0.001    0.000    0.014    0.000 thread_builder.py:177(get_thread)
      300    0.001    0.000    3.005    0.010 threading.py:1001(join)
      300    0.001    0.000    3.003    0.010 threading.py:1039(_wait_for_tstate_lock)
      600    0.000    0.000    0.000    0.000 threading.py:1107(daemon)
      300    0.000    0.000    0.000    0.000 threading.py:1189(_make_invoke_excepthook)
      600    0.000    0.000    0.000    0.000 threading.py:1318(current_thread)
      900    0.003    0.000    0.003    0.000 threading.py:228(__init__)
      300    0.000    0.000    0.001    0.000 threading.py:256(__enter__)
      300    0.000    0.000    0.000    0.000 threading.py:259(__exit__)
      300    0.000    0.000    0.000    0.000 threading.py:265(_release_save)
      300    0.000    0.000    0.000    0.000 threading.py:268(_acquire_restore)
      300    0.000    0.000    0.000    0.000 threading.py:271(_is_owned)
      300    0.002    0.000    0.930    0.003 threading.py:280(wait)
      900    0.001    0.000    0.006    0.000 threading.py:521(__init__)
      600    0.000    0.000    0.000    0.000 threading.py:529(is_set)
      300    0.003    0.000    0.933    0.003 threading.py:556(wait)
      300    0.000    0.000    0.000    0.000 threading.py:750(_newname)
      300    0.002    0.000    0.006    0.000 threading.py:777(__init__)
      300    0.002    0.000    0.961    0.003 threading.py:855(start)
      300    0.001    0.000    0.001    0.000 threading.py:966(_stop)
     1200    0.005    0.000    0.005    0.000 {built-in method _thread.allocate_lock}
      600    0.000    0.000    0.000    0.000 {built-in method _thread.get_ident}
      300    0.025    0.000    0.025    0.000 {built-in method _thread.start_new_thread}
        1    0.000    0.000    3.981    3.981 {built-in method builtins.exec}
      300    0.000    0.000    0.000    0.000 {method '__enter__' of '_thread.lock' objects}
      900    0.000    0.000    0.000    0.000 {method '__exit__' of '_thread.lock' objects}
     1500    3.926    0.003    3.926    0.003 {method 'acquire' of '_thread.lock' objects}
      300    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
      300    0.000    0.000    0.000    0.000 {method 'append' of 'collections.deque' objects}
      300    0.000    0.000    0.000    0.000 {method 'append' of 'list' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
      300    0.000    0.000    0.000    0.000 {method 'discard' of 'set' objects}
      300    0.000    0.000    0.000    0.000 {method 'locked' of '_thread.lock' objects}
      600    0.000    0.000    0.000    0.000 {method 'release' of '_thread.lock' objects}



====== SECOND POOL, 300 THREADS, 1000 OBJECTS, 10000 OPERATIONS INSIDE FUNCTION ======

         16504 function calls in 3.894 seconds

   Ordered by: standard name

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000    3.894    3.894 <string>:1(<module>)
      300    0.000    0.000    0.000    0.000 _weakrefset.py:82(add)
        1    0.001    0.001    3.894    3.894 client.py:36(test_function)
      600    0.000    0.000    0.000    0.000 singleton.py:4(__call__)
      300    0.002    0.000    0.004    0.000 thread_builder.py:115(__init__)
      300    0.001    0.000    0.007    0.000 thread_builder.py:131(config)
      300    0.000    0.000    0.012    0.000 thread_builder.py:177(get_thread)
      300    0.001    0.000    2.698    0.009 threading.py:1001(join)
      300    0.000    0.000    2.696    0.009 threading.py:1039(_wait_for_tstate_lock)
      600    0.000    0.000    0.000    0.000 threading.py:1107(daemon)
      300    0.000    0.000    0.000    0.000 threading.py:1189(_make_invoke_excepthook)
      600    0.000    0.000    0.000    0.000 threading.py:1318(current_thread)
      900    0.002    0.000    0.002    0.000 threading.py:228(__init__)
      300    0.000    0.000    0.000    0.000 threading.py:256(__enter__)
      300    0.000    0.000    0.000    0.000 threading.py:259(__exit__)
      300    0.000    0.000    0.000    0.000 threading.py:265(_release_save)
      300    0.000    0.000    0.000    0.000 threading.py:268(_acquire_restore)
      300    0.000    0.000    0.000    0.000 threading.py:271(_is_owned)
      300    0.002    0.000    1.154    0.004 threading.py:280(wait)
      900    0.001    0.000    0.006    0.000 threading.py:521(__init__)
      600    0.000    0.000    0.000    0.000 threading.py:529(is_set)
      300    0.003    0.000    1.158    0.004 threading.py:556(wait)
      300    0.000    0.000    0.000    0.000 threading.py:750(_newname)
      300    0.002    0.000    0.005    0.000 threading.py:777(__init__)
      300    0.002    0.000    1.183    0.004 threading.py:855(start)
      300    0.001    0.000    0.001    0.000 threading.py:966(_stop)
     1200    0.004    0.000    0.004    0.000 {built-in method _thread.allocate_lock}
      600    0.000    0.000    0.000    0.000 {built-in method _thread.get_ident}
      300    0.023    0.000    0.023    0.000 {built-in method _thread.start_new_thread}
        1    0.000    0.000    3.894    3.894 {built-in method builtins.exec}
      300    0.000    0.000    0.000    0.000 {method '__enter__' of '_thread.lock' objects}
      900    0.000    0.000    0.000    0.000 {method '__exit__' of '_thread.lock' objects}
     1500    3.845    0.003    3.845    0.003 {method 'acquire' of '_thread.lock' objects}
      300    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
      300    0.000    0.000    0.000    0.000 {method 'append' of 'collections.deque' objects}
      300    0.000    0.000    0.000    0.000 {method 'append' of 'list' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
      300    0.000    0.000    0.000    0.000 {method 'discard' of 'set' objects}
      300    0.000    0.000    0.000    0.000 {method 'locked' of '_thread.lock' objects}
      600    0.000    0.000    0.000    0.000 {method 'release' of '_thread.lock' objects}



====== THIRD POOL, 300 THREADS, 1000 OBJECTS, 10000 OPERATIONS INSIDE FUNCTION ======

         16504 function calls in 3.775 seconds

   Ordered by: standard name

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000    3.775    3.775 <string>:1(<module>)
      300    0.000    0.000    0.000    0.000 _weakrefset.py:82(add)
        1    0.001    0.001    3.775    3.775 client.py:36(test_function)
      600    0.000    0.000    0.000    0.000 singleton.py:4(__call__)
      300    0.001    0.000    0.003    0.000 thread_builder.py:115(__init__)
      300    0.001    0.000    0.005    0.000 thread_builder.py:131(config)
      300    0.000    0.000    0.009    0.000 thread_builder.py:177(get_thread)
      300    0.001    0.000    2.832    0.009 threading.py:1001(join)
      300    0.000    0.000    2.830    0.009 threading.py:1039(_wait_for_tstate_lock)
      600    0.000    0.000    0.000    0.000 threading.py:1107(daemon)
      300    0.000    0.000    0.000    0.000 threading.py:1189(_make_invoke_excepthook)
      600    0.000    0.000    0.000    0.000 threading.py:1318(current_thread)
      900    0.002    0.000    0.002    0.000 threading.py:228(__init__)
      300    0.000    0.000    0.000    0.000 threading.py:256(__enter__)
      300    0.000    0.000    0.000    0.000 threading.py:259(__exit__)
      300    0.000    0.000    0.000    0.000 threading.py:265(_release_save)
      300    0.000    0.000    0.000    0.000 threading.py:268(_acquire_restore)
      300    0.000    0.000    0.000    0.000 threading.py:271(_is_owned)
      300    0.001    0.000    0.913    0.003 threading.py:280(wait)
      900    0.001    0.000    0.004    0.000 threading.py:521(__init__)
      600    0.000    0.000    0.000    0.000 threading.py:529(is_set)
      300    0.002    0.000    0.916    0.003 threading.py:556(wait)
      300    0.000    0.000    0.000    0.000 threading.py:750(_newname)
      300    0.001    0.000    0.004    0.000 threading.py:777(__init__)
      300    0.001    0.000    0.933    0.003 threading.py:855(start)
      300    0.001    0.000    0.001    0.000 threading.py:966(_stop)
     1200    0.003    0.000    0.003    0.000 {built-in method _thread.allocate_lock}
      600    0.000    0.000    0.000    0.000 {built-in method _thread.get_ident}
      300    0.016    0.000    0.016    0.000 {built-in method _thread.start_new_thread}
        1    0.000    0.000    3.775    3.775 {built-in method builtins.exec}
      300    0.000    0.000    0.000    0.000 {method '__enter__' of '_thread.lock' objects}
      900    0.000    0.000    0.000    0.000 {method '__exit__' of '_thread.lock' objects}
     1500    3.739    0.002    3.739    0.002 {method 'acquire' of '_thread.lock' objects}
      300    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
      300    0.000    0.000    0.000    0.000 {method 'append' of 'collections.deque' objects}
      300    0.000    0.000    0.000    0.000 {method 'append' of 'list' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
      300    0.000    0.000    0.000    0.000 {method 'discard' of 'set' objects}
      300    0.000    0.000    0.000    0.000 {method 'locked' of '_thread.lock' objects}
      600    0.000    0.000    0.000    0.000 {method 'release' of '_thread.lock' objects}



====== FIRST POOL, 400 THREADS, 1000 OBJECTS, 10000 OPERATIONS INSIDE FUNCTION ======

         22004 function calls in 5.426 seconds

   Ordered by: standard name

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000    5.426    5.426 <string>:1(<module>)
      400    0.000    0.000    0.000    0.000 _weakrefset.py:82(add)
        1    0.001    0.001    5.426    5.426 client.py:36(test_function)
      800    0.000    0.000    0.000    0.000 singleton.py:4(__call__)
      400    0.002    0.000    0.004    0.000 thread_builder.py:115(__init__)
      400    0.001    0.000    0.007    0.000 thread_builder.py:131(config)
      400    0.000    0.000    0.013    0.000 thread_builder.py:177(get_thread)
      400    0.002    0.000    2.361    0.006 threading.py:1001(join)
      400    0.001    0.000    2.359    0.006 threading.py:1039(_wait_for_tstate_lock)
      800    0.000    0.000    0.000    0.000 threading.py:1107(daemon)
      400    0.000    0.000    0.000    0.000 threading.py:1189(_make_invoke_excepthook)
      800    0.000    0.000    0.000    0.000 threading.py:1318(current_thread)
     1200    0.002    0.000    0.002    0.000 threading.py:228(__init__)
      400    0.000    0.000    0.000    0.000 threading.py:256(__enter__)
      400    0.000    0.000    0.000    0.000 threading.py:259(__exit__)
      400    0.000    0.000    0.000    0.000 threading.py:265(_release_save)
      400    0.000    0.000    0.001    0.000 threading.py:268(_acquire_restore)
      400    0.000    0.000    0.000    0.000 threading.py:271(_is_owned)
      400    0.002    0.000    3.020    0.008 threading.py:280(wait)
     1200    0.001    0.000    0.006    0.000 threading.py:521(__init__)
      800    0.000    0.000    0.000    0.000 threading.py:529(is_set)
      400    0.003    0.000    3.023    0.008 threading.py:556(wait)
      400    0.000    0.000    0.000    0.000 threading.py:750(_newname)
      400    0.002    0.000    0.005    0.000 threading.py:777(__init__)
      400    0.002    0.000    3.051    0.008 threading.py:855(start)
      400    0.001    0.000    0.001    0.000 threading.py:966(_stop)
     1600    0.004    0.000    0.004    0.000 {built-in method _thread.allocate_lock}
      800    0.000    0.000    0.000    0.000 {built-in method _thread.get_ident}
      400    0.025    0.000    0.025    0.000 {built-in method _thread.start_new_thread}
        1    0.000    0.000    5.426    5.426 {built-in method builtins.exec}
      400    0.000    0.000    0.000    0.000 {method '__enter__' of '_thread.lock' objects}
     1200    0.000    0.000    0.000    0.000 {method '__exit__' of '_thread.lock' objects}
     2000    5.372    0.003    5.372    0.003 {method 'acquire' of '_thread.lock' objects}
      400    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
      400    0.000    0.000    0.000    0.000 {method 'append' of 'collections.deque' objects}
      400    0.000    0.000    0.000    0.000 {method 'append' of 'list' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
      400    0.000    0.000    0.000    0.000 {method 'discard' of 'set' objects}
      400    0.000    0.000    0.000    0.000 {method 'locked' of '_thread.lock' objects}
      800    0.000    0.000    0.000    0.000 {method 'release' of '_thread.lock' objects}



====== SECOND POOL, 400 THREADS, 1000 OBJECTS, 10000 OPERATIONS INSIDE FUNCTION ======

         22004 function calls in 5.882 seconds

   Ordered by: standard name

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000    5.882    5.882 <string>:1(<module>)
      400    0.000    0.000    0.000    0.000 _weakrefset.py:82(add)
        1    0.001    0.001    5.881    5.881 client.py:36(test_function)
      800    0.000    0.000    0.000    0.000 singleton.py:4(__call__)
      400    0.002    0.000    0.004    0.000 thread_builder.py:115(__init__)
      400    0.002    0.000    0.008    0.000 thread_builder.py:131(config)
      400    0.001    0.000    0.014    0.000 thread_builder.py:177(get_thread)
      400    0.002    0.000    2.133    0.005 threading.py:1001(join)
      400    0.001    0.000    2.131    0.005 threading.py:1039(_wait_for_tstate_lock)
      800    0.000    0.000    0.000    0.000 threading.py:1107(daemon)
      400    0.000    0.000    0.000    0.000 threading.py:1189(_make_invoke_excepthook)
      800    0.000    0.000    0.001    0.000 threading.py:1318(current_thread)
     1200    0.003    0.000    0.003    0.000 threading.py:228(__init__)
      400    0.000    0.000    0.001    0.000 threading.py:256(__enter__)
      400    0.000    0.000    0.000    0.000 threading.py:259(__exit__)
      400    0.000    0.000    0.000    0.000 threading.py:265(_release_save)
      400    0.000    0.000    0.001    0.000 threading.py:268(_acquire_restore)
      400    0.000    0.000    0.000    0.000 threading.py:271(_is_owned)
      400    0.003    0.000    3.695    0.009 threading.py:280(wait)
     1200    0.001    0.000    0.006    0.000 threading.py:521(__init__)
      800    0.000    0.000    0.000    0.000 threading.py:529(is_set)
      400    0.003    0.000    3.699    0.009 threading.py:556(wait)
      400    0.000    0.000    0.000    0.000 threading.py:750(_newname)
      400    0.002    0.000    0.006    0.000 threading.py:777(__init__)
      400    0.003    0.000    3.733    0.009 threading.py:855(start)
      400    0.001    0.000    0.001    0.000 threading.py:966(_stop)
     1600    0.005    0.000    0.005    0.000 {built-in method _thread.allocate_lock}
      800    0.000    0.000    0.000    0.000 {built-in method _thread.get_ident}
      400    0.030    0.000    0.030    0.000 {built-in method _thread.start_new_thread}
        1    0.000    0.000    5.882    5.882 {built-in method builtins.exec}
      400    0.000    0.000    0.000    0.000 {method '__enter__' of '_thread.lock' objects}
     1200    0.000    0.000    0.000    0.000 {method '__exit__' of '_thread.lock' objects}
     2000    5.817    0.003    5.817    0.003 {method 'acquire' of '_thread.lock' objects}
      400    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
      400    0.000    0.000    0.000    0.000 {method 'append' of 'collections.deque' objects}
      400    0.000    0.000    0.000    0.000 {method 'append' of 'list' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
      400    0.000    0.000    0.000    0.000 {method 'discard' of 'set' objects}
      400    0.000    0.000    0.000    0.000 {method 'locked' of '_thread.lock' objects}
      800    0.000    0.000    0.000    0.000 {method 'release' of '_thread.lock' objects}



====== THIRD POOL, 400 THREADS, 1000 OBJECTS, 10000 OPERATIONS INSIDE FUNCTION ======

         22004 function calls in 5.582 seconds

   Ordered by: standard name

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000    5.582    5.582 <string>:1(<module>)
      400    0.000    0.000    0.000    0.000 _weakrefset.py:82(add)
        1    0.001    0.001    5.582    5.582 client.py:36(test_function)
      800    0.000    0.000    0.000    0.000 singleton.py:4(__call__)
      400    0.001    0.000    0.003    0.000 thread_builder.py:115(__init__)
      400    0.002    0.000    0.007    0.000 thread_builder.py:131(config)
      400    0.000    0.000    0.012    0.000 thread_builder.py:177(get_thread)
      400    0.002    0.000    2.177    0.005 threading.py:1001(join)
      400    0.001    0.000    2.175    0.005 threading.py:1039(_wait_for_tstate_lock)
      800    0.000    0.000    0.000    0.000 threading.py:1107(daemon)
      400    0.000    0.000    0.000    0.000 threading.py:1189(_make_invoke_excepthook)
      800    0.000    0.000    0.000    0.000 threading.py:1318(current_thread)
     1200    0.002    0.000    0.002    0.000 threading.py:228(__init__)
      400    0.000    0.000    0.001    0.000 threading.py:256(__enter__)
      400    0.000    0.000    0.000    0.000 threading.py:259(__exit__)
      400    0.000    0.000    0.000    0.000 threading.py:265(_release_save)
      400    0.000    0.000    0.001    0.000 threading.py:268(_acquire_restore)
      400    0.000    0.000    0.000    0.000 threading.py:271(_is_owned)
      400    0.002    0.000    3.361    0.008 threading.py:280(wait)
     1200    0.001    0.000    0.006    0.000 threading.py:521(__init__)
      800    0.000    0.000    0.000    0.000 threading.py:529(is_set)
      400    0.003    0.000    3.365    0.008 threading.py:556(wait)
      400    0.000    0.000    0.000    0.000 threading.py:750(_newname)
      400    0.002    0.000    0.005    0.000 threading.py:777(__init__)
      400    0.002    0.000    3.392    0.008 threading.py:855(start)
      400    0.001    0.000    0.001    0.000 threading.py:966(_stop)
     1600    0.004    0.000    0.004    0.000 {built-in method _thread.allocate_lock}
      800    0.000    0.000    0.000    0.000 {built-in method _thread.get_ident}
      400    0.024    0.000    0.024    0.000 {built-in method _thread.start_new_thread}
        1    0.000    0.000    5.582    5.582 {built-in method builtins.exec}
      400    0.000    0.000    0.000    0.000 {method '__enter__' of '_thread.lock' objects}
     1200    0.000    0.000    0.000    0.000 {method '__exit__' of '_thread.lock' objects}
     2000    5.530    0.003    5.530    0.003 {method 'acquire' of '_thread.lock' objects}
      400    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
      400    0.000    0.000    0.000    0.000 {method 'append' of 'collections.deque' objects}
      400    0.000    0.000    0.000    0.000 {method 'append' of 'list' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
      400    0.000    0.000    0.000    0.000 {method 'discard' of 'set' objects}
      400    0.000    0.000    0.000    0.000 {method 'locked' of '_thread.lock' objects}
      800    0.000    0.000    0.000    0.000 {method 'release' of '_thread.lock' objects}



====== FIRST POOL, 500 THREADS, 1000 OBJECTS, 10000 OPERATIONS INSIDE FUNCTION ======

         27504 function calls in 6.349 seconds

   Ordered by: standard name

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000    6.349    6.349 <string>:1(<module>)
      500    0.000    0.000    0.001    0.000 _weakrefset.py:82(add)
        1    0.001    0.001    6.349    6.349 client.py:36(test_function)
     1000    0.000    0.000    0.000    0.000 singleton.py:4(__call__)
      500    0.002    0.000    0.005    0.000 thread_builder.py:115(__init__)
      500    0.002    0.000    0.009    0.000 thread_builder.py:131(config)
      500    0.001    0.000    0.032    0.000 thread_builder.py:177(get_thread)
      500    0.002    0.000    2.332    0.005 threading.py:1001(join)
      500    0.001    0.000    2.330    0.005 threading.py:1039(_wait_for_tstate_lock)
     1000    0.000    0.000    0.000    0.000 threading.py:1107(daemon)
      500    0.001    0.000    0.001    0.000 threading.py:1189(_make_invoke_excepthook)
     1000    0.001    0.000    0.001    0.000 threading.py:1318(current_thread)
     1500    0.003    0.000    0.003    0.000 threading.py:228(__init__)
      500    0.000    0.000    0.001    0.000 threading.py:256(__enter__)
      500    0.000    0.000    0.000    0.000 threading.py:259(__exit__)
      500    0.000    0.000    0.000    0.000 threading.py:265(_release_save)
      500    0.000    0.000    0.001    0.000 threading.py:268(_acquire_restore)
      500    0.000    0.000    0.000    0.000 threading.py:271(_is_owned)
      500    0.002    0.000    3.941    0.008 threading.py:280(wait)
     1500    0.001    0.000    0.008    0.000 threading.py:521(__init__)
     1000    0.000    0.000    0.000    0.000 threading.py:529(is_set)
      500    0.003    0.000    3.946    0.008 threading.py:556(wait)
      500    0.000    0.000    0.000    0.000 threading.py:750(_newname)
      500    0.017    0.000    0.022    0.000 threading.py:777(__init__)
      500    0.003    0.000    3.983    0.008 threading.py:855(start)
      500    0.001    0.000    0.001    0.000 threading.py:966(_stop)
     2000    0.006    0.000    0.006    0.000 {built-in method _thread.allocate_lock}
     1000    0.000    0.000    0.000    0.000 {built-in method _thread.get_ident}
      500    0.034    0.000    0.034    0.000 {built-in method _thread.start_new_thread}
        1    0.000    0.000    6.349    6.349 {built-in method builtins.exec}
      500    0.000    0.000    0.000    0.000 {method '__enter__' of '_thread.lock' objects}
     1500    0.000    0.000    0.000    0.000 {method '__exit__' of '_thread.lock' objects}
     2500    6.263    0.003    6.263    0.003 {method 'acquire' of '_thread.lock' objects}
      500    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
      500    0.000    0.000    0.000    0.000 {method 'append' of 'collections.deque' objects}
      500    0.000    0.000    0.000    0.000 {method 'append' of 'list' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
      500    0.000    0.000    0.000    0.000 {method 'discard' of 'set' objects}
      500    0.000    0.000    0.000    0.000 {method 'locked' of '_thread.lock' objects}
     1000    0.000    0.000    0.000    0.000 {method 'release' of '_thread.lock' objects}



====== SECOND POOL, 500 THREADS, 1000 OBJECTS, 10000 OPERATIONS INSIDE FUNCTION ======

         27504 function calls in 6.301 seconds

   Ordered by: standard name

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000    6.301    6.301 <string>:1(<module>)
      500    0.000    0.000    0.000    0.000 _weakrefset.py:82(add)
        1    0.001    0.001    6.301    6.301 client.py:36(test_function)
     1000    0.000    0.000    0.000    0.000 singleton.py:4(__call__)
      500    0.002    0.000    0.004    0.000 thread_builder.py:115(__init__)
      500    0.002    0.000    0.009    0.000 thread_builder.py:131(config)
      500    0.001    0.000    0.015    0.000 thread_builder.py:177(get_thread)
      500    0.002    0.000    2.334    0.005 threading.py:1001(join)
      500    0.001    0.000    2.332    0.005 threading.py:1039(_wait_for_tstate_lock)
     1000    0.000    0.000    0.000    0.000 threading.py:1107(daemon)
      500    0.001    0.000    0.001    0.000 threading.py:1189(_make_invoke_excepthook)
     1000    0.000    0.000    0.001    0.000 threading.py:1318(current_thread)
     1500    0.003    0.000    0.003    0.000 threading.py:228(__init__)
      500    0.000    0.000    0.001    0.000 threading.py:256(__enter__)
      500    0.000    0.000    0.000    0.000 threading.py:259(__exit__)
      500    0.000    0.000    0.000    0.000 threading.py:265(_release_save)
      500    0.000    0.000    0.001    0.000 threading.py:268(_acquire_restore)
      500    0.000    0.000    0.000    0.000 threading.py:271(_is_owned)
      500    0.002    0.000    3.912    0.008 threading.py:280(wait)
     1500    0.001    0.000    0.007    0.000 threading.py:521(__init__)
     1000    0.000    0.000    0.000    0.000 threading.py:529(is_set)
      500    0.003    0.000    3.916    0.008 threading.py:556(wait)
      500    0.000    0.000    0.000    0.000 threading.py:750(_newname)
      500    0.002    0.000    0.006    0.000 threading.py:777(__init__)
      500    0.003    0.000    3.950    0.008 threading.py:855(start)
      500    0.001    0.000    0.001    0.000 threading.py:966(_stop)
     2000    0.005    0.000    0.005    0.000 {built-in method _thread.allocate_lock}
     1000    0.000    0.000    0.000    0.000 {built-in method _thread.get_ident}
      500    0.031    0.000    0.031    0.000 {built-in method _thread.start_new_thread}
        1    0.000    0.000    6.301    6.301 {built-in method builtins.exec}
      500    0.000    0.000    0.000    0.000 {method '__enter__' of '_thread.lock' objects}
     1500    0.000    0.000    0.000    0.000 {method '__exit__' of '_thread.lock' objects}
     2500    6.236    0.002    6.236    0.002 {method 'acquire' of '_thread.lock' objects}
      500    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
      500    0.000    0.000    0.000    0.000 {method 'append' of 'collections.deque' objects}
      500    0.000    0.000    0.000    0.000 {method 'append' of 'list' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
      500    0.000    0.000    0.000    0.000 {method 'discard' of 'set' objects}
      500    0.000    0.000    0.000    0.000 {method 'locked' of '_thread.lock' objects}
     1000    0.000    0.000    0.000    0.000 {method 'release' of '_thread.lock' objects}



====== THIRD POOL, 500 THREADS, 1000 OBJECTS, 10000 OPERATIONS INSIDE FUNCTION ======

         27504 function calls in 6.314 seconds

   Ordered by: standard name

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000    6.314    6.314 <string>:1(<module>)
      500    0.000    0.000    0.000    0.000 _weakrefset.py:82(add)
        1    0.001    0.001    6.314    6.314 client.py:36(test_function)
     1000    0.000    0.000    0.000    0.000 singleton.py:4(__call__)
      500    0.002    0.000    0.005    0.000 thread_builder.py:115(__init__)
      500    0.002    0.000    0.009    0.000 thread_builder.py:131(config)
      500    0.001    0.000    0.016    0.000 thread_builder.py:177(get_thread)
      500    0.002    0.000    2.316    0.005 threading.py:1001(join)
      500    0.001    0.000    2.314    0.005 threading.py:1039(_wait_for_tstate_lock)
     1000    0.000    0.000    0.000    0.000 threading.py:1107(daemon)
      500    0.000    0.000    0.000    0.000 threading.py:1189(_make_invoke_excepthook)
     1000    0.000    0.000    0.001    0.000 threading.py:1318(current_thread)
     1500    0.003    0.000    0.003    0.000 threading.py:228(__init__)
      500    0.000    0.000    0.001    0.000 threading.py:256(__enter__)
      500    0.000    0.000    0.000    0.000 threading.py:259(__exit__)
      500    0.001    0.000    0.001    0.000 threading.py:265(_release_save)
      500    0.000    0.000    0.001    0.000 threading.py:268(_acquire_restore)
      500    0.000    0.000    0.001    0.000 threading.py:271(_is_owned)
      500    0.002    0.000    3.939    0.008 threading.py:280(wait)
     1500    0.001    0.000    0.007    0.000 threading.py:521(__init__)
     1000    0.000    0.000    0.000    0.000 threading.py:529(is_set)
      500    0.004    0.000    3.944    0.008 threading.py:556(wait)
      500    0.000    0.000    0.000    0.000 threading.py:750(_newname)
      500    0.002    0.000    0.006    0.000 threading.py:777(__init__)
      500    0.005    0.000    3.981    0.008 threading.py:855(start)
      500    0.001    0.000    0.001    0.000 threading.py:966(_stop)
     2000    0.007    0.000    0.007    0.000 {built-in method _thread.allocate_lock}
     1000    0.000    0.000    0.000    0.000 {built-in method _thread.get_ident}
      500    0.031    0.000    0.031    0.000 {built-in method _thread.start_new_thread}
        1    0.000    0.000    6.314    6.314 {built-in method builtins.exec}
      500    0.000    0.000    0.000    0.000 {method '__enter__' of '_thread.lock' objects}
     1500    0.000    0.000    0.000    0.000 {method '__exit__' of '_thread.lock' objects}
     2500    6.243    0.002    6.243    0.002 {method 'acquire' of '_thread.lock' objects}
      500    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
      500    0.000    0.000    0.000    0.000 {method 'append' of 'collections.deque' objects}
      500    0.000    0.000    0.000    0.000 {method 'append' of 'list' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
      500    0.000    0.000    0.000    0.000 {method 'discard' of 'set' objects}
      500    0.000    0.000    0.000    0.000 {method 'locked' of '_thread.lock' objects}
     1000    0.000    0.000    0.000    0.000 {method 'release' of '_thread.lock' objects}



====== FIRST POOL, 600 THREADS, 1000 OBJECTS, 10000 OPERATIONS INSIDE FUNCTION ======

         33004 function calls in 7.481 seconds

   Ordered by: standard name

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.001    0.001    7.481    7.481 <string>:1(<module>)
      600    0.000    0.000    0.001    0.000 _weakrefset.py:82(add)
        1    0.002    0.002    7.480    7.480 client.py:36(test_function)
     1200    0.000    0.000    0.000    0.000 singleton.py:4(__call__)
      600    0.002    0.000    0.006    0.000 thread_builder.py:115(__init__)
      600    0.002    0.000    0.011    0.000 thread_builder.py:131(config)
      600    0.001    0.000    0.021    0.000 thread_builder.py:177(get_thread)
      600    0.003    0.000    2.414    0.004 threading.py:1001(join)
      600    0.001    0.000    2.411    0.004 threading.py:1039(_wait_for_tstate_lock)
     1200    0.000    0.000    0.000    0.000 threading.py:1107(daemon)
      600    0.000    0.000    0.000    0.000 threading.py:1189(_make_invoke_excepthook)
     1200    0.001    0.000    0.001    0.000 threading.py:1318(current_thread)
     1800    0.004    0.000    0.004    0.000 threading.py:228(__init__)
      600    0.000    0.000    0.001    0.000 threading.py:256(__enter__)
      600    0.000    0.000    0.001    0.000 threading.py:259(__exit__)
      600    0.000    0.000    0.000    0.000 threading.py:265(_release_save)
      600    0.000    0.000    0.001    0.000 threading.py:268(_acquire_restore)
      600    0.000    0.000    0.001    0.000 threading.py:271(_is_owned)
      600    0.003    0.000    4.996    0.008 threading.py:280(wait)
     1800    0.001    0.000    0.010    0.000 threading.py:521(__init__)
     1200    0.001    0.000    0.001    0.000 threading.py:529(is_set)
      600    0.004    0.000    5.001    0.008 threading.py:556(wait)
      600    0.000    0.000    0.000    0.000 threading.py:750(_newname)
      600    0.003    0.000    0.009    0.000 threading.py:777(__init__)
      600    0.004    0.000    5.044    0.008 threading.py:855(start)
      600    0.001    0.000    0.002    0.000 threading.py:966(_stop)
     2400    0.007    0.000    0.007    0.000 {built-in method _thread.allocate_lock}
     1200    0.000    0.000    0.000    0.000 {built-in method _thread.get_ident}
      600    0.038    0.000    0.038    0.000 {built-in method _thread.start_new_thread}
        1    0.000    0.000    7.481    7.481 {built-in method builtins.exec}
      600    0.000    0.000    0.000    0.000 {method '__enter__' of '_thread.lock' objects}
     1800    0.000    0.000    0.000    0.000 {method '__exit__' of '_thread.lock' objects}
     3000    7.396    0.002    7.396    0.002 {method 'acquire' of '_thread.lock' objects}
      600    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
      600    0.000    0.000    0.000    0.000 {method 'append' of 'collections.deque' objects}
      600    0.000    0.000    0.000    0.000 {method 'append' of 'list' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
      600    0.000    0.000    0.000    0.000 {method 'discard' of 'set' objects}
      600    0.000    0.000    0.000    0.000 {method 'locked' of '_thread.lock' objects}
     1200    0.000    0.000    0.000    0.000 {method 'release' of '_thread.lock' objects}



====== SECOND POOL, 600 THREADS, 1000 OBJECTS, 10000 OPERATIONS INSIDE FUNCTION ======

         33004 function calls in 6.956 seconds

   Ordered by: standard name

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000    6.956    6.956 <string>:1(<module>)
      600    0.000    0.000    0.001    0.000 _weakrefset.py:82(add)
        1    0.002    0.002    6.956    6.956 client.py:36(test_function)
     1200    0.000    0.000    0.000    0.000 singleton.py:4(__call__)
      600    0.002    0.000    0.005    0.000 thread_builder.py:115(__init__)
      600    0.002    0.000    0.010    0.000 thread_builder.py:131(config)
      600    0.001    0.000    0.041    0.000 thread_builder.py:177(get_thread)
      600    0.002    0.000    2.331    0.004 threading.py:1001(join)
      600    0.001    0.000    2.328    0.004 threading.py:1039(_wait_for_tstate_lock)
     1200    0.000    0.000    0.000    0.000 threading.py:1107(daemon)
      600    0.001    0.000    0.001    0.000 threading.py:1189(_make_invoke_excepthook)
     1200    0.000    0.000    0.001    0.000 threading.py:1318(current_thread)
     1800    0.004    0.000    0.004    0.000 threading.py:228(__init__)
      600    0.000    0.000    0.001    0.000 threading.py:256(__enter__)
      600    0.000    0.000    0.001    0.000 threading.py:259(__exit__)
      600    0.000    0.000    0.000    0.000 threading.py:265(_release_save)
      600    0.000    0.000    0.001    0.000 threading.py:268(_acquire_restore)
      600    0.000    0.000    0.001    0.000 threading.py:271(_is_owned)
      600    0.003    0.000    4.536    0.008 threading.py:280(wait)
     1800    0.001    0.000    0.008    0.000 threading.py:521(__init__)
     1200    0.000    0.000    0.000    0.000 threading.py:529(is_set)
      600    0.006    0.000    4.543    0.008 threading.py:556(wait)
      600    0.000    0.000    0.000    0.000 threading.py:750(_newname)
      600    0.025    0.000    0.030    0.000 threading.py:777(__init__)
      600    0.004    0.000    4.583    0.008 threading.py:855(start)
      600    0.001    0.000    0.001    0.000 threading.py:966(_stop)
     2400    0.006    0.000    0.006    0.000 {built-in method _thread.allocate_lock}
     1200    0.000    0.000    0.000    0.000 {built-in method _thread.get_ident}
      600    0.036    0.000    0.036    0.000 {built-in method _thread.start_new_thread}
        1    0.000    0.000    6.956    6.956 {built-in method builtins.exec}
      600    0.000    0.000    0.000    0.000 {method '__enter__' of '_thread.lock' objects}
     1800    0.000    0.000    0.000    0.000 {method '__exit__' of '_thread.lock' objects}
     3000    6.854    0.002    6.854    0.002 {method 'acquire' of '_thread.lock' objects}
      600    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
      600    0.000    0.000    0.000    0.000 {method 'append' of 'collections.deque' objects}
      600    0.000    0.000    0.000    0.000 {method 'append' of 'list' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
      600    0.000    0.000    0.000    0.000 {method 'discard' of 'set' objects}
      600    0.000    0.000    0.000    0.000 {method 'locked' of '_thread.lock' objects}
     1200    0.000    0.000    0.000    0.000 {method 'release' of '_thread.lock' objects}



====== THIRD POOL, 600 THREADS, 1000 OBJECTS, 10000 OPERATIONS INSIDE FUNCTION ======

         33004 function calls in 7.031 seconds

   Ordered by: standard name

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000    7.031    7.031 <string>:1(<module>)
      600    0.000    0.000    0.001    0.000 _weakrefset.py:82(add)
        1    0.002    0.002    7.031    7.031 client.py:36(test_function)
     1200    0.000    0.000    0.000    0.000 singleton.py:4(__call__)
      600    0.002    0.000    0.005    0.000 thread_builder.py:115(__init__)
      600    0.002    0.000    0.011    0.000 thread_builder.py:131(config)
      600    0.001    0.000    0.018    0.000 thread_builder.py:177(get_thread)
      600    0.002    0.000    2.426    0.004 threading.py:1001(join)
      600    0.001    0.000    2.423    0.004 threading.py:1039(_wait_for_tstate_lock)
     1200    0.000    0.000    0.000    0.000 threading.py:1107(daemon)
      600    0.000    0.000    0.000    0.000 threading.py:1189(_make_invoke_excepthook)
     1200    0.001    0.000    0.001    0.000 threading.py:1318(current_thread)
     1800    0.004    0.000    0.004    0.000 threading.py:228(__init__)
      600    0.000    0.000    0.001    0.000 threading.py:256(__enter__)
      600    0.000    0.000    0.001    0.000 threading.py:259(__exit__)
      600    0.000    0.000    0.000    0.000 threading.py:265(_release_save)
      600    0.000    0.000    0.001    0.000 threading.py:268(_acquire_restore)
      600    0.000    0.000    0.001    0.000 threading.py:271(_is_owned)
      600    0.005    0.000    4.540    0.008 threading.py:280(wait)
     1800    0.001    0.000    0.009    0.000 threading.py:521(__init__)
     1200    0.000    0.000    0.000    0.000 threading.py:529(is_set)
      600    0.004    0.000    4.545    0.008 threading.py:556(wait)
      600    0.000    0.000    0.000    0.000 threading.py:750(_newname)
      600    0.002    0.000    0.007    0.000 threading.py:777(__init__)
      600    0.003    0.000    4.585    0.008 threading.py:855(start)
      600    0.001    0.000    0.002    0.000 threading.py:966(_stop)
     2400    0.006    0.000    0.006    0.000 {built-in method _thread.allocate_lock}
     1200    0.000    0.000    0.000    0.000 {built-in method _thread.get_ident}
      600    0.036    0.000    0.036    0.000 {built-in method _thread.start_new_thread}
        1    0.000    0.000    7.031    7.031 {built-in method builtins.exec}
      600    0.000    0.000    0.000    0.000 {method '__enter__' of '_thread.lock' objects}
     1800    0.000    0.000    0.000    0.000 {method '__exit__' of '_thread.lock' objects}
     3000    6.951    0.002    6.951    0.002 {method 'acquire' of '_thread.lock' objects}
      600    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
      600    0.000    0.000    0.000    0.000 {method 'append' of 'collections.deque' objects}
      600    0.000    0.000    0.000    0.000 {method 'append' of 'list' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
      600    0.000    0.000    0.000    0.000 {method 'discard' of 'set' objects}
      600    0.000    0.000    0.000    0.000 {method 'locked' of '_thread.lock' objects}
     1200    0.000    0.000    0.000    0.000 {method 'release' of '_thread.lock' objects}



====== FIRST POOL, 700 THREADS, 1000 OBJECTS, 10000 OPERATIONS INSIDE FUNCTION ======

         38504 function calls in 9.060 seconds

   Ordered by: standard name

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000    9.060    9.060 <string>:1(<module>)
      700    0.001    0.000    0.001    0.000 _weakrefset.py:82(add)
        1    0.002    0.002    9.060    9.060 client.py:36(test_function)
     1400    0.000    0.000    0.000    0.000 singleton.py:4(__call__)
      700    0.002    0.000    0.006    0.000 thread_builder.py:115(__init__)
      700    0.002    0.000    0.012    0.000 thread_builder.py:131(config)
      700    0.001    0.000    0.021    0.000 thread_builder.py:177(get_thread)
      700    0.002    0.000    2.328    0.003 threading.py:1001(join)
      700    0.001    0.000    2.325    0.003 threading.py:1039(_wait_for_tstate_lock)
     1400    0.000    0.000    0.000    0.000 threading.py:1107(daemon)
      700    0.000    0.000    0.000    0.000 threading.py:1189(_make_invoke_excepthook)
     1400    0.001    0.000    0.001    0.000 threading.py:1318(current_thread)
     2100    0.004    0.000    0.004    0.000 threading.py:228(__init__)
      700    0.001    0.000    0.001    0.000 threading.py:256(__enter__)
      700    0.001    0.000    0.001    0.000 threading.py:259(__exit__)
      700    0.000    0.000    0.000    0.000 threading.py:265(_release_save)
      700    0.001    0.000    0.001    0.000 threading.py:268(_acquire_restore)
      700    0.000    0.000    0.001    0.000 threading.py:271(_is_owned)
      700    0.006    0.000    6.648    0.009 threading.py:280(wait)
     2100    0.001    0.000    0.010    0.000 threading.py:521(__init__)
     1400    0.001    0.000    0.001    0.000 threading.py:529(is_set)
      700    0.005    0.000    6.654    0.010 threading.py:556(wait)
      700    0.000    0.000    0.000    0.000 threading.py:750(_newname)
      700    0.004    0.000    0.009    0.000 threading.py:777(__init__)
      700    0.005    0.000    6.709    0.010 threading.py:855(start)
      700    0.001    0.000    0.002    0.000 threading.py:966(_stop)
     2800    0.008    0.000    0.008    0.000 {built-in method _thread.allocate_lock}
     1400    0.000    0.000    0.000    0.000 {built-in method _thread.get_ident}
      700    0.049    0.000    0.049    0.000 {built-in method _thread.start_new_thread}
        1    0.000    0.000    9.060    9.060 {built-in method builtins.exec}
      700    0.000    0.000    0.000    0.000 {method '__enter__' of '_thread.lock' objects}
     2100    0.000    0.000    0.000    0.000 {method '__exit__' of '_thread.lock' objects}
     3500    8.959    0.003    8.959    0.003 {method 'acquire' of '_thread.lock' objects}
      700    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
      700    0.000    0.000    0.000    0.000 {method 'append' of 'collections.deque' objects}
      700    0.000    0.000    0.000    0.000 {method 'append' of 'list' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
      700    0.000    0.000    0.000    0.000 {method 'discard' of 'set' objects}
      700    0.000    0.000    0.000    0.000 {method 'locked' of '_thread.lock' objects}
     1400    0.000    0.000    0.000    0.000 {method 'release' of '_thread.lock' objects}



====== SECOND POOL, 700 THREADS, 1000 OBJECTS, 10000 OPERATIONS INSIDE FUNCTION ======

         38504 function calls in 8.797 seconds

   Ordered by: standard name

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000    8.797    8.797 <string>:1(<module>)
      700    0.000    0.000    0.001    0.000 _weakrefset.py:82(add)
        1    0.002    0.002    8.797    8.797 client.py:36(test_function)
     1400    0.000    0.000    0.000    0.000 singleton.py:4(__call__)
      700    0.003    0.000    0.006    0.000 thread_builder.py:115(__init__)
      700    0.003    0.000    0.013    0.000 thread_builder.py:131(config)
      700    0.001    0.000    0.023    0.000 thread_builder.py:177(get_thread)
      700    0.003    0.000    2.405    0.003 threading.py:1001(join)
      700    0.001    0.000    2.402    0.003 threading.py:1039(_wait_for_tstate_lock)
     1400    0.000    0.000    0.000    0.000 threading.py:1107(daemon)
      700    0.000    0.000    0.000    0.000 threading.py:1189(_make_invoke_excepthook)
     1400    0.001    0.000    0.001    0.000 threading.py:1318(current_thread)
     2100    0.004    0.000    0.004    0.000 threading.py:228(__init__)
      700    0.000    0.000    0.001    0.000 threading.py:256(__enter__)
      700    0.001    0.000    0.001    0.000 threading.py:259(__exit__)
      700    0.000    0.000    0.001    0.000 threading.py:265(_release_save)
      700    0.001    0.000    0.001    0.000 threading.py:268(_acquire_restore)
      700    0.000    0.000    0.001    0.000 threading.py:271(_is_owned)
      700    0.003    0.000    6.308    0.009 threading.py:280(wait)
     2100    0.002    0.000    0.010    0.000 threading.py:521(__init__)
     1400    0.001    0.000    0.001    0.000 threading.py:529(is_set)
      700    0.005    0.000    6.315    0.009 threading.py:556(wait)
      700    0.000    0.000    0.000    0.000 threading.py:750(_newname)
      700    0.004    0.000    0.010    0.000 threading.py:777(__init__)
      700    0.004    0.000    6.366    0.009 threading.py:855(start)
      700    0.001    0.000    0.002    0.000 threading.py:966(_stop)
     2800    0.008    0.000    0.008    0.000 {built-in method _thread.allocate_lock}
     1400    0.000    0.000    0.000    0.000 {built-in method _thread.get_ident}
      700    0.046    0.000    0.046    0.000 {built-in method _thread.start_new_thread}
        1    0.000    0.000    8.797    8.797 {built-in method builtins.exec}
      700    0.000    0.000    0.000    0.000 {method '__enter__' of '_thread.lock' objects}
     2100    0.000    0.000    0.000    0.000 {method '__exit__' of '_thread.lock' objects}
     3500    8.699    0.002    8.699    0.002 {method 'acquire' of '_thread.lock' objects}
      700    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
      700    0.000    0.000    0.000    0.000 {method 'append' of 'collections.deque' objects}
      700    0.000    0.000    0.000    0.000 {method 'append' of 'list' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
      700    0.000    0.000    0.000    0.000 {method 'discard' of 'set' objects}
      700    0.000    0.000    0.000    0.000 {method 'locked' of '_thread.lock' objects}
     1400    0.000    0.000    0.000    0.000 {method 'release' of '_thread.lock' objects}



====== THIRD POOL, 700 THREADS, 1000 OBJECTS, 10000 OPERATIONS INSIDE FUNCTION ======

         38504 function calls in 9.092 seconds

   Ordered by: standard name

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000    9.092    9.092 <string>:1(<module>)
      700    0.001    0.000    0.001    0.000 _weakrefset.py:82(add)
        1    0.002    0.002    9.092    9.092 client.py:36(test_function)
     1400    0.000    0.000    0.000    0.000 singleton.py:4(__call__)
      700    0.002    0.000    0.006    0.000 thread_builder.py:115(__init__)
      700    0.002    0.000    0.012    0.000 thread_builder.py:131(config)
      700    0.001    0.000    0.054    0.000 thread_builder.py:177(get_thread)
      700    0.003    0.000    2.356    0.003 threading.py:1001(join)
      700    0.001    0.000    2.352    0.003 threading.py:1039(_wait_for_tstate_lock)
     1400    0.000    0.000    0.000    0.000 threading.py:1107(daemon)
      700    0.033    0.000    0.033    0.000 threading.py:1189(_make_invoke_excepthook)
     1400    0.001    0.000    0.001    0.000 threading.py:1318(current_thread)
     2100    0.004    0.000    0.004    0.000 threading.py:228(__init__)
      700    0.001    0.000    0.001    0.000 threading.py:256(__enter__)
      700    0.001    0.000    0.001    0.000 threading.py:259(__exit__)
      700    0.000    0.000    0.001    0.000 threading.py:265(_release_save)
      700    0.001    0.000    0.001    0.000 threading.py:268(_acquire_restore)
      700    0.000    0.000    0.001    0.000 threading.py:271(_is_owned)
      700    0.004    0.000    6.618    0.009 threading.py:280(wait)
     2100    0.002    0.000    0.010    0.000 threading.py:521(__init__)
     1400    0.001    0.000    0.001    0.000 threading.py:529(is_set)
      700    0.005    0.000    6.625    0.009 threading.py:556(wait)
      700    0.000    0.000    0.000    0.000 threading.py:750(_newname)
      700    0.003    0.000    0.041    0.000 threading.py:777(__init__)
      700    0.005    0.000    6.680    0.010 threading.py:855(start)
      700    0.002    0.000    0.003    0.000 threading.py:966(_stop)
     2800    0.008    0.000    0.008    0.000 {built-in method _thread.allocate_lock}
     1400    0.000    0.000    0.000    0.000 {built-in method _thread.get_ident}
      700    0.050    0.000    0.050    0.000 {built-in method _thread.start_new_thread}
        1    0.000    0.000    9.092    9.092 {built-in method builtins.exec}
      700    0.000    0.000    0.000    0.000 {method '__enter__' of '_thread.lock' objects}
     2100    0.000    0.000    0.000    0.000 {method '__exit__' of '_thread.lock' objects}
     3500    8.956    0.003    8.956    0.003 {method 'acquire' of '_thread.lock' objects}
      700    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
      700    0.000    0.000    0.000    0.000 {method 'append' of 'collections.deque' objects}
      700    0.000    0.000    0.000    0.000 {method 'append' of 'list' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
      700    0.000    0.000    0.000    0.000 {method 'discard' of 'set' objects}
      700    0.000    0.000    0.000    0.000 {method 'locked' of '_thread.lock' objects}
     1400    0.000    0.000    0.000    0.000 {method 'release' of '_thread.lock' objects}



====== FIRST POOL, 800 THREADS, 1000 OBJECTS, 10000 OPERATIONS INSIDE FUNCTION ======

         44004 function calls in 9.977 seconds

   Ordered by: standard name

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000    9.977    9.977 <string>:1(<module>)
      800    0.001    0.000    0.001    0.000 _weakrefset.py:82(add)
        1    0.003    0.003    9.977    9.977 client.py:36(test_function)
     1600    0.000    0.000    0.000    0.000 singleton.py:4(__call__)
      800    0.004    0.000    0.011    0.000 thread_builder.py:115(__init__)
      800    0.004    0.000    0.022    0.000 thread_builder.py:131(config)
      800    0.001    0.000    0.037    0.000 thread_builder.py:177(get_thread)
      800    0.003    0.000    2.288    0.003 threading.py:1001(join)
      800    0.001    0.000    2.285    0.003 threading.py:1039(_wait_for_tstate_lock)
     1600    0.000    0.000    0.000    0.000 threading.py:1107(daemon)
      800    0.001    0.000    0.001    0.000 threading.py:1189(_make_invoke_excepthook)
     1600    0.001    0.000    0.001    0.000 threading.py:1318(current_thread)
     2400    0.009    0.000    0.009    0.000 threading.py:228(__init__)
      800    0.001    0.000    0.001    0.000 threading.py:256(__enter__)
      800    0.001    0.000    0.001    0.000 threading.py:259(__exit__)
      800    0.000    0.000    0.001    0.000 threading.py:265(_release_save)
      800    0.001    0.000    0.001    0.000 threading.py:268(_acquire_restore)
      800    0.000    0.000    0.001    0.000 threading.py:271(_is_owned)
      800    0.004    0.000    7.571    0.009 threading.py:280(wait)
     2400    0.002    0.000    0.018    0.000 threading.py:521(__init__)
     1600    0.001    0.000    0.001    0.000 threading.py:529(is_set)
      800    0.006    0.000    7.579    0.009 threading.py:556(wait)
      800    0.001    0.000    0.001    0.000 threading.py:750(_newname)
      800    0.005    0.000    0.014    0.000 threading.py:777(__init__)
      800    0.006    0.000    7.649    0.010 threading.py:855(start)
      800    0.002    0.000    0.002    0.000 threading.py:966(_stop)
     3200    0.010    0.000    0.010    0.000 {built-in method _thread.allocate_lock}
     1600    0.000    0.000    0.000    0.000 {built-in method _thread.get_ident}
      800    0.063    0.000    0.063    0.000 {built-in method _thread.start_new_thread}
        1    0.000    0.000    9.977    9.977 {built-in method builtins.exec}
      800    0.001    0.000    0.001    0.000 {method '__enter__' of '_thread.lock' objects}
     2400    0.001    0.000    0.001    0.000 {method '__exit__' of '_thread.lock' objects}
     4000    9.842    0.002    9.842    0.002 {method 'acquire' of '_thread.lock' objects}
      800    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
      800    0.000    0.000    0.000    0.000 {method 'append' of 'collections.deque' objects}
      800    0.000    0.000    0.000    0.000 {method 'append' of 'list' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
      800    0.000    0.000    0.000    0.000 {method 'discard' of 'set' objects}
      800    0.000    0.000    0.000    0.000 {method 'locked' of '_thread.lock' objects}
     1600    0.000    0.000    0.000    0.000 {method 'release' of '_thread.lock' objects}



====== SECOND POOL, 800 THREADS, 1000 OBJECTS, 10000 OPERATIONS INSIDE FUNCTION ======

         44004 function calls in 10.776 seconds

   Ordered by: standard name

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000   10.776   10.776 <string>:1(<module>)
      800    0.001    0.000    0.002    0.000 _weakrefset.py:82(add)
        1    0.003    0.003   10.776   10.776 client.py:36(test_function)
     1600    0.000    0.000    0.000    0.000 singleton.py:4(__call__)
      800    0.003    0.000    0.008    0.000 thread_builder.py:115(__init__)
      800    0.003    0.000    0.016    0.000 thread_builder.py:131(config)
      800    0.001    0.000    0.029    0.000 thread_builder.py:177(get_thread)
      800    0.003    0.000    2.275    0.003 threading.py:1001(join)
      800    0.001    0.000    2.271    0.003 threading.py:1039(_wait_for_tstate_lock)
     1600    0.000    0.000    0.000    0.000 threading.py:1107(daemon)
      800    0.001    0.000    0.001    0.000 threading.py:1189(_make_invoke_excepthook)
     1600    0.001    0.000    0.001    0.000 threading.py:1318(current_thread)
     2400    0.006    0.000    0.006    0.000 threading.py:228(__init__)
      800    0.001    0.000    0.001    0.000 threading.py:256(__enter__)
      800    0.001    0.000    0.001    0.000 threading.py:259(__exit__)
      800    0.000    0.000    0.001    0.000 threading.py:265(_release_save)
      800    0.001    0.000    0.001    0.000 threading.py:268(_acquire_restore)
      800    0.001    0.000    0.001    0.000 threading.py:271(_is_owned)
      800    0.005    0.000    8.388    0.010 threading.py:280(wait)
     2400    0.002    0.000    0.013    0.000 threading.py:521(__init__)
     1600    0.001    0.000    0.001    0.000 threading.py:529(is_set)
      800    0.006    0.000    8.397    0.010 threading.py:556(wait)
      800    0.001    0.000    0.001    0.000 threading.py:750(_newname)
      800    0.005    0.000    0.012    0.000 threading.py:777(__init__)
      800    0.006    0.000    8.470    0.011 threading.py:855(start)
      800    0.001    0.000    0.002    0.000 threading.py:966(_stop)
     3200    0.010    0.000    0.010    0.000 {built-in method _thread.allocate_lock}
     1600    0.000    0.000    0.000    0.000 {built-in method _thread.get_ident}
      800    0.066    0.000    0.066    0.000 {built-in method _thread.start_new_thread}
        1    0.000    0.000   10.776   10.776 {built-in method builtins.exec}
      800    0.001    0.000    0.001    0.000 {method '__enter__' of '_thread.lock' objects}
     2400    0.001    0.000    0.001    0.000 {method '__exit__' of '_thread.lock' objects}
     4000   10.644    0.003   10.644    0.003 {method 'acquire' of '_thread.lock' objects}
      800    0.001    0.000    0.001    0.000 {method 'add' of 'set' objects}
      800    0.000    0.000    0.000    0.000 {method 'append' of 'collections.deque' objects}
      800    0.000    0.000    0.000    0.000 {method 'append' of 'list' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
      800    0.000    0.000    0.000    0.000 {method 'discard' of 'set' objects}
      800    0.000    0.000    0.000    0.000 {method 'locked' of '_thread.lock' objects}
     1600    0.000    0.000    0.000    0.000 {method 'release' of '_thread.lock' objects}



====== THIRD POOL, 800 THREADS, 1000 OBJECTS, 10000 OPERATIONS INSIDE FUNCTION ======

         44004 function calls in 9.827 seconds

   Ordered by: standard name

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000    9.827    9.827 <string>:1(<module>)
      800    0.001    0.000    0.001    0.000 _weakrefset.py:82(add)
        1    0.002    0.002    9.827    9.827 client.py:36(test_function)
     1600    0.000    0.000    0.000    0.000 singleton.py:4(__call__)
      800    0.003    0.000    0.008    0.000 thread_builder.py:115(__init__)
      800    0.003    0.000    0.015    0.000 thread_builder.py:131(config)
      800    0.001    0.000    0.067    0.000 thread_builder.py:177(get_thread)
      800    0.003    0.000    2.235    0.003 threading.py:1001(join)
      800    0.001    0.000    2.231    0.003 threading.py:1039(_wait_for_tstate_lock)
     1600    0.000    0.000    0.000    0.000 threading.py:1107(daemon)
      800    0.001    0.000    0.001    0.000 threading.py:1189(_make_invoke_excepthook)
     1600    0.001    0.000    0.001    0.000 threading.py:1318(current_thread)
     2400    0.046    0.000    0.046    0.000 threading.py:228(__init__)
      800    0.001    0.000    0.001    0.000 threading.py:256(__enter__)
      800    0.001    0.000    0.001    0.000 threading.py:259(__exit__)
      800    0.000    0.000    0.001    0.000 threading.py:265(_release_save)
      800    0.001    0.000    0.001    0.000 threading.py:268(_acquire_restore)
      800    0.000    0.000    0.001    0.000 threading.py:271(_is_owned)
      800    0.004    0.000    7.455    0.009 threading.py:280(wait)
     2400    0.002    0.000    0.053    0.000 threading.py:521(__init__)
     1600    0.001    0.000    0.001    0.000 threading.py:529(is_set)
      800    0.007    0.000    7.464    0.009 threading.py:556(wait)
      800    0.001    0.000    0.001    0.000 threading.py:750(_newname)
      800    0.004    0.000    0.051    0.000 threading.py:777(__init__)
      800    0.005    0.000    7.523    0.009 threading.py:855(start)
      800    0.001    0.000    0.002    0.000 threading.py:966(_stop)
     3200    0.009    0.000    0.009    0.000 {built-in method _thread.allocate_lock}
     1600    0.000    0.000    0.000    0.000 {built-in method _thread.get_ident}
      800    0.054    0.000    0.054    0.000 {built-in method _thread.start_new_thread}
        1    0.000    0.000    9.827    9.827 {built-in method builtins.exec}
      800    0.000    0.000    0.000    0.000 {method '__enter__' of '_thread.lock' objects}
     2400    0.000    0.000    0.000    0.000 {method '__exit__' of '_thread.lock' objects}
     4000    9.674    0.002    9.674    0.002 {method 'acquire' of '_thread.lock' objects}
      800    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
      800    0.000    0.000    0.000    0.000 {method 'append' of 'collections.deque' objects}
      800    0.000    0.000    0.000    0.000 {method 'append' of 'list' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
      800    0.000    0.000    0.000    0.000 {method 'discard' of 'set' objects}
      800    0.000    0.000    0.000    0.000 {method 'locked' of '_thread.lock' objects}
     1600    0.000    0.000    0.000    0.000 {method 'release' of '_thread.lock' objects}



====== FIRST POOL, 900 THREADS, 1000 OBJECTS, 10000 OPERATIONS INSIDE FUNCTION ======

         49504 function calls in 11.465 seconds

   Ordered by: standard name

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000   11.465   11.465 <string>:1(<module>)
      900    0.001    0.000    0.001    0.000 _weakrefset.py:82(add)
        1    0.003    0.003   11.465   11.465 client.py:36(test_function)
     1800    0.001    0.000    0.001    0.000 singleton.py:4(__call__)
      900    0.004    0.000    0.010    0.000 thread_builder.py:115(__init__)
      900    0.004    0.000    0.020    0.000 thread_builder.py:131(config)
      900    0.001    0.000    0.035    0.000 thread_builder.py:177(get_thread)
      900    0.003    0.000    2.385    0.003 threading.py:1001(join)
      900    0.001    0.000    2.381    0.003 threading.py:1039(_wait_for_tstate_lock)
     1800    0.000    0.000    0.000    0.000 threading.py:1107(daemon)
      900    0.001    0.000    0.001    0.000 threading.py:1189(_make_invoke_excepthook)
     1800    0.001    0.000    0.001    0.000 threading.py:1318(current_thread)
     2700    0.009    0.000    0.009    0.000 threading.py:228(__init__)
      900    0.001    0.000    0.001    0.000 threading.py:256(__enter__)
      900    0.001    0.000    0.001    0.000 threading.py:259(__exit__)
      900    0.001    0.000    0.001    0.000 threading.py:265(_release_save)
      900    0.001    0.000    0.001    0.000 threading.py:268(_acquire_restore)
      900    0.001    0.000    0.001    0.000 threading.py:271(_is_owned)
      900    0.005    0.000    8.959    0.010 threading.py:280(wait)
     2700    0.002    0.000    0.017    0.000 threading.py:521(__init__)
     1800    0.001    0.000    0.001    0.000 threading.py:529(is_set)
      900    0.008    0.000    8.968    0.010 threading.py:556(wait)
      900    0.001    0.000    0.001    0.000 threading.py:750(_newname)
      900    0.005    0.000    0.014    0.000 threading.py:777(__init__)
      900    0.006    0.000    9.041    0.010 threading.py:855(start)
      900    0.001    0.000    0.002    0.000 threading.py:966(_stop)
     3600    0.010    0.000    0.010    0.000 {built-in method _thread.allocate_lock}
     1800    0.000    0.000    0.000    0.000 {built-in method _thread.get_ident}
      900    0.066    0.000    0.066    0.000 {built-in method _thread.start_new_thread}
        1    0.000    0.000   11.465   11.465 {built-in method builtins.exec}
      900    0.001    0.000    0.001    0.000 {method '__enter__' of '_thread.lock' objects}
     2700    0.001    0.000    0.001    0.000 {method '__exit__' of '_thread.lock' objects}
     4500   11.325    0.003   11.325    0.003 {method 'acquire' of '_thread.lock' objects}
      900    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
      900    0.000    0.000    0.000    0.000 {method 'append' of 'collections.deque' objects}
      900    0.000    0.000    0.000    0.000 {method 'append' of 'list' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
      900    0.000    0.000    0.000    0.000 {method 'discard' of 'set' objects}
      900    0.000    0.000    0.000    0.000 {method 'locked' of '_thread.lock' objects}
     1800    0.000    0.000    0.000    0.000 {method 'release' of '_thread.lock' objects}



====== SECOND POOL, 900 THREADS, 1000 OBJECTS, 10000 OPERATIONS INSIDE FUNCTION ======

         49504 function calls in 11.086 seconds

   Ordered by: standard name

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000   11.086   11.086 <string>:1(<module>)
      900    0.001    0.000    0.001    0.000 _weakrefset.py:82(add)
        1    0.003    0.003   11.086   11.086 client.py:36(test_function)
     1800    0.000    0.000    0.000    0.000 singleton.py:4(__call__)
      900    0.004    0.000    0.009    0.000 thread_builder.py:115(__init__)
      900    0.004    0.000    0.018    0.000 thread_builder.py:131(config)
      900    0.001    0.000    0.033    0.000 thread_builder.py:177(get_thread)
      900    0.003    0.000    2.347    0.003 threading.py:1001(join)
      900    0.001    0.000    2.342    0.003 threading.py:1039(_wait_for_tstate_lock)
     1800    0.000    0.000    0.000    0.000 threading.py:1107(daemon)
      900    0.002    0.000    0.002    0.000 threading.py:1189(_make_invoke_excepthook)
     1800    0.001    0.000    0.001    0.000 threading.py:1318(current_thread)
     2700    0.007    0.000    0.007    0.000 threading.py:228(__init__)
      900    0.001    0.000    0.001    0.000 threading.py:256(__enter__)
      900    0.001    0.000    0.001    0.000 threading.py:259(__exit__)
      900    0.000    0.000    0.001    0.000 threading.py:265(_release_save)
      900    0.001    0.000    0.001    0.000 threading.py:268(_acquire_restore)
      900    0.001    0.000    0.001    0.000 threading.py:271(_is_owned)
      900    0.005    0.000    8.620    0.010 threading.py:280(wait)
     2700    0.002    0.000    0.015    0.000 threading.py:521(__init__)
     1800    0.001    0.000    0.001    0.000 threading.py:529(is_set)
      900    0.006    0.000    8.629    0.010 threading.py:556(wait)
      900    0.001    0.000    0.001    0.000 threading.py:750(_newname)
      900    0.004    0.000    0.014    0.000 threading.py:777(__init__)
      900    0.006    0.000    8.704    0.010 threading.py:855(start)
      900    0.002    0.000    0.002    0.000 threading.py:966(_stop)
     3600    0.011    0.000    0.011    0.000 {built-in method _thread.allocate_lock}
     1800    0.000    0.000    0.000    0.000 {built-in method _thread.get_ident}
      900    0.068    0.000    0.068    0.000 {built-in method _thread.start_new_thread}
        1    0.000    0.000   11.086   11.086 {built-in method builtins.exec}
      900    0.001    0.000    0.001    0.000 {method '__enter__' of '_thread.lock' objects}
     2700    0.001    0.000    0.001    0.000 {method '__exit__' of '_thread.lock' objects}
     4500   10.947    0.002   10.947    0.002 {method 'acquire' of '_thread.lock' objects}
      900    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
      900    0.000    0.000    0.000    0.000 {method 'append' of 'collections.deque' objects}
      900    0.000    0.000    0.000    0.000 {method 'append' of 'list' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
      900    0.000    0.000    0.000    0.000 {method 'discard' of 'set' objects}
      900    0.000    0.000    0.000    0.000 {method 'locked' of '_thread.lock' objects}
     1800    0.000    0.000    0.000    0.000 {method 'release' of '_thread.lock' objects}



====== THIRD POOL, 900 THREADS, 1000 OBJECTS, 10000 OPERATIONS INSIDE FUNCTION ======

         49504 function calls in 12.300 seconds

   Ordered by: standard name

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000   12.300   12.300 <string>:1(<module>)
      900    0.001    0.000    0.002    0.000 _weakrefset.py:82(add)
        1    0.004    0.004   12.300   12.300 client.py:36(test_function)
     1800    0.001    0.000    0.001    0.000 singleton.py:4(__call__)
      900    0.006    0.000    0.014    0.000 thread_builder.py:115(__init__)
      900    0.005    0.000    0.026    0.000 thread_builder.py:131(config)
      900    0.003    0.000    0.142    0.000 thread_builder.py:177(get_thread)
      900    0.004    0.000    2.342    0.003 threading.py:1001(join)
      900    0.001    0.000    2.337    0.003 threading.py:1039(_wait_for_tstate_lock)
     1800    0.001    0.000    0.001    0.000 threading.py:1107(daemon)
      900    0.001    0.000    0.001    0.000 threading.py:1189(_make_invoke_excepthook)
     1800    0.001    0.000    0.001    0.000 threading.py:1318(current_thread)
     2700    0.010    0.000    0.010    0.000 threading.py:228(__init__)
      900    0.001    0.000    0.002    0.000 threading.py:256(__enter__)
      900    0.001    0.000    0.001    0.000 threading.py:259(__exit__)
      900    0.001    0.000    0.001    0.000 threading.py:265(_release_save)
      900    0.001    0.000    0.002    0.000 threading.py:268(_acquire_restore)
      900    0.001    0.000    0.001    0.000 threading.py:271(_is_owned)
      900    0.006    0.000    9.716    0.011 threading.py:280(wait)
     2700    0.003    0.000    0.021    0.000 threading.py:521(__init__)
     1800    0.001    0.000    0.001    0.000 threading.py:529(is_set)
      900    0.008    0.000    9.727    0.011 threading.py:556(wait)
      900    0.001    0.000    0.001    0.000 threading.py:750(_newname)
      900    0.101    0.000    0.113    0.000 threading.py:777(__init__)
      900    0.008    0.000    9.812    0.011 threading.py:855(start)
      900    0.002    0.000    0.003    0.000 threading.py:966(_stop)
     3600    0.013    0.000    0.013    0.000 {built-in method _thread.allocate_lock}
     1800    0.000    0.000    0.000    0.000 {built-in method _thread.get_ident}
      900    0.077    0.000    0.077    0.000 {built-in method _thread.start_new_thread}
        1    0.000    0.000   12.300   12.300 {built-in method builtins.exec}
      900    0.001    0.000    0.001    0.000 {method '__enter__' of '_thread.lock' objects}
     2700    0.001    0.000    0.001    0.000 {method '__exit__' of '_thread.lock' objects}
     4500   12.036    0.003   12.036    0.003 {method 'acquire' of '_thread.lock' objects}
      900    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
      900    0.000    0.000    0.000    0.000 {method 'append' of 'collections.deque' objects}
      900    0.000    0.000    0.000    0.000 {method 'append' of 'list' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
      900    0.000    0.000    0.000    0.000 {method 'discard' of 'set' objects}
      900    0.000    0.000    0.000    0.000 {method 'locked' of '_thread.lock' objects}
     1800    0.000    0.000    0.000    0.000 {method 'release' of '_thread.lock' objects}



====== FIRST POOL, 1000 THREADS, 1000 OBJECTS, 10000 OPERATIONS INSIDE FUNCTION ======

         55004 function calls in 12.259 seconds

   Ordered by: standard name

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000   12.259   12.259 <string>:1(<module>)
     1000    0.001    0.000    0.001    0.000 _weakrefset.py:82(add)
        1    0.003    0.003   12.259   12.259 client.py:36(test_function)
     2000    0.000    0.000    0.000    0.000 singleton.py:4(__call__)
     1000    0.004    0.000    0.009    0.000 thread_builder.py:115(__init__)
     1000    0.004    0.000    0.018    0.000 thread_builder.py:131(config)
     1000    0.001    0.000    0.033    0.000 thread_builder.py:177(get_thread)
     1000    0.003    0.000    2.341    0.002 threading.py:1001(join)
     1000    0.001    0.000    2.337    0.002 threading.py:1039(_wait_for_tstate_lock)
     2000    0.000    0.000    0.000    0.000 threading.py:1107(daemon)
     1000    0.001    0.000    0.001    0.000 threading.py:1189(_make_invoke_excepthook)
     2000    0.001    0.000    0.001    0.000 threading.py:1318(current_thread)
     3000    0.007    0.000    0.007    0.000 threading.py:228(__init__)
     1000    0.001    0.000    0.001    0.000 threading.py:256(__enter__)
     1000    0.001    0.000    0.001    0.000 threading.py:259(__exit__)
     1000    0.001    0.000    0.001    0.000 threading.py:265(_release_save)
     1000    0.001    0.000    0.002    0.000 threading.py:268(_acquire_restore)
     1000    0.001    0.000    0.001    0.000 threading.py:271(_is_owned)
     1000    0.005    0.000    9.789    0.010 threading.py:280(wait)
     3000    0.002    0.000    0.015    0.000 threading.py:521(__init__)
     2000    0.001    0.000    0.001    0.000 threading.py:529(is_set)
     1000    0.007    0.000    9.799    0.010 threading.py:556(wait)
     1000    0.001    0.000    0.001    0.000 threading.py:750(_newname)
     1000    0.005    0.000    0.013    0.000 threading.py:777(__init__)
     1000    0.007    0.000    9.882    0.010 threading.py:855(start)
     1000    0.002    0.000    0.002    0.000 threading.py:966(_stop)
     4000    0.011    0.000    0.011    0.000 {built-in method _thread.allocate_lock}
     2000    0.000    0.000    0.000    0.000 {built-in method _thread.get_ident}
     1000    0.075    0.000    0.075    0.000 {built-in method _thread.start_new_thread}
        1    0.000    0.000   12.259   12.259 {built-in method builtins.exec}
     1000    0.001    0.000    0.001    0.000 {method '__enter__' of '_thread.lock' objects}
     3000    0.001    0.000    0.001    0.000 {method '__exit__' of '_thread.lock' objects}
     5000   12.110    0.002   12.110    0.002 {method 'acquire' of '_thread.lock' objects}
     1000    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
     1000    0.000    0.000    0.000    0.000 {method 'append' of 'collections.deque' objects}
     1000    0.000    0.000    0.000    0.000 {method 'append' of 'list' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
     1000    0.000    0.000    0.000    0.000 {method 'discard' of 'set' objects}
     1000    0.000    0.000    0.000    0.000 {method 'locked' of '_thread.lock' objects}
     2000    0.000    0.000    0.000    0.000 {method 'release' of '_thread.lock' objects}



====== SECOND POOL, 1000 THREADS, 1000 OBJECTS, 10000 OPERATIONS INSIDE FUNCTION ======

         55004 function calls in 12.836 seconds

   Ordered by: standard name

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000   12.836   12.836 <string>:1(<module>)
     1000    0.001    0.000    0.001    0.000 _weakrefset.py:82(add)
        1    0.003    0.003   12.836   12.836 client.py:36(test_function)
     2000    0.000    0.000    0.000    0.000 singleton.py:4(__call__)
     1000    0.004    0.000    0.009    0.000 thread_builder.py:115(__init__)
     1000    0.004    0.000    0.017    0.000 thread_builder.py:131(config)
     1000    0.001    0.000    0.032    0.000 thread_builder.py:177(get_thread)
     1000    0.004    0.000    2.201    0.002 threading.py:1001(join)
     1000    0.001    0.000    2.197    0.002 threading.py:1039(_wait_for_tstate_lock)
     2000    0.000    0.000    0.000    0.000 threading.py:1107(daemon)
     1000    0.001    0.000    0.001    0.000 threading.py:1189(_make_invoke_excepthook)
     2000    0.001    0.000    0.001    0.000 threading.py:1318(current_thread)
     3000    0.006    0.000    0.006    0.000 threading.py:228(__init__)
     1000    0.001    0.000    0.001    0.000 threading.py:256(__enter__)
     1000    0.001    0.000    0.001    0.000 threading.py:259(__exit__)
     1000    0.001    0.000    0.001    0.000 threading.py:265(_release_save)
     1000    0.002    0.000    0.003    0.000 threading.py:268(_acquire_restore)
     1000    0.001    0.000    0.001    0.000 threading.py:271(_is_owned)
     1000    0.006    0.000   10.506    0.011 threading.py:280(wait)
     3000    0.002    0.000    0.014    0.000 threading.py:521(__init__)
     2000    0.001    0.000    0.001    0.000 threading.py:529(is_set)
     1000    0.008    0.000   10.516    0.011 threading.py:556(wait)
     1000    0.001    0.000    0.001    0.000 threading.py:750(_newname)
     1000    0.006    0.000    0.013    0.000 threading.py:777(__init__)
     1000    0.007    0.000   10.600    0.011 threading.py:855(start)
     1000    0.002    0.000    0.003    0.000 threading.py:966(_stop)
     4000    0.010    0.000    0.010    0.000 {built-in method _thread.allocate_lock}
     2000    0.000    0.000    0.000    0.000 {built-in method _thread.get_ident}
     1000    0.077    0.000    0.077    0.000 {built-in method _thread.start_new_thread}
        1    0.000    0.000   12.836   12.836 {built-in method builtins.exec}
     1000    0.001    0.000    0.001    0.000 {method '__enter__' of '_thread.lock' objects}
     3000    0.001    0.000    0.001    0.000 {method '__exit__' of '_thread.lock' objects}
     5000   12.684    0.003   12.684    0.003 {method 'acquire' of '_thread.lock' objects}
     1000    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
     1000    0.000    0.000    0.000    0.000 {method 'append' of 'collections.deque' objects}
     1000    0.000    0.000    0.000    0.000 {method 'append' of 'list' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
     1000    0.000    0.000    0.000    0.000 {method 'discard' of 'set' objects}
     1000    0.000    0.000    0.000    0.000 {method 'locked' of '_thread.lock' objects}
     2000    0.000    0.000    0.000    0.000 {method 'release' of '_thread.lock' objects}



====== THIRD POOL, 1000 THREADS, 1000 OBJECTS, 10000 OPERATIONS INSIDE FUNCTION ======

         55004 function calls in 12.517 seconds

   Ordered by: standard name

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000   12.517   12.517 <string>:1(<module>)
     1000    0.001    0.000    0.001    0.000 _weakrefset.py:82(add)
        1    0.003    0.003   12.517   12.517 client.py:36(test_function)
     2000    0.001    0.000    0.001    0.000 singleton.py:4(__call__)
     1000    0.005    0.000    0.011    0.000 thread_builder.py:115(__init__)
     1000    0.004    0.000    0.021    0.000 thread_builder.py:131(config)
     1000    0.002    0.000    0.039    0.000 thread_builder.py:177(get_thread)
     1000    0.011    0.000    2.458    0.002 threading.py:1001(join)
     1000    0.002    0.000    2.446    0.002 threading.py:1039(_wait_for_tstate_lock)
     2000    0.001    0.000    0.001    0.000 threading.py:1107(daemon)
     1000    0.001    0.000    0.001    0.000 threading.py:1189(_make_invoke_excepthook)
     2000    0.001    0.000    0.001    0.000 threading.py:1318(current_thread)
     3000    0.008    0.000    0.008    0.000 threading.py:228(__init__)
     1000    0.001    0.000    0.001    0.000 threading.py:256(__enter__)
     1000    0.001    0.000    0.001    0.000 threading.py:259(__exit__)
     1000    0.001    0.000    0.001    0.000 threading.py:265(_release_save)
     1000    0.001    0.000    0.002    0.000 threading.py:268(_acquire_restore)
     1000    0.001    0.000    0.001    0.000 threading.py:271(_is_owned)
     1000    0.005    0.000    9.921    0.010 threading.py:280(wait)
     3000    0.003    0.000    0.017    0.000 threading.py:521(__init__)
     2000    0.001    0.000    0.001    0.000 threading.py:529(is_set)
     1000    0.008    0.000    9.931    0.010 threading.py:556(wait)
     1000    0.001    0.000    0.001    0.000 threading.py:750(_newname)
     1000    0.007    0.000    0.016    0.000 threading.py:777(__init__)
     1000    0.007    0.000   10.016    0.010 threading.py:855(start)
     1000    0.002    0.000    0.004    0.000 threading.py:966(_stop)
     4000    0.011    0.000    0.011    0.000 {built-in method _thread.allocate_lock}
     2000    0.000    0.000    0.000    0.000 {built-in method _thread.get_ident}
     1000    0.077    0.000    0.077    0.000 {built-in method _thread.start_new_thread}
        1    0.000    0.000   12.517   12.517 {built-in method builtins.exec}
     1000    0.001    0.000    0.001    0.000 {method '__enter__' of '_thread.lock' objects}
     3000    0.001    0.000    0.001    0.000 {method '__exit__' of '_thread.lock' objects}
     5000   12.349    0.002   12.349    0.002 {method 'acquire' of '_thread.lock' objects}
     1000    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
     1000    0.000    0.000    0.000    0.000 {method 'append' of 'collections.deque' objects}
     1000    0.000    0.000    0.000    0.000 {method 'append' of 'list' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
     1000    0.000    0.000    0.000    0.000 {method 'discard' of 'set' objects}
     1000    0.000    0.000    0.000    0.000 {method 'locked' of '_thread.lock' objects}
     2000    0.000    0.000    0.000    0.000 {method 'release' of '_thread.lock' objects}


