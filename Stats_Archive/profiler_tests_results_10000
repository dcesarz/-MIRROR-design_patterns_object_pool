
====== FIRST POOL, 1 THREADS, 10000 OBJECTS, 10000 OPERATIONS INSIDE FUNCTION ======

         59 function calls in 1.570 seconds

   Ordered by: standard name

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000    1.570    1.570 <string>:1(<module>)
        1    0.000    0.000    0.000    0.000 _weakrefset.py:82(add)
        1    0.000    0.000    1.570    1.570 client.py:36(test_function)
        2    0.000    0.000    0.000    0.000 singleton.py:4(__call__)
        1    0.000    0.000    0.000    0.000 thread_builder.py:115(__init__)
        1    0.000    0.000    0.000    0.000 thread_builder.py:131(config)
        1    0.000    0.000    0.000    0.000 thread_builder.py:177(get_thread)
        1    0.000    0.000    1.570    1.570 threading.py:1001(join)
        1    0.000    0.000    1.570    1.570 threading.py:1039(_wait_for_tstate_lock)
        2    0.000    0.000    0.000    0.000 threading.py:1107(daemon)
        1    0.000    0.000    0.000    0.000 threading.py:1189(_make_invoke_excepthook)
        2    0.000    0.000    0.000    0.000 threading.py:1318(current_thread)
        3    0.000    0.000    0.000    0.000 threading.py:228(__init__)
        1    0.000    0.000    0.000    0.000 threading.py:256(__enter__)
        1    0.000    0.000    0.000    0.000 threading.py:259(__exit__)
        1    0.000    0.000    0.000    0.000 threading.py:265(_release_save)
        1    0.000    0.000    0.000    0.000 threading.py:268(_acquire_restore)
        1    0.000    0.000    0.000    0.000 threading.py:271(_is_owned)
        1    0.000    0.000    0.000    0.000 threading.py:280(wait)
        3    0.000    0.000    0.000    0.000 threading.py:521(__init__)
        2    0.000    0.000    0.000    0.000 threading.py:529(is_set)
        1    0.000    0.000    0.000    0.000 threading.py:556(wait)
        1    0.000    0.000    0.000    0.000 threading.py:750(_newname)
        1    0.000    0.000    0.000    0.000 threading.py:777(__init__)
        1    0.000    0.000    0.000    0.000 threading.py:855(start)
        1    0.000    0.000    0.000    0.000 threading.py:966(_stop)
        4    0.000    0.000    0.000    0.000 {built-in method _thread.allocate_lock}
        2    0.000    0.000    0.000    0.000 {built-in method _thread.get_ident}
        1    0.000    0.000    0.000    0.000 {built-in method _thread.start_new_thread}
        1    0.000    0.000    1.570    1.570 {built-in method builtins.exec}
        1    0.000    0.000    0.000    0.000 {method '__enter__' of '_thread.lock' objects}
        3    0.000    0.000    0.000    0.000 {method '__exit__' of '_thread.lock' objects}
        5    1.570    0.314    1.570    0.314 {method 'acquire' of '_thread.lock' objects}
        1    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
        1    0.000    0.000    0.000    0.000 {method 'append' of 'collections.deque' objects}
        1    0.000    0.000    0.000    0.000 {method 'append' of 'list' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        1    0.000    0.000    0.000    0.000 {method 'discard' of 'set' objects}
        1    0.000    0.000    0.000    0.000 {method 'locked' of '_thread.lock' objects}
        2    0.000    0.000    0.000    0.000 {method 'release' of '_thread.lock' objects}



====== SECOND POOL, 1 THREADS, 10000 OBJECTS, 10000 OPERATIONS INSIDE FUNCTION ======

         59 function calls in 1.560 seconds

   Ordered by: standard name

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000    1.560    1.560 <string>:1(<module>)
        1    0.000    0.000    0.000    0.000 _weakrefset.py:82(add)
        1    0.000    0.000    1.560    1.560 client.py:36(test_function)
        2    0.000    0.000    0.000    0.000 singleton.py:4(__call__)
        1    0.000    0.000    0.000    0.000 thread_builder.py:115(__init__)
        1    0.000    0.000    0.000    0.000 thread_builder.py:131(config)
        1    0.000    0.000    0.000    0.000 thread_builder.py:177(get_thread)
        1    0.000    0.000    1.560    1.560 threading.py:1001(join)
        1    0.000    0.000    1.560    1.560 threading.py:1039(_wait_for_tstate_lock)
        2    0.000    0.000    0.000    0.000 threading.py:1107(daemon)
        1    0.000    0.000    0.000    0.000 threading.py:1189(_make_invoke_excepthook)
        2    0.000    0.000    0.000    0.000 threading.py:1318(current_thread)
        3    0.000    0.000    0.000    0.000 threading.py:228(__init__)
        1    0.000    0.000    0.000    0.000 threading.py:256(__enter__)
        1    0.000    0.000    0.000    0.000 threading.py:259(__exit__)
        1    0.000    0.000    0.000    0.000 threading.py:265(_release_save)
        1    0.000    0.000    0.000    0.000 threading.py:268(_acquire_restore)
        1    0.000    0.000    0.000    0.000 threading.py:271(_is_owned)
        1    0.000    0.000    0.000    0.000 threading.py:280(wait)
        3    0.000    0.000    0.000    0.000 threading.py:521(__init__)
        2    0.000    0.000    0.000    0.000 threading.py:529(is_set)
        1    0.000    0.000    0.000    0.000 threading.py:556(wait)
        1    0.000    0.000    0.000    0.000 threading.py:750(_newname)
        1    0.000    0.000    0.000    0.000 threading.py:777(__init__)
        1    0.000    0.000    0.000    0.000 threading.py:855(start)
        1    0.000    0.000    0.000    0.000 threading.py:966(_stop)
        4    0.000    0.000    0.000    0.000 {built-in method _thread.allocate_lock}
        2    0.000    0.000    0.000    0.000 {built-in method _thread.get_ident}
        1    0.000    0.000    0.000    0.000 {built-in method _thread.start_new_thread}
        1    0.000    0.000    1.560    1.560 {built-in method builtins.exec}
        1    0.000    0.000    0.000    0.000 {method '__enter__' of '_thread.lock' objects}
        3    0.000    0.000    0.000    0.000 {method '__exit__' of '_thread.lock' objects}
        5    1.560    0.312    1.560    0.312 {method 'acquire' of '_thread.lock' objects}
        1    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
        1    0.000    0.000    0.000    0.000 {method 'append' of 'collections.deque' objects}
        1    0.000    0.000    0.000    0.000 {method 'append' of 'list' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        1    0.000    0.000    0.000    0.000 {method 'discard' of 'set' objects}
        1    0.000    0.000    0.000    0.000 {method 'locked' of '_thread.lock' objects}
        2    0.000    0.000    0.000    0.000 {method 'release' of '_thread.lock' objects}



====== THIRD POOL, 1 THREADS, 10000 OBJECTS, 10000 OPERATIONS INSIDE FUNCTION ======

         59 function calls in 1.563 seconds

   Ordered by: standard name

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000    1.562    1.562 <string>:1(<module>)
        1    0.000    0.000    0.000    0.000 _weakrefset.py:82(add)
        1    0.000    0.000    1.562    1.562 client.py:36(test_function)
        2    0.000    0.000    0.000    0.000 singleton.py:4(__call__)
        1    0.000    0.000    0.000    0.000 thread_builder.py:115(__init__)
        1    0.000    0.000    0.000    0.000 thread_builder.py:131(config)
        1    0.000    0.000    0.000    0.000 thread_builder.py:177(get_thread)
        1    0.000    0.000    1.562    1.562 threading.py:1001(join)
        1    0.000    0.000    1.562    1.562 threading.py:1039(_wait_for_tstate_lock)
        2    0.000    0.000    0.000    0.000 threading.py:1107(daemon)
        1    0.000    0.000    0.000    0.000 threading.py:1189(_make_invoke_excepthook)
        2    0.000    0.000    0.000    0.000 threading.py:1318(current_thread)
        3    0.000    0.000    0.000    0.000 threading.py:228(__init__)
        1    0.000    0.000    0.000    0.000 threading.py:256(__enter__)
        1    0.000    0.000    0.000    0.000 threading.py:259(__exit__)
        1    0.000    0.000    0.000    0.000 threading.py:265(_release_save)
        1    0.000    0.000    0.000    0.000 threading.py:268(_acquire_restore)
        1    0.000    0.000    0.000    0.000 threading.py:271(_is_owned)
        1    0.000    0.000    0.000    0.000 threading.py:280(wait)
        3    0.000    0.000    0.000    0.000 threading.py:521(__init__)
        2    0.000    0.000    0.000    0.000 threading.py:529(is_set)
        1    0.000    0.000    0.000    0.000 threading.py:556(wait)
        1    0.000    0.000    0.000    0.000 threading.py:750(_newname)
        1    0.000    0.000    0.000    0.000 threading.py:777(__init__)
        1    0.000    0.000    0.000    0.000 threading.py:855(start)
        1    0.000    0.000    0.000    0.000 threading.py:966(_stop)
        4    0.000    0.000    0.000    0.000 {built-in method _thread.allocate_lock}
        2    0.000    0.000    0.000    0.000 {built-in method _thread.get_ident}
        1    0.000    0.000    0.000    0.000 {built-in method _thread.start_new_thread}
        1    0.000    0.000    1.563    1.563 {built-in method builtins.exec}
        1    0.000    0.000    0.000    0.000 {method '__enter__' of '_thread.lock' objects}
        3    0.000    0.000    0.000    0.000 {method '__exit__' of '_thread.lock' objects}
        5    1.562    0.312    1.562    0.312 {method 'acquire' of '_thread.lock' objects}
        1    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
        1    0.000    0.000    0.000    0.000 {method 'append' of 'collections.deque' objects}
        1    0.000    0.000    0.000    0.000 {method 'append' of 'list' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        1    0.000    0.000    0.000    0.000 {method 'discard' of 'set' objects}
        1    0.000    0.000    0.000    0.000 {method 'locked' of '_thread.lock' objects}
        2    0.000    0.000    0.000    0.000 {method 'release' of '_thread.lock' objects}



====== FIRST POOL, 100 THREADS, 10000 OBJECTS, 10000 OPERATIONS INSIDE FUNCTION ======

         5504 function calls in 2.324 seconds

   Ordered by: standard name

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000    2.324    2.324 <string>:1(<module>)
      100    0.000    0.000    0.000    0.000 _weakrefset.py:82(add)
        1    0.000    0.000    2.324    2.324 client.py:36(test_function)
      200    0.000    0.000    0.000    0.000 singleton.py:4(__call__)
      100    0.000    0.000    0.001    0.000 thread_builder.py:115(__init__)
      100    0.000    0.000    0.002    0.000 thread_builder.py:131(config)
      100    0.000    0.000    0.003    0.000 thread_builder.py:177(get_thread)
      100    0.000    0.000    2.292    0.023 threading.py:1001(join)
      100    0.000    0.000    2.292    0.023 threading.py:1039(_wait_for_tstate_lock)
      200    0.000    0.000    0.000    0.000 threading.py:1107(daemon)
      100    0.000    0.000    0.000    0.000 threading.py:1189(_make_invoke_excepthook)
      200    0.000    0.000    0.000    0.000 threading.py:1318(current_thread)
      300    0.001    0.000    0.001    0.000 threading.py:228(__init__)
      100    0.000    0.000    0.000    0.000 threading.py:256(__enter__)
      100    0.000    0.000    0.000    0.000 threading.py:259(__exit__)
      100    0.000    0.000    0.000    0.000 threading.py:265(_release_save)
      100    0.000    0.000    0.000    0.000 threading.py:268(_acquire_restore)
      100    0.000    0.000    0.000    0.000 threading.py:271(_is_owned)
      100    0.000    0.000    0.022    0.000 threading.py:280(wait)
      300    0.000    0.000    0.001    0.000 threading.py:521(__init__)
      200    0.000    0.000    0.000    0.000 threading.py:529(is_set)
      100    0.001    0.000    0.023    0.000 threading.py:556(wait)
      100    0.000    0.000    0.000    0.000 threading.py:750(_newname)
      100    0.000    0.000    0.001    0.000 threading.py:777(__init__)
      100    0.001    0.000    0.029    0.000 threading.py:855(start)
      100    0.000    0.000    0.000    0.000 threading.py:966(_stop)
      400    0.001    0.000    0.001    0.000 {built-in method _thread.allocate_lock}
      200    0.000    0.000    0.000    0.000 {built-in method _thread.get_ident}
      100    0.006    0.000    0.006    0.000 {built-in method _thread.start_new_thread}
        1    0.000    0.000    2.324    2.324 {built-in method builtins.exec}
      100    0.000    0.000    0.000    0.000 {method '__enter__' of '_thread.lock' objects}
      300    0.000    0.000    0.000    0.000 {method '__exit__' of '_thread.lock' objects}
      500    2.312    0.005    2.312    0.005 {method 'acquire' of '_thread.lock' objects}
      100    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
      100    0.000    0.000    0.000    0.000 {method 'append' of 'collections.deque' objects}
      100    0.000    0.000    0.000    0.000 {method 'append' of 'list' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
      100    0.000    0.000    0.000    0.000 {method 'discard' of 'set' objects}
      100    0.000    0.000    0.000    0.000 {method 'locked' of '_thread.lock' objects}
      200    0.000    0.000    0.000    0.000 {method 'release' of '_thread.lock' objects}



====== SECOND POOL, 100 THREADS, 10000 OBJECTS, 10000 OPERATIONS INSIDE FUNCTION ======

         5504 function calls in 2.359 seconds

   Ordered by: standard name

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000    2.358    2.358 <string>:1(<module>)
      100    0.000    0.000    0.000    0.000 _weakrefset.py:82(add)
        1    0.000    0.000    2.358    2.358 client.py:36(test_function)
      200    0.000    0.000    0.000    0.000 singleton.py:4(__call__)
      100    0.000    0.000    0.001    0.000 thread_builder.py:115(__init__)
      100    0.000    0.000    0.002    0.000 thread_builder.py:131(config)
      100    0.000    0.000    0.003    0.000 thread_builder.py:177(get_thread)
      100    0.000    0.000    2.335    0.023 threading.py:1001(join)
      100    0.000    0.000    2.334    0.023 threading.py:1039(_wait_for_tstate_lock)
      200    0.000    0.000    0.000    0.000 threading.py:1107(daemon)
      100    0.000    0.000    0.000    0.000 threading.py:1189(_make_invoke_excepthook)
      200    0.000    0.000    0.000    0.000 threading.py:1318(current_thread)
      300    0.001    0.000    0.001    0.000 threading.py:228(__init__)
      100    0.000    0.000    0.000    0.000 threading.py:256(__enter__)
      100    0.000    0.000    0.000    0.000 threading.py:259(__exit__)
      100    0.000    0.000    0.000    0.000 threading.py:265(_release_save)
      100    0.000    0.000    0.000    0.000 threading.py:268(_acquire_restore)
      100    0.000    0.000    0.000    0.000 threading.py:271(_is_owned)
      100    0.000    0.000    0.015    0.000 threading.py:280(wait)
      300    0.000    0.000    0.002    0.000 threading.py:521(__init__)
      200    0.000    0.000    0.000    0.000 threading.py:529(is_set)
      100    0.001    0.000    0.015    0.000 threading.py:556(wait)
      100    0.000    0.000    0.000    0.000 threading.py:750(_newname)
      100    0.000    0.000    0.001    0.000 threading.py:777(__init__)
      100    0.000    0.000    0.021    0.000 threading.py:855(start)
      100    0.000    0.000    0.000    0.000 threading.py:966(_stop)
      400    0.001    0.000    0.001    0.000 {built-in method _thread.allocate_lock}
      200    0.000    0.000    0.000    0.000 {built-in method _thread.get_ident}
      100    0.005    0.000    0.005    0.000 {built-in method _thread.start_new_thread}
        1    0.000    0.000    2.359    2.359 {built-in method builtins.exec}
      100    0.000    0.000    0.000    0.000 {method '__enter__' of '_thread.lock' objects}
      300    0.000    0.000    0.000    0.000 {method '__exit__' of '_thread.lock' objects}
      500    2.347    0.005    2.347    0.005 {method 'acquire' of '_thread.lock' objects}
      100    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
      100    0.000    0.000    0.000    0.000 {method 'append' of 'collections.deque' objects}
      100    0.000    0.000    0.000    0.000 {method 'append' of 'list' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
      100    0.000    0.000    0.000    0.000 {method 'discard' of 'set' objects}
      100    0.000    0.000    0.000    0.000 {method 'locked' of '_thread.lock' objects}
      200    0.000    0.000    0.000    0.000 {method 'release' of '_thread.lock' objects}



====== THIRD POOL, 100 THREADS, 10000 OBJECTS, 10000 OPERATIONS INSIDE FUNCTION ======

         5504 function calls in 2.309 seconds

   Ordered by: standard name

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000    2.309    2.309 <string>:1(<module>)
      100    0.000    0.000    0.000    0.000 _weakrefset.py:82(add)
        1    0.000    0.000    2.309    2.309 client.py:36(test_function)
      200    0.000    0.000    0.000    0.000 singleton.py:4(__call__)
      100    0.000    0.000    0.001    0.000 thread_builder.py:115(__init__)
      100    0.000    0.000    0.002    0.000 thread_builder.py:131(config)
      100    0.000    0.000    0.003    0.000 thread_builder.py:177(get_thread)
      100    0.000    0.000    2.286    0.023 threading.py:1001(join)
      100    0.000    0.000    2.286    0.023 threading.py:1039(_wait_for_tstate_lock)
      200    0.000    0.000    0.000    0.000 threading.py:1107(daemon)
      100    0.000    0.000    0.000    0.000 threading.py:1189(_make_invoke_excepthook)
      200    0.000    0.000    0.000    0.000 threading.py:1318(current_thread)
      300    0.001    0.000    0.001    0.000 threading.py:228(__init__)
      100    0.000    0.000    0.000    0.000 threading.py:256(__enter__)
      100    0.000    0.000    0.000    0.000 threading.py:259(__exit__)
      100    0.000    0.000    0.000    0.000 threading.py:265(_release_save)
      100    0.000    0.000    0.000    0.000 threading.py:268(_acquire_restore)
      100    0.000    0.000    0.000    0.000 threading.py:271(_is_owned)
      100    0.000    0.000    0.014    0.000 threading.py:280(wait)
      300    0.000    0.000    0.001    0.000 threading.py:521(__init__)
      200    0.000    0.000    0.000    0.000 threading.py:529(is_set)
      100    0.001    0.000    0.014    0.000 threading.py:556(wait)
      100    0.000    0.000    0.000    0.000 threading.py:750(_newname)
      100    0.000    0.000    0.001    0.000 threading.py:777(__init__)
      100    0.000    0.000    0.019    0.000 threading.py:855(start)
      100    0.000    0.000    0.000    0.000 threading.py:966(_stop)
      400    0.001    0.000    0.001    0.000 {built-in method _thread.allocate_lock}
      200    0.000    0.000    0.000    0.000 {built-in method _thread.get_ident}
      100    0.004    0.000    0.004    0.000 {built-in method _thread.start_new_thread}
        1    0.000    0.000    2.309    2.309 {built-in method builtins.exec}
      100    0.000    0.000    0.000    0.000 {method '__enter__' of '_thread.lock' objects}
      300    0.000    0.000    0.000    0.000 {method '__exit__' of '_thread.lock' objects}
      500    2.298    0.005    2.298    0.005 {method 'acquire' of '_thread.lock' objects}
      100    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
      100    0.000    0.000    0.000    0.000 {method 'append' of 'collections.deque' objects}
      100    0.000    0.000    0.000    0.000 {method 'append' of 'list' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
      100    0.000    0.000    0.000    0.000 {method 'discard' of 'set' objects}
      100    0.000    0.000    0.000    0.000 {method 'locked' of '_thread.lock' objects}
      200    0.000    0.000    0.000    0.000 {method 'release' of '_thread.lock' objects}



====== FIRST POOL, 200 THREADS, 10000 OBJECTS, 10000 OPERATIONS INSIDE FUNCTION ======

         11004 function calls in 2.729 seconds

   Ordered by: standard name

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000    2.729    2.729 <string>:1(<module>)
      200    0.001    0.000    0.001    0.000 _weakrefset.py:82(add)
        1    0.000    0.000    2.729    2.729 client.py:36(test_function)
      400    0.000    0.000    0.000    0.000 singleton.py:4(__call__)
      200    0.001    0.000    0.002    0.000 thread_builder.py:115(__init__)
      200    0.001    0.000    0.004    0.000 thread_builder.py:131(config)
      200    0.000    0.000    0.008    0.000 thread_builder.py:177(get_thread)
      200    0.001    0.000    2.628    0.013 threading.py:1001(join)
      200    0.000    0.000    2.627    0.013 threading.py:1039(_wait_for_tstate_lock)
      400    0.000    0.000    0.000    0.000 threading.py:1107(daemon)
      200    0.000    0.000    0.000    0.000 threading.py:1189(_make_invoke_excepthook)
      400    0.000    0.000    0.000    0.000 threading.py:1318(current_thread)
      600    0.002    0.000    0.002    0.000 threading.py:228(__init__)
      200    0.000    0.000    0.000    0.000 threading.py:256(__enter__)
      200    0.000    0.000    0.000    0.000 threading.py:259(__exit__)
      200    0.000    0.000    0.000    0.000 threading.py:265(_release_save)
      200    0.000    0.000    0.000    0.000 threading.py:268(_acquire_restore)
      200    0.000    0.000    0.000    0.000 threading.py:271(_is_owned)
      200    0.001    0.000    0.078    0.000 threading.py:280(wait)
      600    0.000    0.000    0.004    0.000 threading.py:521(__init__)
      400    0.000    0.000    0.000    0.000 threading.py:529(is_set)
      200    0.001    0.000    0.080    0.000 threading.py:556(wait)
      200    0.000    0.000    0.000    0.000 threading.py:750(_newname)
      200    0.001    0.000    0.003    0.000 threading.py:777(__init__)
      200    0.001    0.000    0.093    0.000 threading.py:855(start)
      200    0.000    0.000    0.001    0.000 threading.py:966(_stop)
      800    0.004    0.000    0.004    0.000 {built-in method _thread.allocate_lock}
      400    0.000    0.000    0.000    0.000 {built-in method _thread.get_ident}
      200    0.012    0.000    0.012    0.000 {built-in method _thread.start_new_thread}
        1    0.000    0.000    2.729    2.729 {built-in method builtins.exec}
      200    0.000    0.000    0.000    0.000 {method '__enter__' of '_thread.lock' objects}
      600    0.000    0.000    0.000    0.000 {method '__exit__' of '_thread.lock' objects}
     1000    2.701    0.003    2.701    0.003 {method 'acquire' of '_thread.lock' objects}
      200    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
      200    0.000    0.000    0.000    0.000 {method 'append' of 'collections.deque' objects}
      200    0.000    0.000    0.000    0.000 {method 'append' of 'list' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
      200    0.000    0.000    0.000    0.000 {method 'discard' of 'set' objects}
      200    0.000    0.000    0.000    0.000 {method 'locked' of '_thread.lock' objects}
      400    0.000    0.000    0.000    0.000 {method 'release' of '_thread.lock' objects}



====== SECOND POOL, 200 THREADS, 10000 OBJECTS, 10000 OPERATIONS INSIDE FUNCTION ======

         11004 function calls in 2.852 seconds

   Ordered by: standard name

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000    2.852    2.852 <string>:1(<module>)
      200    0.001    0.000    0.001    0.000 _weakrefset.py:82(add)
        1    0.001    0.001    2.852    2.852 client.py:36(test_function)
      400    0.000    0.000    0.000    0.000 singleton.py:4(__call__)
      200    0.001    0.000    0.003    0.000 thread_builder.py:115(__init__)
      200    0.001    0.000    0.005    0.000 thread_builder.py:131(config)
      200    0.000    0.000    0.009    0.000 thread_builder.py:177(get_thread)
      200    0.001    0.000    2.642    0.013 threading.py:1001(join)
      200    0.000    0.000    2.641    0.013 threading.py:1039(_wait_for_tstate_lock)
      400    0.000    0.000    0.000    0.000 threading.py:1107(daemon)
      200    0.000    0.000    0.000    0.000 threading.py:1189(_make_invoke_excepthook)
      400    0.000    0.000    0.000    0.000 threading.py:1318(current_thread)
      600    0.002    0.000    0.002    0.000 threading.py:228(__init__)
      200    0.000    0.000    0.000    0.000 threading.py:256(__enter__)
      200    0.000    0.000    0.000    0.000 threading.py:259(__exit__)
      200    0.000    0.000    0.000    0.000 threading.py:265(_release_save)
      200    0.000    0.000    0.000    0.000 threading.py:268(_acquire_restore)
      200    0.000    0.000    0.000    0.000 threading.py:271(_is_owned)
      200    0.001    0.000    0.183    0.001 threading.py:280(wait)
      600    0.001    0.000    0.004    0.000 threading.py:521(__init__)
      400    0.000    0.000    0.000    0.000 threading.py:529(is_set)
      200    0.002    0.000    0.185    0.001 threading.py:556(wait)
      200    0.000    0.000    0.000    0.000 threading.py:750(_newname)
      200    0.001    0.000    0.004    0.000 threading.py:777(__init__)
      200    0.001    0.000    0.200    0.001 threading.py:855(start)
      200    0.000    0.000    0.001    0.000 threading.py:966(_stop)
      800    0.003    0.000    0.003    0.000 {built-in method _thread.allocate_lock}
      400    0.000    0.000    0.000    0.000 {built-in method _thread.get_ident}
      200    0.013    0.000    0.013    0.000 {built-in method _thread.start_new_thread}
        1    0.000    0.000    2.852    2.852 {built-in method builtins.exec}
      200    0.000    0.000    0.000    0.000 {method '__enter__' of '_thread.lock' objects}
      600    0.000    0.000    0.000    0.000 {method '__exit__' of '_thread.lock' objects}
     1000    2.821    0.003    2.821    0.003 {method 'acquire' of '_thread.lock' objects}
      200    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
      200    0.000    0.000    0.000    0.000 {method 'append' of 'collections.deque' objects}
      200    0.000    0.000    0.000    0.000 {method 'append' of 'list' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
      200    0.000    0.000    0.000    0.000 {method 'discard' of 'set' objects}
      200    0.000    0.000    0.000    0.000 {method 'locked' of '_thread.lock' objects}
      400    0.000    0.000    0.000    0.000 {method 'release' of '_thread.lock' objects}



====== THIRD POOL, 200 THREADS, 10000 OBJECTS, 10000 OPERATIONS INSIDE FUNCTION ======

         11004 function calls in 2.851 seconds

   Ordered by: standard name

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000    2.851    2.851 <string>:1(<module>)
      200    0.001    0.000    0.001    0.000 _weakrefset.py:82(add)
        1    0.001    0.001    2.851    2.851 client.py:36(test_function)
      400    0.000    0.000    0.000    0.000 singleton.py:4(__call__)
      200    0.001    0.000    0.003    0.000 thread_builder.py:115(__init__)
      200    0.001    0.000    0.006    0.000 thread_builder.py:131(config)
      200    0.000    0.000    0.011    0.000 thread_builder.py:177(get_thread)
      200    0.001    0.000    2.593    0.013 threading.py:1001(join)
      200    0.000    0.000    2.592    0.013 threading.py:1039(_wait_for_tstate_lock)
      400    0.000    0.000    0.000    0.000 threading.py:1107(daemon)
      200    0.000    0.000    0.000    0.000 threading.py:1189(_make_invoke_excepthook)
      400    0.000    0.000    0.000    0.000 threading.py:1318(current_thread)
      600    0.002    0.000    0.002    0.000 threading.py:228(__init__)
      200    0.000    0.000    0.000    0.000 threading.py:256(__enter__)
      200    0.000    0.000    0.000    0.000 threading.py:259(__exit__)
      200    0.000    0.000    0.000    0.000 threading.py:265(_release_save)
      200    0.000    0.000    0.000    0.000 threading.py:268(_acquire_restore)
      200    0.000    0.000    0.000    0.000 threading.py:271(_is_owned)
      200    0.001    0.000    0.225    0.001 threading.py:280(wait)
      600    0.001    0.000    0.005    0.000 threading.py:521(__init__)
      400    0.000    0.000    0.000    0.000 threading.py:529(is_set)
      200    0.002    0.000    0.228    0.001 threading.py:556(wait)
      200    0.000    0.000    0.000    0.000 threading.py:750(_newname)
      200    0.001    0.000    0.005    0.000 threading.py:777(__init__)
      200    0.002    0.000    0.246    0.001 threading.py:855(start)
      200    0.000    0.000    0.001    0.000 threading.py:966(_stop)
      800    0.003    0.000    0.003    0.000 {built-in method _thread.allocate_lock}
      400    0.000    0.000    0.000    0.000 {built-in method _thread.get_ident}
      200    0.016    0.000    0.016    0.000 {built-in method _thread.start_new_thread}
        1    0.000    0.000    2.851    2.851 {built-in method builtins.exec}
      200    0.000    0.000    0.000    0.000 {method '__enter__' of '_thread.lock' objects}
      600    0.000    0.000    0.000    0.000 {method '__exit__' of '_thread.lock' objects}
     1000    2.814    0.003    2.814    0.003 {method 'acquire' of '_thread.lock' objects}
      200    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
      200    0.000    0.000    0.000    0.000 {method 'append' of 'collections.deque' objects}
      200    0.000    0.000    0.000    0.000 {method 'append' of 'list' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
      200    0.000    0.000    0.000    0.000 {method 'discard' of 'set' objects}
      200    0.000    0.000    0.000    0.000 {method 'locked' of '_thread.lock' objects}
      400    0.000    0.000    0.000    0.000 {method 'release' of '_thread.lock' objects}



====== FIRST POOL, 300 THREADS, 10000 OBJECTS, 10000 OPERATIONS INSIDE FUNCTION ======

         16504 function calls in 3.806 seconds

   Ordered by: standard name

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000    3.806    3.806 <string>:1(<module>)
      300    0.000    0.000    0.000    0.000 _weakrefset.py:82(add)
        1    0.001    0.001    3.806    3.806 client.py:36(test_function)
      600    0.000    0.000    0.000    0.000 singleton.py:4(__call__)
      300    0.001    0.000    0.003    0.000 thread_builder.py:115(__init__)
      300    0.001    0.000    0.006    0.000 thread_builder.py:131(config)
      300    0.000    0.000    0.011    0.000 thread_builder.py:177(get_thread)
      300    0.001    0.000    2.943    0.010 threading.py:1001(join)
      300    0.000    0.000    2.941    0.010 threading.py:1039(_wait_for_tstate_lock)
      600    0.000    0.000    0.000    0.000 threading.py:1107(daemon)
      300    0.000    0.000    0.000    0.000 threading.py:1189(_make_invoke_excepthook)
      600    0.000    0.000    0.000    0.000 threading.py:1318(current_thread)
      900    0.002    0.000    0.002    0.000 threading.py:228(__init__)
      300    0.000    0.000    0.000    0.000 threading.py:256(__enter__)
      300    0.000    0.000    0.000    0.000 threading.py:259(__exit__)
      300    0.000    0.000    0.000    0.000 threading.py:265(_release_save)
      300    0.000    0.000    0.000    0.000 threading.py:268(_acquire_restore)
      300    0.000    0.000    0.000    0.000 threading.py:271(_is_owned)
      300    0.001    0.000    0.830    0.003 threading.py:280(wait)
      900    0.001    0.000    0.005    0.000 threading.py:521(__init__)
      600    0.000    0.000    0.000    0.000 threading.py:529(is_set)
      300    0.002    0.000    0.833    0.003 threading.py:556(wait)
      300    0.000    0.000    0.000    0.000 threading.py:750(_newname)
      300    0.002    0.000    0.005    0.000 threading.py:777(__init__)
      300    0.002    0.000    0.852    0.003 threading.py:855(start)
      300    0.001    0.000    0.001    0.000 threading.py:966(_stop)
     1200    0.003    0.000    0.003    0.000 {built-in method _thread.allocate_lock}
      600    0.000    0.000    0.000    0.000 {built-in method _thread.get_ident}
      300    0.017    0.000    0.017    0.000 {built-in method _thread.start_new_thread}
        1    0.000    0.000    3.806    3.806 {built-in method builtins.exec}
      300    0.000    0.000    0.000    0.000 {method '__enter__' of '_thread.lock' objects}
      900    0.000    0.000    0.000    0.000 {method '__exit__' of '_thread.lock' objects}
     1500    3.766    0.003    3.766    0.003 {method 'acquire' of '_thread.lock' objects}
      300    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
      300    0.000    0.000    0.000    0.000 {method 'append' of 'collections.deque' objects}
      300    0.000    0.000    0.000    0.000 {method 'append' of 'list' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
      300    0.000    0.000    0.000    0.000 {method 'discard' of 'set' objects}
      300    0.000    0.000    0.000    0.000 {method 'locked' of '_thread.lock' objects}
      600    0.000    0.000    0.000    0.000 {method 'release' of '_thread.lock' objects}



====== SECOND POOL, 300 THREADS, 10000 OBJECTS, 10000 OPERATIONS INSIDE FUNCTION ======

         16504 function calls in 4.568 seconds

   Ordered by: standard name

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000    4.568    4.568 <string>:1(<module>)
      300    0.000    0.000    0.001    0.000 _weakrefset.py:82(add)
        1    0.001    0.001    4.568    4.568 client.py:36(test_function)
      600    0.000    0.000    0.000    0.000 singleton.py:4(__call__)
      300    0.002    0.000    0.004    0.000 thread_builder.py:115(__init__)
      300    0.002    0.000    0.008    0.000 thread_builder.py:131(config)
      300    0.001    0.000    0.015    0.000 thread_builder.py:177(get_thread)
      300    0.001    0.000    2.736    0.009 threading.py:1001(join)
      300    0.000    0.000    2.734    0.009 threading.py:1039(_wait_for_tstate_lock)
      600    0.000    0.000    0.000    0.000 threading.py:1107(daemon)
      300    0.000    0.000    0.000    0.000 threading.py:1189(_make_invoke_excepthook)
      600    0.000    0.000    0.000    0.000 threading.py:1318(current_thread)
      900    0.003    0.000    0.003    0.000 threading.py:228(__init__)
      300    0.000    0.000    0.001    0.000 threading.py:256(__enter__)
      300    0.000    0.000    0.000    0.000 threading.py:259(__exit__)
      300    0.000    0.000    0.000    0.000 threading.py:265(_release_save)
      300    0.000    0.000    0.001    0.000 threading.py:268(_acquire_restore)
      300    0.000    0.000    0.000    0.000 threading.py:271(_is_owned)
      300    0.002    0.000    1.783    0.006 threading.py:280(wait)
      900    0.001    0.000    0.007    0.000 threading.py:521(__init__)
      600    0.000    0.000    0.000    0.000 threading.py:529(is_set)
      300    0.003    0.000    1.787    0.006 threading.py:556(wait)
      300    0.000    0.000    0.000    0.000 threading.py:750(_newname)
      300    0.002    0.000    0.006    0.000 threading.py:777(__init__)
      300    0.003    0.000    1.816    0.006 threading.py:855(start)
      300    0.001    0.000    0.001    0.000 threading.py:966(_stop)
     1200    0.004    0.000    0.004    0.000 {built-in method _thread.allocate_lock}
      600    0.000    0.000    0.000    0.000 {built-in method _thread.get_ident}
      300    0.027    0.000    0.027    0.000 {built-in method _thread.start_new_thread}
        1    0.000    0.000    4.568    4.568 {built-in method builtins.exec}
      300    0.000    0.000    0.000    0.000 {method '__enter__' of '_thread.lock' objects}
      900    0.000    0.000    0.000    0.000 {method '__exit__' of '_thread.lock' objects}
     1500    4.510    0.003    4.510    0.003 {method 'acquire' of '_thread.lock' objects}
      300    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
      300    0.000    0.000    0.000    0.000 {method 'append' of 'collections.deque' objects}
      300    0.000    0.000    0.000    0.000 {method 'append' of 'list' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
      300    0.000    0.000    0.000    0.000 {method 'discard' of 'set' objects}
      300    0.000    0.000    0.000    0.000 {method 'locked' of '_thread.lock' objects}
      600    0.000    0.000    0.000    0.000 {method 'release' of '_thread.lock' objects}



====== THIRD POOL, 300 THREADS, 10000 OBJECTS, 10000 OPERATIONS INSIDE FUNCTION ======

         16504 function calls in 4.507 seconds

   Ordered by: standard name

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000    4.507    4.507 <string>:1(<module>)
      300    0.000    0.000    0.000    0.000 _weakrefset.py:82(add)
        1    0.001    0.001    4.507    4.507 client.py:36(test_function)
      600    0.000    0.000    0.000    0.000 singleton.py:4(__call__)
      300    0.002    0.000    0.004    0.000 thread_builder.py:115(__init__)
      300    0.002    0.000    0.008    0.000 thread_builder.py:131(config)
      300    0.001    0.000    0.015    0.000 thread_builder.py:177(get_thread)
      300    0.001    0.000    3.088    0.010 threading.py:1001(join)
      300    0.001    0.000    3.086    0.010 threading.py:1039(_wait_for_tstate_lock)
      600    0.000    0.000    0.000    0.000 threading.py:1107(daemon)
      300    0.000    0.000    0.000    0.000 threading.py:1189(_make_invoke_excepthook)
      600    0.000    0.000    0.001    0.000 threading.py:1318(current_thread)
      900    0.003    0.000    0.003    0.000 threading.py:228(__init__)
      300    0.000    0.000    0.001    0.000 threading.py:256(__enter__)
      300    0.000    0.000    0.000    0.000 threading.py:259(__exit__)
      300    0.000    0.000    0.000    0.000 threading.py:265(_release_save)
      300    0.000    0.000    0.001    0.000 threading.py:268(_acquire_restore)
      300    0.000    0.000    0.000    0.000 threading.py:271(_is_owned)
      300    0.002    0.000    1.372    0.005 threading.py:280(wait)
      900    0.001    0.000    0.007    0.000 threading.py:521(__init__)
      600    0.000    0.000    0.000    0.000 threading.py:529(is_set)
      300    0.003    0.000    1.376    0.005 threading.py:556(wait)
      300    0.000    0.000    0.000    0.000 threading.py:750(_newname)
      300    0.002    0.000    0.006    0.000 threading.py:777(__init__)
      300    0.002    0.000    1.403    0.005 threading.py:855(start)
      300    0.001    0.000    0.001    0.000 threading.py:966(_stop)
     1200    0.005    0.000    0.005    0.000 {built-in method _thread.allocate_lock}
      600    0.000    0.000    0.000    0.000 {built-in method _thread.get_ident}
      300    0.025    0.000    0.025    0.000 {built-in method _thread.start_new_thread}
        1    0.000    0.000    4.507    4.507 {built-in method builtins.exec}
      300    0.000    0.000    0.000    0.000 {method '__enter__' of '_thread.lock' objects}
      900    0.000    0.000    0.000    0.000 {method '__exit__' of '_thread.lock' objects}
     1500    4.453    0.003    4.453    0.003 {method 'acquire' of '_thread.lock' objects}
      300    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
      300    0.000    0.000    0.000    0.000 {method 'append' of 'collections.deque' objects}
      300    0.000    0.000    0.000    0.000 {method 'append' of 'list' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
      300    0.000    0.000    0.000    0.000 {method 'discard' of 'set' objects}
      300    0.000    0.000    0.000    0.000 {method 'locked' of '_thread.lock' objects}
      600    0.000    0.000    0.000    0.000 {method 'release' of '_thread.lock' objects}



====== FIRST POOL, 400 THREADS, 10000 OBJECTS, 10000 OPERATIONS INSIDE FUNCTION ======

         22004 function calls in 5.673 seconds

   Ordered by: standard name

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000    5.673    5.673 <string>:1(<module>)
      400    0.000    0.000    0.000    0.000 _weakrefset.py:82(add)
        1    0.001    0.001    5.673    5.673 client.py:36(test_function)
      800    0.000    0.000    0.000    0.000 singleton.py:4(__call__)
      400    0.002    0.000    0.004    0.000 thread_builder.py:115(__init__)
      400    0.002    0.000    0.008    0.000 thread_builder.py:131(config)
      400    0.001    0.000    0.026    0.000 thread_builder.py:177(get_thread)
      400    0.002    0.000    2.018    0.005 threading.py:1001(join)
      400    0.001    0.000    2.016    0.005 threading.py:1039(_wait_for_tstate_lock)
      800    0.000    0.000    0.000    0.000 threading.py:1107(daemon)
      400    0.001    0.000    0.001    0.000 threading.py:1189(_make_invoke_excepthook)
      800    0.000    0.000    0.000    0.000 threading.py:1318(current_thread)
     1200    0.003    0.000    0.003    0.000 threading.py:228(__init__)
      400    0.000    0.000    0.001    0.000 threading.py:256(__enter__)
      400    0.000    0.000    0.000    0.000 threading.py:259(__exit__)
      400    0.000    0.000    0.000    0.000 threading.py:265(_release_save)
      400    0.000    0.000    0.001    0.000 threading.py:268(_acquire_restore)
      400    0.000    0.000    0.000    0.000 threading.py:271(_is_owned)
      400    0.002    0.000    3.593    0.009 threading.py:280(wait)
     1200    0.001    0.000    0.006    0.000 threading.py:521(__init__)
      800    0.000    0.000    0.000    0.000 threading.py:529(is_set)
      400    0.003    0.000    3.597    0.009 threading.py:556(wait)
      400    0.000    0.000    0.000    0.000 threading.py:750(_newname)
      400    0.013    0.000    0.017    0.000 threading.py:777(__init__)
      400    0.003    0.000    3.628    0.009 threading.py:855(start)
      400    0.001    0.000    0.001    0.000 threading.py:966(_stop)
     1600    0.004    0.000    0.004    0.000 {built-in method _thread.allocate_lock}
      800    0.000    0.000    0.000    0.000 {built-in method _thread.get_ident}
      400    0.028    0.000    0.028    0.000 {built-in method _thread.start_new_thread}
        1    0.000    0.000    5.673    5.673 {built-in method builtins.exec}
      400    0.000    0.000    0.000    0.000 {method '__enter__' of '_thread.lock' objects}
     1200    0.000    0.000    0.000    0.000 {method '__exit__' of '_thread.lock' objects}
     2000    5.602    0.003    5.602    0.003 {method 'acquire' of '_thread.lock' objects}
      400    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
      400    0.000    0.000    0.000    0.000 {method 'append' of 'collections.deque' objects}
      400    0.000    0.000    0.000    0.000 {method 'append' of 'list' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
      400    0.000    0.000    0.000    0.000 {method 'discard' of 'set' objects}
      400    0.000    0.000    0.000    0.000 {method 'locked' of '_thread.lock' objects}
      800    0.000    0.000    0.000    0.000 {method 'release' of '_thread.lock' objects}



====== SECOND POOL, 400 THREADS, 10000 OBJECTS, 10000 OPERATIONS INSIDE FUNCTION ======

         22004 function calls in 5.620 seconds

   Ordered by: standard name

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000    5.620    5.620 <string>:1(<module>)
      400    0.000    0.000    0.001    0.000 _weakrefset.py:82(add)
        1    0.001    0.001    5.620    5.620 client.py:36(test_function)
      800    0.000    0.000    0.000    0.000 singleton.py:4(__call__)
      400    0.002    0.000    0.004    0.000 thread_builder.py:115(__init__)
      400    0.001    0.000    0.007    0.000 thread_builder.py:131(config)
      400    0.001    0.000    0.013    0.000 thread_builder.py:177(get_thread)
      400    0.002    0.000    2.108    0.005 threading.py:1001(join)
      400    0.001    0.000    2.105    0.005 threading.py:1039(_wait_for_tstate_lock)
      800    0.000    0.000    0.000    0.000 threading.py:1107(daemon)
      400    0.000    0.000    0.000    0.000 threading.py:1189(_make_invoke_excepthook)
      800    0.000    0.000    0.001    0.000 threading.py:1318(current_thread)
     1200    0.003    0.000    0.003    0.000 threading.py:228(__init__)
      400    0.000    0.000    0.001    0.000 threading.py:256(__enter__)
      400    0.000    0.000    0.000    0.000 threading.py:259(__exit__)
      400    0.000    0.000    0.000    0.000 threading.py:265(_release_save)
      400    0.000    0.000    0.001    0.000 threading.py:268(_acquire_restore)
      400    0.000    0.000    0.000    0.000 threading.py:271(_is_owned)
      400    0.002    0.000    3.463    0.009 threading.py:280(wait)
     1200    0.001    0.000    0.006    0.000 threading.py:521(__init__)
      800    0.000    0.000    0.000    0.000 threading.py:529(is_set)
      400    0.003    0.000    3.467    0.009 threading.py:556(wait)
      400    0.000    0.000    0.000    0.000 threading.py:750(_newname)
      400    0.002    0.000    0.005    0.000 threading.py:777(__init__)
      400    0.003    0.000    3.498    0.009 threading.py:855(start)
      400    0.001    0.000    0.001    0.000 threading.py:966(_stop)
     1600    0.004    0.000    0.004    0.000 {built-in method _thread.allocate_lock}
      800    0.000    0.000    0.000    0.000 {built-in method _thread.get_ident}
      400    0.028    0.000    0.028    0.000 {built-in method _thread.start_new_thread}
        1    0.000    0.000    5.620    5.620 {built-in method builtins.exec}
      400    0.000    0.000    0.000    0.000 {method '__enter__' of '_thread.lock' objects}
     1200    0.000    0.000    0.000    0.000 {method '__exit__' of '_thread.lock' objects}
     2000    5.561    0.003    5.561    0.003 {method 'acquire' of '_thread.lock' objects}
      400    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
      400    0.000    0.000    0.000    0.000 {method 'append' of 'collections.deque' objects}
      400    0.000    0.000    0.000    0.000 {method 'append' of 'list' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
      400    0.000    0.000    0.000    0.000 {method 'discard' of 'set' objects}
      400    0.000    0.000    0.000    0.000 {method 'locked' of '_thread.lock' objects}
      800    0.000    0.000    0.000    0.000 {method 'release' of '_thread.lock' objects}



====== THIRD POOL, 400 THREADS, 10000 OBJECTS, 10000 OPERATIONS INSIDE FUNCTION ======

         22004 function calls in 5.803 seconds

   Ordered by: standard name

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000    5.803    5.803 <string>:1(<module>)
      400    0.000    0.000    0.000    0.000 _weakrefset.py:82(add)
        1    0.001    0.001    5.803    5.803 client.py:36(test_function)
      800    0.000    0.000    0.000    0.000 singleton.py:4(__call__)
      400    0.002    0.000    0.004    0.000 thread_builder.py:115(__init__)
      400    0.002    0.000    0.007    0.000 thread_builder.py:131(config)
      400    0.000    0.000    0.013    0.000 thread_builder.py:177(get_thread)
      400    0.002    0.000    2.001    0.005 threading.py:1001(join)
      400    0.001    0.000    1.999    0.005 threading.py:1039(_wait_for_tstate_lock)
      800    0.000    0.000    0.000    0.000 threading.py:1107(daemon)
      400    0.000    0.000    0.000    0.000 threading.py:1189(_make_invoke_excepthook)
      800    0.000    0.000    0.000    0.000 threading.py:1318(current_thread)
     1200    0.003    0.000    0.003    0.000 threading.py:228(__init__)
      400    0.000    0.000    0.000    0.000 threading.py:256(__enter__)
      400    0.000    0.000    0.000    0.000 threading.py:259(__exit__)
      400    0.002    0.000    0.002    0.000 threading.py:265(_release_save)
      400    0.000    0.000    0.001    0.000 threading.py:268(_acquire_restore)
      400    0.000    0.000    0.000    0.000 threading.py:271(_is_owned)
      400    0.002    0.000    3.755    0.009 threading.py:280(wait)
     1200    0.001    0.000    0.006    0.000 threading.py:521(__init__)
      800    0.000    0.000    0.000    0.000 threading.py:529(is_set)
      400    0.003    0.000    3.759    0.009 threading.py:556(wait)
      400    0.000    0.000    0.000    0.000 threading.py:750(_newname)
      400    0.002    0.000    0.005    0.000 threading.py:777(__init__)
      400    0.002    0.000    3.787    0.009 threading.py:855(start)
      400    0.001    0.000    0.001    0.000 threading.py:966(_stop)
     1600    0.004    0.000    0.004    0.000 {built-in method _thread.allocate_lock}
      800    0.000    0.000    0.000    0.000 {built-in method _thread.get_ident}
      400    0.026    0.000    0.026    0.000 {built-in method _thread.start_new_thread}
        1    0.000    0.000    5.803    5.803 {built-in method builtins.exec}
      400    0.000    0.000    0.000    0.000 {method '__enter__' of '_thread.lock' objects}
     1200    0.000    0.000    0.000    0.000 {method '__exit__' of '_thread.lock' objects}
     2000    5.746    0.003    5.746    0.003 {method 'acquire' of '_thread.lock' objects}
      400    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
      400    0.000    0.000    0.000    0.000 {method 'append' of 'collections.deque' objects}
      400    0.000    0.000    0.000    0.000 {method 'append' of 'list' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
      400    0.000    0.000    0.000    0.000 {method 'discard' of 'set' objects}
      400    0.000    0.000    0.000    0.000 {method 'locked' of '_thread.lock' objects}
      800    0.000    0.000    0.000    0.000 {method 'release' of '_thread.lock' objects}



====== FIRST POOL, 500 THREADS, 10000 OBJECTS, 10000 OPERATIONS INSIDE FUNCTION ======

         27504 function calls in 6.408 seconds

   Ordered by: standard name

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000    6.408    6.408 <string>:1(<module>)
      500    0.000    0.000    0.001    0.000 _weakrefset.py:82(add)
        1    0.001    0.001    6.408    6.408 client.py:36(test_function)
     1000    0.000    0.000    0.000    0.000 singleton.py:4(__call__)
      500    0.002    0.000    0.005    0.000 thread_builder.py:115(__init__)
      500    0.002    0.000    0.009    0.000 thread_builder.py:131(config)
      500    0.001    0.000    0.016    0.000 thread_builder.py:177(get_thread)
      500    0.002    0.000    2.362    0.005 threading.py:1001(join)
      500    0.001    0.000    2.359    0.005 threading.py:1039(_wait_for_tstate_lock)
     1000    0.000    0.000    0.000    0.000 threading.py:1107(daemon)
      500    0.001    0.000    0.001    0.000 threading.py:1189(_make_invoke_excepthook)
     1000    0.000    0.000    0.001    0.000 threading.py:1318(current_thread)
     1500    0.003    0.000    0.003    0.000 threading.py:228(__init__)
      500    0.000    0.000    0.001    0.000 threading.py:256(__enter__)
      500    0.000    0.000    0.000    0.000 threading.py:259(__exit__)
      500    0.000    0.000    0.000    0.000 threading.py:265(_release_save)
      500    0.000    0.000    0.001    0.000 threading.py:268(_acquire_restore)
      500    0.000    0.000    0.000    0.000 threading.py:271(_is_owned)
      500    0.003    0.000    3.991    0.008 threading.py:280(wait)
     1500    0.001    0.000    0.007    0.000 threading.py:521(__init__)
     1000    0.000    0.000    0.000    0.000 threading.py:529(is_set)
      500    0.003    0.000    3.995    0.008 threading.py:556(wait)
      500    0.000    0.000    0.000    0.000 threading.py:750(_newname)
      500    0.002    0.000    0.006    0.000 threading.py:777(__init__)
      500    0.003    0.000    4.029    0.008 threading.py:855(start)
      500    0.001    0.000    0.001    0.000 threading.py:966(_stop)
     2000    0.005    0.000    0.005    0.000 {built-in method _thread.allocate_lock}
     1000    0.000    0.000    0.000    0.000 {built-in method _thread.get_ident}
      500    0.031    0.000    0.031    0.000 {built-in method _thread.start_new_thread}
        1    0.000    0.000    6.408    6.408 {built-in method builtins.exec}
      500    0.000    0.000    0.000    0.000 {method '__enter__' of '_thread.lock' objects}
     1500    0.000    0.000    0.000    0.000 {method '__exit__' of '_thread.lock' objects}
     2500    6.342    0.003    6.342    0.003 {method 'acquire' of '_thread.lock' objects}
      500    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
      500    0.000    0.000    0.000    0.000 {method 'append' of 'collections.deque' objects}
      500    0.000    0.000    0.000    0.000 {method 'append' of 'list' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
      500    0.000    0.000    0.000    0.000 {method 'discard' of 'set' objects}
      500    0.000    0.000    0.000    0.000 {method 'locked' of '_thread.lock' objects}
     1000    0.000    0.000    0.000    0.000 {method 'release' of '_thread.lock' objects}



====== SECOND POOL, 500 THREADS, 10000 OBJECTS, 10000 OPERATIONS INSIDE FUNCTION ======

         27504 function calls in 6.441 seconds

   Ordered by: standard name

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000    6.441    6.441 <string>:1(<module>)
      500    0.000    0.000    0.000    0.000 _weakrefset.py:82(add)
        1    0.001    0.001    6.441    6.441 client.py:36(test_function)
     1000    0.000    0.000    0.000    0.000 singleton.py:4(__call__)
      500    0.002    0.000    0.005    0.000 thread_builder.py:115(__init__)
      500    0.002    0.000    0.009    0.000 thread_builder.py:131(config)
      500    0.001    0.000    0.017    0.000 thread_builder.py:177(get_thread)
      500    0.002    0.000    2.415    0.005 threading.py:1001(join)
      500    0.001    0.000    2.412    0.005 threading.py:1039(_wait_for_tstate_lock)
     1000    0.000    0.000    0.000    0.000 threading.py:1107(daemon)
      500    0.000    0.000    0.000    0.000 threading.py:1189(_make_invoke_excepthook)
     1000    0.000    0.000    0.001    0.000 threading.py:1318(current_thread)
     1500    0.003    0.000    0.003    0.000 threading.py:228(__init__)
      500    0.000    0.000    0.001    0.000 threading.py:256(__enter__)
      500    0.000    0.000    0.000    0.000 threading.py:259(__exit__)
      500    0.000    0.000    0.000    0.000 threading.py:265(_release_save)
      500    0.000    0.000    0.001    0.000 threading.py:268(_acquire_restore)
      500    0.000    0.000    0.001    0.000 threading.py:271(_is_owned)
      500    0.002    0.000    3.970    0.008 threading.py:280(wait)
     1500    0.001    0.000    0.008    0.000 threading.py:521(__init__)
     1000    0.000    0.000    0.000    0.000 threading.py:529(is_set)
      500    0.003    0.000    3.974    0.008 threading.py:556(wait)
      500    0.000    0.000    0.000    0.000 threading.py:750(_newname)
      500    0.003    0.000    0.007    0.000 threading.py:777(__init__)
      500    0.003    0.000    4.008    0.008 threading.py:855(start)
      500    0.001    0.000    0.001    0.000 threading.py:966(_stop)
     2000    0.005    0.000    0.005    0.000 {built-in method _thread.allocate_lock}
     1000    0.000    0.000    0.000    0.000 {built-in method _thread.get_ident}
      500    0.031    0.000    0.031    0.000 {built-in method _thread.start_new_thread}
        1    0.000    0.000    6.441    6.441 {built-in method builtins.exec}
      500    0.000    0.000    0.000    0.000 {method '__enter__' of '_thread.lock' objects}
     1500    0.000    0.000    0.000    0.000 {method '__exit__' of '_thread.lock' objects}
     2500    6.374    0.003    6.374    0.003 {method 'acquire' of '_thread.lock' objects}
      500    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
      500    0.000    0.000    0.000    0.000 {method 'append' of 'collections.deque' objects}
      500    0.000    0.000    0.000    0.000 {method 'append' of 'list' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
      500    0.000    0.000    0.000    0.000 {method 'discard' of 'set' objects}
      500    0.000    0.000    0.000    0.000 {method 'locked' of '_thread.lock' objects}
     1000    0.000    0.000    0.000    0.000 {method 'release' of '_thread.lock' objects}



====== THIRD POOL, 500 THREADS, 10000 OBJECTS, 10000 OPERATIONS INSIDE FUNCTION ======

         27504 function calls in 6.693 seconds

   Ordered by: standard name

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000    6.693    6.693 <string>:1(<module>)
      500    0.000    0.000    0.000    0.000 _weakrefset.py:82(add)
        1    0.001    0.001    6.693    6.693 client.py:36(test_function)
     1000    0.000    0.000    0.000    0.000 singleton.py:4(__call__)
      500    0.002    0.000    0.004    0.000 thread_builder.py:115(__init__)
      500    0.002    0.000    0.008    0.000 thread_builder.py:131(config)
      500    0.001    0.000    0.033    0.000 thread_builder.py:177(get_thread)
      500    0.002    0.000    2.354    0.005 threading.py:1001(join)
      500    0.001    0.000    2.352    0.005 threading.py:1039(_wait_for_tstate_lock)
     1000    0.000    0.000    0.000    0.000 threading.py:1107(daemon)
      500    0.000    0.000    0.000    0.000 threading.py:1189(_make_invoke_excepthook)
     1000    0.001    0.000    0.001    0.000 threading.py:1318(current_thread)
     1500    0.003    0.000    0.003    0.000 threading.py:228(__init__)
      500    0.000    0.000    0.001    0.000 threading.py:256(__enter__)
      500    0.000    0.000    0.000    0.000 threading.py:259(__exit__)
      500    0.000    0.000    0.000    0.000 threading.py:265(_release_save)
      500    0.000    0.000    0.001    0.000 threading.py:268(_acquire_restore)
      500    0.000    0.000    0.001    0.000 threading.py:271(_is_owned)
      500    0.003    0.000    4.263    0.009 threading.py:280(wait)
     1500    0.001    0.000    0.007    0.000 threading.py:521(__init__)
     1000    0.000    0.000    0.000    0.000 threading.py:529(is_set)
      500    0.003    0.000    4.268    0.009 threading.py:556(wait)
      500    0.000    0.000    0.000    0.000 threading.py:750(_newname)
      500    0.020    0.000    0.024    0.000 threading.py:777(__init__)
      500    0.003    0.000    4.304    0.009 threading.py:855(start)
      500    0.001    0.000    0.002    0.000 threading.py:966(_stop)
     2000    0.005    0.000    0.005    0.000 {built-in method _thread.allocate_lock}
     1000    0.000    0.000    0.000    0.000 {built-in method _thread.get_ident}
      500    0.032    0.000    0.032    0.000 {built-in method _thread.start_new_thread}
        1    0.000    0.000    6.693    6.693 {built-in method builtins.exec}
      500    0.000    0.000    0.000    0.000 {method '__enter__' of '_thread.lock' objects}
     1500    0.000    0.000    0.000    0.000 {method '__exit__' of '_thread.lock' objects}
     2500    6.606    0.003    6.606    0.003 {method 'acquire' of '_thread.lock' objects}
      500    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
      500    0.000    0.000    0.000    0.000 {method 'append' of 'collections.deque' objects}
      500    0.000    0.000    0.000    0.000 {method 'append' of 'list' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
      500    0.000    0.000    0.000    0.000 {method 'discard' of 'set' objects}
      500    0.000    0.000    0.000    0.000 {method 'locked' of '_thread.lock' objects}
     1000    0.000    0.000    0.000    0.000 {method 'release' of '_thread.lock' objects}



====== FIRST POOL, 600 THREADS, 10000 OBJECTS, 10000 OPERATIONS INSIDE FUNCTION ======

         33004 function calls in 7.387 seconds

   Ordered by: standard name

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000    7.387    7.387 <string>:1(<module>)
      600    0.001    0.000    0.001    0.000 _weakrefset.py:82(add)
        1    0.002    0.002    7.387    7.387 client.py:36(test_function)
     1200    0.000    0.000    0.000    0.000 singleton.py:4(__call__)
      600    0.003    0.000    0.008    0.000 thread_builder.py:115(__init__)
      600    0.003    0.000    0.015    0.000 thread_builder.py:131(config)
      600    0.001    0.000    0.028    0.000 thread_builder.py:177(get_thread)
      600    0.002    0.000    2.375    0.004 threading.py:1001(join)
      600    0.001    0.000    2.373    0.004 threading.py:1039(_wait_for_tstate_lock)
     1200    0.000    0.000    0.000    0.000 threading.py:1107(daemon)
      600    0.003    0.000    0.003    0.000 threading.py:1189(_make_invoke_excepthook)
     1200    0.001    0.000    0.001    0.000 threading.py:1318(current_thread)
     1800    0.005    0.000    0.005    0.000 threading.py:228(__init__)
      600    0.000    0.000    0.001    0.000 threading.py:256(__enter__)
      600    0.000    0.000    0.001    0.000 threading.py:259(__exit__)
      600    0.000    0.000    0.000    0.000 threading.py:265(_release_save)
      600    0.001    0.000    0.001    0.000 threading.py:268(_acquire_restore)
      600    0.000    0.000    0.001    0.000 threading.py:271(_is_owned)
      600    0.003    0.000    4.932    0.008 threading.py:280(wait)
     1800    0.002    0.000    0.012    0.000 threading.py:521(__init__)
     1200    0.000    0.000    0.000    0.000 threading.py:529(is_set)
      600    0.004    0.000    4.937    0.008 threading.py:556(wait)
      600    0.001    0.000    0.001    0.000 threading.py:750(_newname)
      600    0.004    0.000    0.012    0.000 threading.py:777(__init__)
      600    0.004    0.000    4.982    0.008 threading.py:855(start)
      600    0.001    0.000    0.002    0.000 threading.py:966(_stop)
     2400    0.011    0.000    0.011    0.000 {built-in method _thread.allocate_lock}
     1200    0.000    0.000    0.000    0.000 {built-in method _thread.get_ident}
      600    0.041    0.000    0.041    0.000 {built-in method _thread.start_new_thread}
        1    0.000    0.000    7.387    7.387 {built-in method builtins.exec}
      600    0.000    0.000    0.000    0.000 {method '__enter__' of '_thread.lock' objects}
     1800    0.000    0.000    0.000    0.000 {method '__exit__' of '_thread.lock' objects}
     3000    7.292    0.002    7.292    0.002 {method 'acquire' of '_thread.lock' objects}
      600    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
      600    0.000    0.000    0.000    0.000 {method 'append' of 'collections.deque' objects}
      600    0.000    0.000    0.000    0.000 {method 'append' of 'list' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
      600    0.000    0.000    0.000    0.000 {method 'discard' of 'set' objects}
      600    0.000    0.000    0.000    0.000 {method 'locked' of '_thread.lock' objects}
     1200    0.000    0.000    0.000    0.000 {method 'release' of '_thread.lock' objects}



====== SECOND POOL, 600 THREADS, 10000 OBJECTS, 10000 OPERATIONS INSIDE FUNCTION ======

         33004 function calls in 7.846 seconds

   Ordered by: standard name

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000    7.846    7.846 <string>:1(<module>)
      600    0.000    0.000    0.001    0.000 _weakrefset.py:82(add)
        1    0.002    0.002    7.846    7.846 client.py:36(test_function)
     1200    0.000    0.000    0.000    0.000 singleton.py:4(__call__)
      600    0.003    0.000    0.006    0.000 thread_builder.py:115(__init__)
      600    0.002    0.000    0.012    0.000 thread_builder.py:131(config)
      600    0.001    0.000    0.022    0.000 thread_builder.py:177(get_thread)
      600    0.002    0.000    2.499    0.004 threading.py:1001(join)
      600    0.001    0.000    2.496    0.004 threading.py:1039(_wait_for_tstate_lock)
     1200    0.000    0.000    0.000    0.000 threading.py:1107(daemon)
      600    0.001    0.000    0.001    0.000 threading.py:1189(_make_invoke_excepthook)
     1200    0.001    0.000    0.001    0.000 threading.py:1318(current_thread)
     1800    0.004    0.000    0.004    0.000 threading.py:228(__init__)
      600    0.000    0.000    0.001    0.000 threading.py:256(__enter__)
      600    0.000    0.000    0.001    0.000 threading.py:259(__exit__)
      600    0.000    0.000    0.000    0.000 threading.py:265(_release_save)
      600    0.000    0.000    0.001    0.000 threading.py:268(_acquire_restore)
      600    0.000    0.000    0.001    0.000 threading.py:271(_is_owned)
      600    0.003    0.000    5.275    0.009 threading.py:280(wait)
     1800    0.002    0.000    0.010    0.000 threading.py:521(__init__)
     1200    0.000    0.000    0.000    0.000 threading.py:529(is_set)
      600    0.004    0.000    5.280    0.009 threading.py:556(wait)
      600    0.000    0.000    0.000    0.000 threading.py:750(_newname)
      600    0.003    0.000    0.009    0.000 threading.py:777(__init__)
      600    0.004    0.000    5.324    0.009 threading.py:855(start)
      600    0.001    0.000    0.002    0.000 threading.py:966(_stop)
     2400    0.006    0.000    0.006    0.000 {built-in method _thread.allocate_lock}
     1200    0.000    0.000    0.000    0.000 {built-in method _thread.get_ident}
      600    0.039    0.000    0.039    0.000 {built-in method _thread.start_new_thread}
        1    0.000    0.000    7.846    7.846 {built-in method builtins.exec}
      600    0.000    0.000    0.000    0.000 {method '__enter__' of '_thread.lock' objects}
     1800    0.000    0.000    0.000    0.000 {method '__exit__' of '_thread.lock' objects}
     3000    7.761    0.003    7.761    0.003 {method 'acquire' of '_thread.lock' objects}
      600    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
      600    0.000    0.000    0.000    0.000 {method 'append' of 'collections.deque' objects}
      600    0.000    0.000    0.000    0.000 {method 'append' of 'list' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
      600    0.000    0.000    0.000    0.000 {method 'discard' of 'set' objects}
      600    0.000    0.000    0.000    0.000 {method 'locked' of '_thread.lock' objects}
     1200    0.000    0.000    0.000    0.000 {method 'release' of '_thread.lock' objects}



====== THIRD POOL, 600 THREADS, 10000 OBJECTS, 10000 OPERATIONS INSIDE FUNCTION ======

         33004 function calls in 7.707 seconds

   Ordered by: standard name

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000    7.707    7.707 <string>:1(<module>)
      600    0.001    0.000    0.001    0.000 _weakrefset.py:82(add)
        1    0.002    0.002    7.707    7.707 client.py:36(test_function)
     1200    0.000    0.000    0.000    0.000 singleton.py:4(__call__)
      600    0.003    0.000    0.007    0.000 thread_builder.py:115(__init__)
      600    0.003    0.000    0.013    0.000 thread_builder.py:131(config)
      600    0.001    0.000    0.023    0.000 thread_builder.py:177(get_thread)
      600    0.003    0.000    2.392    0.004 threading.py:1001(join)
      600    0.001    0.000    2.388    0.004 threading.py:1039(_wait_for_tstate_lock)
     1200    0.000    0.000    0.000    0.000 threading.py:1107(daemon)
      600    0.001    0.000    0.001    0.000 threading.py:1189(_make_invoke_excepthook)
     1200    0.001    0.000    0.001    0.000 threading.py:1318(current_thread)
     1800    0.005    0.000    0.005    0.000 threading.py:228(__init__)
      600    0.000    0.000    0.001    0.000 threading.py:256(__enter__)
      600    0.001    0.000    0.001    0.000 threading.py:259(__exit__)
      600    0.000    0.000    0.000    0.000 threading.py:265(_release_save)
      600    0.001    0.000    0.001    0.000 threading.py:268(_acquire_restore)
      600    0.000    0.000    0.001    0.000 threading.py:271(_is_owned)
      600    0.003    0.000    5.234    0.009 threading.py:280(wait)
     1800    0.002    0.000    0.011    0.000 threading.py:521(__init__)
     1200    0.001    0.000    0.001    0.000 threading.py:529(is_set)
      600    0.005    0.000    5.240    0.009 threading.py:556(wait)
      600    0.000    0.000    0.000    0.000 threading.py:750(_newname)
      600    0.003    0.000    0.010    0.000 threading.py:777(__init__)
      600    0.006    0.000    5.290    0.009 threading.py:855(start)
      600    0.001    0.000    0.002    0.000 threading.py:966(_stop)
     2400    0.007    0.000    0.007    0.000 {built-in method _thread.allocate_lock}
     1200    0.000    0.000    0.000    0.000 {built-in method _thread.get_ident}
      600    0.044    0.000    0.044    0.000 {built-in method _thread.start_new_thread}
        1    0.000    0.000    7.707    7.707 {built-in method builtins.exec}
      600    0.000    0.000    0.000    0.000 {method '__enter__' of '_thread.lock' objects}
     1800    0.000    0.000    0.000    0.000 {method '__exit__' of '_thread.lock' objects}
     3000    7.611    0.003    7.611    0.003 {method 'acquire' of '_thread.lock' objects}
      600    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
      600    0.000    0.000    0.000    0.000 {method 'append' of 'collections.deque' objects}
      600    0.000    0.000    0.000    0.000 {method 'append' of 'list' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
      600    0.000    0.000    0.000    0.000 {method 'discard' of 'set' objects}
      600    0.000    0.000    0.000    0.000 {method 'locked' of '_thread.lock' objects}
     1200    0.000    0.000    0.000    0.000 {method 'release' of '_thread.lock' objects}



====== FIRST POOL, 700 THREADS, 10000 OBJECTS, 10000 OPERATIONS INSIDE FUNCTION ======

         38504 function calls in 8.910 seconds

   Ordered by: standard name

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000    8.910    8.910 <string>:1(<module>)
      700    0.001    0.000    0.001    0.000 _weakrefset.py:82(add)
        1    0.002    0.002    8.910    8.910 client.py:36(test_function)
     1400    0.000    0.000    0.000    0.000 singleton.py:4(__call__)
      700    0.003    0.000    0.008    0.000 thread_builder.py:115(__init__)
      700    0.003    0.000    0.016    0.000 thread_builder.py:131(config)
      700    0.001    0.000    0.067    0.000 thread_builder.py:177(get_thread)
      700    0.003    0.000    2.447    0.003 threading.py:1001(join)
      700    0.001    0.000    2.443    0.003 threading.py:1039(_wait_for_tstate_lock)
     1400    0.000    0.000    0.000    0.000 threading.py:1107(daemon)
      700    0.001    0.000    0.001    0.000 threading.py:1189(_make_invoke_excepthook)
     1400    0.001    0.000    0.001    0.000 threading.py:1318(current_thread)
     2100    0.045    0.000    0.045    0.000 threading.py:228(__init__)
      700    0.001    0.000    0.001    0.000 threading.py:256(__enter__)
      700    0.001    0.000    0.001    0.000 threading.py:259(__exit__)
      700    0.000    0.000    0.001    0.000 threading.py:265(_release_save)
      700    0.001    0.000    0.001    0.000 threading.py:268(_acquire_restore)
      700    0.000    0.000    0.001    0.000 threading.py:271(_is_owned)
      700    0.004    0.000    6.328    0.009 threading.py:280(wait)
     2100    0.002    0.000    0.052    0.000 threading.py:521(__init__)
     1400    0.001    0.000    0.001    0.000 threading.py:529(is_set)
      700    0.005    0.000    6.336    0.009 threading.py:556(wait)
      700    0.001    0.000    0.001    0.000 threading.py:750(_newname)
      700    0.004    0.000    0.050    0.000 threading.py:777(__init__)
      700    0.005    0.000    6.393    0.009 threading.py:855(start)
      700    0.002    0.000    0.002    0.000 threading.py:966(_stop)
     2800    0.009    0.000    0.009    0.000 {built-in method _thread.allocate_lock}
     1400    0.000    0.000    0.000    0.000 {built-in method _thread.get_ident}
      700    0.052    0.000    0.052    0.000 {built-in method _thread.start_new_thread}
        1    0.000    0.000    8.910    8.910 {built-in method builtins.exec}
      700    0.000    0.000    0.000    0.000 {method '__enter__' of '_thread.lock' objects}
     2100    0.000    0.000    0.000    0.000 {method '__exit__' of '_thread.lock' objects}
     3500    8.759    0.003    8.759    0.003 {method 'acquire' of '_thread.lock' objects}
      700    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
      700    0.000    0.000    0.000    0.000 {method 'append' of 'collections.deque' objects}
      700    0.000    0.000    0.000    0.000 {method 'append' of 'list' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
      700    0.000    0.000    0.000    0.000 {method 'discard' of 'set' objects}
      700    0.000    0.000    0.000    0.000 {method 'locked' of '_thread.lock' objects}
     1400    0.000    0.000    0.000    0.000 {method 'release' of '_thread.lock' objects}



====== SECOND POOL, 700 THREADS, 10000 OBJECTS, 10000 OPERATIONS INSIDE FUNCTION ======

         38504 function calls in 8.700 seconds

   Ordered by: standard name

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000    8.700    8.700 <string>:1(<module>)
      700    0.001    0.000    0.001    0.000 _weakrefset.py:82(add)
        1    0.002    0.002    8.700    8.700 client.py:36(test_function)
     1400    0.000    0.000    0.000    0.000 singleton.py:4(__call__)
      700    0.005    0.000    0.012    0.000 thread_builder.py:115(__init__)
      700    0.004    0.000    0.022    0.000 thread_builder.py:131(config)
      700    0.001    0.000    0.034    0.000 thread_builder.py:177(get_thread)
      700    0.003    0.000    2.432    0.003 threading.py:1001(join)
      700    0.001    0.000    2.429    0.003 threading.py:1039(_wait_for_tstate_lock)
     1400    0.000    0.000    0.000    0.000 threading.py:1107(daemon)
      700    0.001    0.000    0.001    0.000 threading.py:1189(_make_invoke_excepthook)
     1400    0.001    0.000    0.001    0.000 threading.py:1318(current_thread)
     2100    0.006    0.000    0.006    0.000 threading.py:228(__init__)
      700    0.001    0.000    0.001    0.000 threading.py:256(__enter__)
      700    0.001    0.000    0.001    0.000 threading.py:259(__exit__)
      700    0.000    0.000    0.001    0.000 threading.py:265(_release_save)
      700    0.001    0.000    0.001    0.000 threading.py:268(_acquire_restore)
      700    0.000    0.000    0.001    0.000 threading.py:271(_is_owned)
      700    0.004    0.000    6.169    0.009 threading.py:280(wait)
     2100    0.002    0.000    0.016    0.000 threading.py:521(__init__)
     1400    0.001    0.000    0.001    0.000 threading.py:529(is_set)
      700    0.005    0.000    6.176    0.009 threading.py:556(wait)
      700    0.000    0.000    0.000    0.000 threading.py:750(_newname)
      700    0.005    0.000    0.012    0.000 threading.py:777(__init__)
      700    0.005    0.000    6.232    0.009 threading.py:855(start)
      700    0.001    0.000    0.002    0.000 threading.py:966(_stop)
     2800    0.012    0.000    0.012    0.000 {built-in method _thread.allocate_lock}
     1400    0.000    0.000    0.000    0.000 {built-in method _thread.get_ident}
      700    0.050    0.000    0.050    0.000 {built-in method _thread.start_new_thread}
        1    0.000    0.000    8.700    8.700 {built-in method builtins.exec}
      700    0.000    0.000    0.000    0.000 {method '__enter__' of '_thread.lock' objects}
     2100    0.001    0.000    0.001    0.000 {method '__exit__' of '_thread.lock' objects}
     3500    8.585    0.002    8.585    0.002 {method 'acquire' of '_thread.lock' objects}
      700    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
      700    0.000    0.000    0.000    0.000 {method 'append' of 'collections.deque' objects}
      700    0.000    0.000    0.000    0.000 {method 'append' of 'list' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
      700    0.000    0.000    0.000    0.000 {method 'discard' of 'set' objects}
      700    0.000    0.000    0.000    0.000 {method 'locked' of '_thread.lock' objects}
     1400    0.000    0.000    0.000    0.000 {method 'release' of '_thread.lock' objects}



====== THIRD POOL, 700 THREADS, 10000 OBJECTS, 10000 OPERATIONS INSIDE FUNCTION ======

         38504 function calls in 8.715 seconds

   Ordered by: standard name

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000    8.715    8.715 <string>:1(<module>)
      700    0.001    0.000    0.001    0.000 _weakrefset.py:82(add)
        1    0.002    0.002    8.715    8.715 client.py:36(test_function)
     1400    0.000    0.000    0.000    0.000 singleton.py:4(__call__)
      700    0.003    0.000    0.007    0.000 thread_builder.py:115(__init__)
      700    0.003    0.000    0.013    0.000 thread_builder.py:131(config)
      700    0.001    0.000    0.024    0.000 thread_builder.py:177(get_thread)
      700    0.003    0.000    2.304    0.003 threading.py:1001(join)
      700    0.001    0.000    2.300    0.003 threading.py:1039(_wait_for_tstate_lock)
     1400    0.000    0.000    0.000    0.000 threading.py:1107(daemon)
      700    0.001    0.000    0.001    0.000 threading.py:1189(_make_invoke_excepthook)
     1400    0.001    0.000    0.001    0.000 threading.py:1318(current_thread)
     2100    0.004    0.000    0.004    0.000 threading.py:228(__init__)
      700    0.000    0.000    0.001    0.000 threading.py:256(__enter__)
      700    0.001    0.000    0.001    0.000 threading.py:259(__exit__)
      700    0.000    0.000    0.000    0.000 threading.py:265(_release_save)
      700    0.001    0.000    0.001    0.000 threading.py:268(_acquire_restore)
      700    0.000    0.000    0.001    0.000 threading.py:271(_is_owned)
      700    0.003    0.000    6.325    0.009 threading.py:280(wait)
     2100    0.002    0.000    0.011    0.000 threading.py:521(__init__)
     1400    0.001    0.000    0.001    0.000 threading.py:529(is_set)
      700    0.005    0.000    6.332    0.009 threading.py:556(wait)
      700    0.000    0.000    0.000    0.000 threading.py:750(_newname)
      700    0.004    0.000    0.009    0.000 threading.py:777(__init__)
      700    0.004    0.000    6.386    0.009 threading.py:855(start)
      700    0.001    0.000    0.002    0.000 threading.py:966(_stop)
     2800    0.008    0.000    0.008    0.000 {built-in method _thread.allocate_lock}
     1400    0.000    0.000    0.000    0.000 {built-in method _thread.get_ident}
      700    0.049    0.000    0.049    0.000 {built-in method _thread.start_new_thread}
        1    0.000    0.000    8.715    8.715 {built-in method builtins.exec}
      700    0.000    0.000    0.000    0.000 {method '__enter__' of '_thread.lock' objects}
     2100    0.000    0.000    0.000    0.000 {method '__exit__' of '_thread.lock' objects}
     3500    8.614    0.002    8.614    0.002 {method 'acquire' of '_thread.lock' objects}
      700    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
      700    0.000    0.000    0.000    0.000 {method 'append' of 'collections.deque' objects}
      700    0.000    0.000    0.000    0.000 {method 'append' of 'list' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
      700    0.000    0.000    0.000    0.000 {method 'discard' of 'set' objects}
      700    0.000    0.000    0.000    0.000 {method 'locked' of '_thread.lock' objects}
     1400    0.000    0.000    0.000    0.000 {method 'release' of '_thread.lock' objects}



====== FIRST POOL, 800 THREADS, 10000 OBJECTS, 10000 OPERATIONS INSIDE FUNCTION ======

         44004 function calls in 10.057 seconds

   Ordered by: standard name

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000   10.057   10.057 <string>:1(<module>)
      800    0.001    0.000    0.001    0.000 _weakrefset.py:82(add)
        1    0.002    0.002   10.057   10.057 client.py:36(test_function)
     1600    0.000    0.000    0.000    0.000 singleton.py:4(__call__)
      800    0.003    0.000    0.008    0.000 thread_builder.py:115(__init__)
      800    0.003    0.000    0.016    0.000 thread_builder.py:131(config)
      800    0.001    0.000    0.065    0.000 thread_builder.py:177(get_thread)
      800    0.003    0.000    2.354    0.003 threading.py:1001(join)
      800    0.001    0.000    2.350    0.003 threading.py:1039(_wait_for_tstate_lock)
     1600    0.000    0.000    0.000    0.000 threading.py:1107(daemon)
      800    0.001    0.000    0.001    0.000 threading.py:1189(_make_invoke_excepthook)
     1600    0.001    0.000    0.001    0.000 threading.py:1318(current_thread)
     2400    0.005    0.000    0.005    0.000 threading.py:228(__init__)
      800    0.001    0.000    0.001    0.000 threading.py:256(__enter__)
      800    0.001    0.000    0.001    0.000 threading.py:259(__exit__)
      800    0.001    0.000    0.001    0.000 threading.py:265(_release_save)
      800    0.001    0.000    0.001    0.000 threading.py:268(_acquire_restore)
      800    0.001    0.000    0.001    0.000 threading.py:271(_is_owned)
      800    0.004    0.000    7.566    0.009 threading.py:280(wait)
     2400    0.002    0.000    0.013    0.000 threading.py:521(__init__)
     1600    0.001    0.000    0.001    0.000 threading.py:529(is_set)
      800    0.006    0.000    7.574    0.009 threading.py:556(wait)
      800    0.001    0.000    0.001    0.000 threading.py:750(_newname)
      800    0.042    0.000    0.049    0.000 threading.py:777(__init__)
      800    0.005    0.000    7.635    0.010 threading.py:855(start)
      800    0.002    0.000    0.002    0.000 threading.py:966(_stop)
     3200    0.009    0.000    0.009    0.000 {built-in method _thread.allocate_lock}
     1600    0.000    0.000    0.000    0.000 {built-in method _thread.get_ident}
      800    0.055    0.000    0.055    0.000 {built-in method _thread.start_new_thread}
        1    0.000    0.000   10.057   10.057 {built-in method builtins.exec}
      800    0.000    0.000    0.000    0.000 {method '__enter__' of '_thread.lock' objects}
     2400    0.000    0.000    0.000    0.000 {method '__exit__' of '_thread.lock' objects}
     4000    9.902    0.002    9.902    0.002 {method 'acquire' of '_thread.lock' objects}
      800    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
      800    0.000    0.000    0.000    0.000 {method 'append' of 'collections.deque' objects}
      800    0.000    0.000    0.000    0.000 {method 'append' of 'list' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
      800    0.000    0.000    0.000    0.000 {method 'discard' of 'set' objects}
      800    0.000    0.000    0.000    0.000 {method 'locked' of '_thread.lock' objects}
     1600    0.000    0.000    0.000    0.000 {method 'release' of '_thread.lock' objects}



====== SECOND POOL, 800 THREADS, 10000 OBJECTS, 10000 OPERATIONS INSIDE FUNCTION ======

         44004 function calls in 9.921 seconds

   Ordered by: standard name

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000    9.921    9.921 <string>:1(<module>)
      800    0.001    0.000    0.001    0.000 _weakrefset.py:82(add)
        1    0.003    0.003    9.921    9.921 client.py:36(test_function)
     1600    0.001    0.000    0.001    0.000 singleton.py:4(__call__)
      800    0.005    0.000    0.012    0.000 thread_builder.py:115(__init__)
      800    0.005    0.000    0.026    0.000 thread_builder.py:131(config)
      800    0.002    0.000    0.061    0.000 thread_builder.py:177(get_thread)
      800    0.003    0.000    2.220    0.003 threading.py:1001(join)
      800    0.001    0.000    2.216    0.003 threading.py:1039(_wait_for_tstate_lock)
     1600    0.000    0.000    0.000    0.000 threading.py:1107(daemon)
      800    0.001    0.000    0.001    0.000 threading.py:1189(_make_invoke_excepthook)
     1600    0.001    0.000    0.001    0.000 threading.py:1318(current_thread)
     2400    0.013    0.000    0.013    0.000 threading.py:228(__init__)
      800    0.001    0.000    0.001    0.000 threading.py:256(__enter__)
      800    0.001    0.000    0.001    0.000 threading.py:259(__exit__)
      800    0.000    0.000    0.001    0.000 threading.py:265(_release_save)
      800    0.001    0.000    0.001    0.000 threading.py:268(_acquire_restore)
      800    0.000    0.000    0.001    0.000 threading.py:271(_is_owned)
      800    0.004    0.000    7.565    0.009 threading.py:280(wait)
     2400    0.003    0.000    0.023    0.000 threading.py:521(__init__)
     1600    0.001    0.000    0.001    0.000 threading.py:529(is_set)
      800    0.006    0.000    7.573    0.009 threading.py:556(wait)
      800    0.001    0.000    0.001    0.000 threading.py:750(_newname)
      800    0.020    0.000    0.033    0.000 threading.py:777(__init__)
      800    0.006    0.000    7.638    0.010 threading.py:855(start)
      800    0.001    0.000    0.002    0.000 threading.py:966(_stop)
     3200    0.011    0.000    0.011    0.000 {built-in method _thread.allocate_lock}
     1600    0.000    0.000    0.000    0.000 {built-in method _thread.get_ident}
      800    0.059    0.000    0.059    0.000 {built-in method _thread.start_new_thread}
        1    0.000    0.000    9.921    9.921 {built-in method builtins.exec}
      800    0.000    0.000    0.000    0.000 {method '__enter__' of '_thread.lock' objects}
     2400    0.000    0.000    0.000    0.000 {method '__exit__' of '_thread.lock' objects}
     4000    9.767    0.002    9.767    0.002 {method 'acquire' of '_thread.lock' objects}
      800    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
      800    0.000    0.000    0.000    0.000 {method 'append' of 'collections.deque' objects}
      800    0.000    0.000    0.000    0.000 {method 'append' of 'list' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
      800    0.000    0.000    0.000    0.000 {method 'discard' of 'set' objects}
      800    0.000    0.000    0.000    0.000 {method 'locked' of '_thread.lock' objects}
     1600    0.000    0.000    0.000    0.000 {method 'release' of '_thread.lock' objects}



====== THIRD POOL, 800 THREADS, 10000 OBJECTS, 10000 OPERATIONS INSIDE FUNCTION ======

         44004 function calls in 10.046 seconds

   Ordered by: standard name

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000   10.046   10.046 <string>:1(<module>)
      800    0.001    0.000    0.001    0.000 _weakrefset.py:82(add)
        1    0.002    0.002   10.046   10.046 client.py:36(test_function)
     1600    0.000    0.000    0.000    0.000 singleton.py:4(__call__)
      800    0.003    0.000    0.008    0.000 thread_builder.py:115(__init__)
      800    0.003    0.000    0.015    0.000 thread_builder.py:131(config)
      800    0.001    0.000    0.027    0.000 thread_builder.py:177(get_thread)
      800    0.003    0.000    2.252    0.003 threading.py:1001(join)
      800    0.001    0.000    2.249    0.003 threading.py:1039(_wait_for_tstate_lock)
     1600    0.000    0.000    0.000    0.000 threading.py:1107(daemon)
      800    0.002    0.000    0.002    0.000 threading.py:1189(_make_invoke_excepthook)
     1600    0.001    0.000    0.001    0.000 threading.py:1318(current_thread)
     2400    0.005    0.000    0.005    0.000 threading.py:228(__init__)
      800    0.001    0.000    0.001    0.000 threading.py:256(__enter__)
      800    0.001    0.000    0.001    0.000 threading.py:259(__exit__)
      800    0.000    0.000    0.001    0.000 threading.py:265(_release_save)
      800    0.001    0.000    0.001    0.000 threading.py:268(_acquire_restore)
      800    0.001    0.000    0.001    0.000 threading.py:271(_is_owned)
      800    0.004    0.000    7.691    0.010 threading.py:280(wait)
     2400    0.002    0.000    0.012    0.000 threading.py:521(__init__)
     1600    0.001    0.000    0.001    0.000 threading.py:529(is_set)
      800    0.006    0.000    7.699    0.010 threading.py:556(wait)
      800    0.000    0.000    0.000    0.000 threading.py:750(_newname)
      800    0.003    0.000    0.011    0.000 threading.py:777(__init__)
      800    0.006    0.000    7.764    0.010 threading.py:855(start)
      800    0.002    0.000    0.002    0.000 threading.py:966(_stop)
     3200    0.009    0.000    0.009    0.000 {built-in method _thread.allocate_lock}
     1600    0.000    0.000    0.000    0.000 {built-in method _thread.get_ident}
      800    0.058    0.000    0.058    0.000 {built-in method _thread.start_new_thread}
        1    0.000    0.000   10.046   10.046 {built-in method builtins.exec}
      800    0.000    0.000    0.000    0.000 {method '__enter__' of '_thread.lock' objects}
     2400    0.001    0.000    0.001    0.000 {method '__exit__' of '_thread.lock' objects}
     4000    9.926    0.002    9.926    0.002 {method 'acquire' of '_thread.lock' objects}
      800    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
      800    0.000    0.000    0.000    0.000 {method 'append' of 'collections.deque' objects}
      800    0.000    0.000    0.000    0.000 {method 'append' of 'list' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
      800    0.000    0.000    0.000    0.000 {method 'discard' of 'set' objects}
      800    0.000    0.000    0.000    0.000 {method 'locked' of '_thread.lock' objects}
     1600    0.000    0.000    0.000    0.000 {method 'release' of '_thread.lock' objects}



====== FIRST POOL, 900 THREADS, 10000 OBJECTS, 10000 OPERATIONS INSIDE FUNCTION ======

         49504 function calls in 11.287 seconds

   Ordered by: standard name

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000   11.287   11.287 <string>:1(<module>)
      900    0.001    0.000    0.001    0.000 _weakrefset.py:82(add)
        1    0.003    0.003   11.287   11.287 client.py:36(test_function)
     1800    0.001    0.000    0.001    0.000 singleton.py:4(__call__)
      900    0.005    0.000    0.012    0.000 thread_builder.py:115(__init__)
      900    0.005    0.000    0.022    0.000 thread_builder.py:131(config)
      900    0.002    0.000    0.107    0.000 thread_builder.py:177(get_thread)
      900    0.004    0.000    2.476    0.003 threading.py:1001(join)
      900    0.001    0.000    2.471    0.003 threading.py:1039(_wait_for_tstate_lock)
     1800    0.000    0.000    0.000    0.000 threading.py:1107(daemon)
      900    0.001    0.000    0.001    0.000 threading.py:1189(_make_invoke_excepthook)
     1800    0.001    0.000    0.001    0.000 threading.py:1318(current_thread)
     2700    0.009    0.000    0.009    0.000 threading.py:228(__init__)
      900    0.001    0.000    0.001    0.000 threading.py:256(__enter__)
      900    0.001    0.000    0.001    0.000 threading.py:259(__exit__)
      900    0.002    0.000    0.002    0.000 threading.py:265(_release_save)
      900    0.001    0.000    0.001    0.000 threading.py:268(_acquire_restore)
      900    0.001    0.000    0.001    0.000 threading.py:271(_is_owned)
      900    0.006    0.000    8.615    0.010 threading.py:280(wait)
     2700    0.003    0.000    0.018    0.000 threading.py:521(__init__)
     1800    0.001    0.000    0.001    0.000 threading.py:529(is_set)
      900    0.007    0.000    8.625    0.010 threading.py:556(wait)
      900    0.001    0.000    0.001    0.000 threading.py:750(_newname)
      900    0.073    0.000    0.083    0.000 threading.py:777(__init__)
      900    0.007    0.000    8.702    0.010 threading.py:855(start)
      900    0.002    0.000    0.002    0.000 threading.py:966(_stop)
     3600    0.011    0.000    0.011    0.000 {built-in method _thread.allocate_lock}
     1800    0.000    0.000    0.000    0.000 {built-in method _thread.get_ident}
      900    0.069    0.000    0.069    0.000 {built-in method _thread.start_new_thread}
        1    0.000    0.000   11.287   11.287 {built-in method builtins.exec}
      900    0.001    0.000    0.001    0.000 {method '__enter__' of '_thread.lock' objects}
     2700    0.001    0.000    0.001    0.000 {method '__exit__' of '_thread.lock' objects}
     4500   11.067    0.002   11.067    0.002 {method 'acquire' of '_thread.lock' objects}
      900    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
      900    0.000    0.000    0.000    0.000 {method 'append' of 'collections.deque' objects}
      900    0.000    0.000    0.000    0.000 {method 'append' of 'list' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
      900    0.000    0.000    0.000    0.000 {method 'discard' of 'set' objects}
      900    0.000    0.000    0.000    0.000 {method 'locked' of '_thread.lock' objects}
     1800    0.000    0.000    0.000    0.000 {method 'release' of '_thread.lock' objects}



====== SECOND POOL, 900 THREADS, 10000 OBJECTS, 10000 OPERATIONS INSIDE FUNCTION ======

         49504 function calls in 10.728 seconds

   Ordered by: standard name

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000   10.728   10.728 <string>:1(<module>)
      900    0.001    0.000    0.001    0.000 _weakrefset.py:82(add)
        1    0.002    0.002   10.728   10.728 client.py:36(test_function)
     1800    0.000    0.000    0.000    0.000 singleton.py:4(__call__)
      900    0.003    0.000    0.008    0.000 thread_builder.py:115(__init__)
      900    0.003    0.000    0.016    0.000 thread_builder.py:131(config)
      900    0.001    0.000    0.029    0.000 thread_builder.py:177(get_thread)
      900    0.003    0.000    2.393    0.003 threading.py:1001(join)
      900    0.001    0.000    2.389    0.003 threading.py:1039(_wait_for_tstate_lock)
     1800    0.000    0.000    0.000    0.000 threading.py:1107(daemon)
      900    0.001    0.000    0.001    0.000 threading.py:1189(_make_invoke_excepthook)
     1800    0.001    0.000    0.001    0.000 threading.py:1318(current_thread)
     2700    0.006    0.000    0.006    0.000 threading.py:228(__init__)
      900    0.001    0.000    0.001    0.000 threading.py:256(__enter__)
      900    0.001    0.000    0.001    0.000 threading.py:259(__exit__)
      900    0.000    0.000    0.001    0.000 threading.py:265(_release_save)
      900    0.001    0.000    0.001    0.000 threading.py:268(_acquire_restore)
      900    0.000    0.000    0.001    0.000 threading.py:271(_is_owned)
      900    0.005    0.000    8.226    0.009 threading.py:280(wait)
     2700    0.002    0.000    0.013    0.000 threading.py:521(__init__)
     1800    0.001    0.000    0.001    0.000 threading.py:529(is_set)
      900    0.006    0.000    8.234    0.009 threading.py:556(wait)
      900    0.001    0.000    0.001    0.000 threading.py:750(_newname)
      900    0.005    0.000    0.012    0.000 threading.py:777(__init__)
      900    0.006    0.000    8.304    0.009 threading.py:855(start)
      900    0.002    0.000    0.002    0.000 threading.py:966(_stop)
     3600    0.009    0.000    0.009    0.000 {built-in method _thread.allocate_lock}
     1800    0.000    0.000    0.000    0.000 {built-in method _thread.get_ident}
      900    0.063    0.000    0.063    0.000 {built-in method _thread.start_new_thread}
        1    0.000    0.000   10.728   10.728 {built-in method builtins.exec}
      900    0.001    0.000    0.001    0.000 {method '__enter__' of '_thread.lock' objects}
     2700    0.001    0.000    0.001    0.000 {method '__exit__' of '_thread.lock' objects}
     4500   10.600    0.002   10.600    0.002 {method 'acquire' of '_thread.lock' objects}
      900    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
      900    0.000    0.000    0.000    0.000 {method 'append' of 'collections.deque' objects}
      900    0.000    0.000    0.000    0.000 {method 'append' of 'list' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
      900    0.000    0.000    0.000    0.000 {method 'discard' of 'set' objects}
      900    0.000    0.000    0.000    0.000 {method 'locked' of '_thread.lock' objects}
     1800    0.000    0.000    0.000    0.000 {method 'release' of '_thread.lock' objects}



====== THIRD POOL, 900 THREADS, 10000 OBJECTS, 10000 OPERATIONS INSIDE FUNCTION ======

         49504 function calls in 10.779 seconds

   Ordered by: standard name

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000   10.778   10.778 <string>:1(<module>)
      900    0.001    0.000    0.001    0.000 _weakrefset.py:82(add)
        1    0.002    0.002   10.778   10.778 client.py:36(test_function)
     1800    0.000    0.000    0.000    0.000 singleton.py:4(__call__)
      900    0.003    0.000    0.009    0.000 thread_builder.py:115(__init__)
      900    0.004    0.000    0.016    0.000 thread_builder.py:131(config)
      900    0.001    0.000    0.029    0.000 thread_builder.py:177(get_thread)
      900    0.003    0.000    2.332    0.003 threading.py:1001(join)
      900    0.001    0.000    2.329    0.003 threading.py:1039(_wait_for_tstate_lock)
     1800    0.000    0.000    0.000    0.000 threading.py:1107(daemon)
      900    0.001    0.000    0.001    0.000 threading.py:1189(_make_invoke_excepthook)
     1800    0.001    0.000    0.001    0.000 threading.py:1318(current_thread)
     2700    0.006    0.000    0.006    0.000 threading.py:228(__init__)
      900    0.001    0.000    0.001    0.000 threading.py:256(__enter__)
      900    0.001    0.000    0.001    0.000 threading.py:259(__exit__)
      900    0.000    0.000    0.001    0.000 threading.py:265(_release_save)
      900    0.001    0.000    0.001    0.000 threading.py:268(_acquire_restore)
      900    0.000    0.000    0.001    0.000 threading.py:271(_is_owned)
      900    0.005    0.000    8.340    0.009 threading.py:280(wait)
     2700    0.002    0.000    0.013    0.000 threading.py:521(__init__)
     1800    0.001    0.000    0.001    0.000 threading.py:529(is_set)
      900    0.006    0.000    8.348    0.009 threading.py:556(wait)
      900    0.001    0.000    0.001    0.000 threading.py:750(_newname)
      900    0.005    0.000    0.012    0.000 threading.py:777(__init__)
      900    0.006    0.000    8.414    0.009 threading.py:855(start)
      900    0.002    0.000    0.002    0.000 threading.py:966(_stop)
     3600    0.009    0.000    0.009    0.000 {built-in method _thread.allocate_lock}
     1800    0.000    0.000    0.000    0.000 {built-in method _thread.get_ident}
      900    0.060    0.000    0.060    0.000 {built-in method _thread.start_new_thread}
        1    0.000    0.000   10.779   10.779 {built-in method builtins.exec}
      900    0.001    0.000    0.001    0.000 {method '__enter__' of '_thread.lock' objects}
     2700    0.001    0.000    0.001    0.000 {method '__exit__' of '_thread.lock' objects}
     4500   10.655    0.002   10.655    0.002 {method 'acquire' of '_thread.lock' objects}
      900    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
      900    0.000    0.000    0.000    0.000 {method 'append' of 'collections.deque' objects}
      900    0.000    0.000    0.000    0.000 {method 'append' of 'list' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
      900    0.000    0.000    0.000    0.000 {method 'discard' of 'set' objects}
      900    0.000    0.000    0.000    0.000 {method 'locked' of '_thread.lock' objects}
     1800    0.000    0.000    0.000    0.000 {method 'release' of '_thread.lock' objects}



====== FIRST POOL, 1000 THREADS, 10000 OBJECTS, 10000 OPERATIONS INSIDE FUNCTION ======

         55004 function calls in 12.103 seconds

   Ordered by: standard name

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000   12.103   12.103 <string>:1(<module>)
     1000    0.001    0.000    0.001    0.000 _weakrefset.py:82(add)
        1    0.003    0.003   12.103   12.103 client.py:36(test_function)
     2000    0.000    0.000    0.000    0.000 singleton.py:4(__call__)
     1000    0.004    0.000    0.009    0.000 thread_builder.py:115(__init__)
     1000    0.004    0.000    0.018    0.000 thread_builder.py:131(config)
     1000    0.001    0.000    0.087    0.000 thread_builder.py:177(get_thread)
     1000    0.004    0.000    2.545    0.003 threading.py:1001(join)
     1000    0.001    0.000    2.541    0.003 threading.py:1039(_wait_for_tstate_lock)
     2000    0.000    0.000    0.000    0.000 threading.py:1107(daemon)
     1000    0.002    0.000    0.002    0.000 threading.py:1189(_make_invoke_excepthook)
     2000    0.001    0.000    0.001    0.000 threading.py:1318(current_thread)
     3000    0.006    0.000    0.006    0.000 threading.py:228(__init__)
     1000    0.001    0.000    0.001    0.000 threading.py:256(__enter__)
     1000    0.001    0.000    0.001    0.000 threading.py:259(__exit__)
     1000    0.001    0.000    0.001    0.000 threading.py:265(_release_save)
     1000    0.001    0.000    0.002    0.000 threading.py:268(_acquire_restore)
     1000    0.001    0.000    0.001    0.000 threading.py:271(_is_owned)
     1000    0.005    0.000    9.377    0.009 threading.py:280(wait)
     3000    0.002    0.000    0.015    0.000 threading.py:521(__init__)
     2000    0.001    0.000    0.001    0.000 threading.py:529(is_set)
     1000    0.008    0.000    9.387    0.009 threading.py:556(wait)
     1000    0.001    0.000    0.001    0.000 threading.py:750(_newname)
     1000    0.059    0.000    0.068    0.000 threading.py:777(__init__)
     1000    0.007    0.000    9.468    0.009 threading.py:855(start)
     1000    0.002    0.000    0.003    0.000 threading.py:966(_stop)
     4000    0.011    0.000    0.011    0.000 {built-in method _thread.allocate_lock}
     2000    0.000    0.000    0.000    0.000 {built-in method _thread.get_ident}
     1000    0.073    0.000    0.073    0.000 {built-in method _thread.start_new_thread}
        1    0.000    0.000   12.103   12.103 {built-in method builtins.exec}
     1000    0.001    0.000    0.001    0.000 {method '__enter__' of '_thread.lock' objects}
     3000    0.001    0.000    0.001    0.000 {method '__exit__' of '_thread.lock' objects}
     5000   11.902    0.002   11.902    0.002 {method 'acquire' of '_thread.lock' objects}
     1000    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
     1000    0.000    0.000    0.000    0.000 {method 'append' of 'collections.deque' objects}
     1000    0.000    0.000    0.000    0.000 {method 'append' of 'list' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
     1000    0.000    0.000    0.000    0.000 {method 'discard' of 'set' objects}
     1000    0.000    0.000    0.000    0.000 {method 'locked' of '_thread.lock' objects}
     2000    0.000    0.000    0.000    0.000 {method 'release' of '_thread.lock' objects}



====== SECOND POOL, 1000 THREADS, 10000 OBJECTS, 10000 OPERATIONS INSIDE FUNCTION ======

         55004 function calls in 12.099 seconds

   Ordered by: standard name

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000   12.099   12.099 <string>:1(<module>)
     1000    0.001    0.000    0.001    0.000 _weakrefset.py:82(add)
        1    0.003    0.003   12.099   12.099 client.py:36(test_function)
     2000    0.001    0.000    0.001    0.000 singleton.py:4(__call__)
     1000    0.004    0.000    0.011    0.000 thread_builder.py:115(__init__)
     1000    0.004    0.000    0.020    0.000 thread_builder.py:131(config)
     1000    0.001    0.000    0.038    0.000 thread_builder.py:177(get_thread)
     1000    0.003    0.000    2.298    0.002 threading.py:1001(join)
     1000    0.001    0.000    2.294    0.002 threading.py:1039(_wait_for_tstate_lock)
     2000    0.000    0.000    0.000    0.000 threading.py:1107(daemon)
     1000    0.003    0.000    0.003    0.000 threading.py:1189(_make_invoke_excepthook)
     2000    0.001    0.000    0.001    0.000 threading.py:1318(current_thread)
     3000    0.007    0.000    0.007    0.000 threading.py:228(__init__)
     1000    0.001    0.000    0.001    0.000 threading.py:256(__enter__)
     1000    0.001    0.000    0.001    0.000 threading.py:259(__exit__)
     1000    0.001    0.000    0.001    0.000 threading.py:265(_release_save)
     1000    0.001    0.000    0.002    0.000 threading.py:268(_acquire_restore)
     1000    0.001    0.000    0.001    0.000 threading.py:271(_is_owned)
     1000    0.005    0.000    9.669    0.010 threading.py:280(wait)
     3000    0.002    0.000    0.016    0.000 threading.py:521(__init__)
     2000    0.001    0.000    0.001    0.000 threading.py:529(is_set)
     1000    0.008    0.000    9.679    0.010 threading.py:556(wait)
     1000    0.001    0.000    0.001    0.000 threading.py:750(_newname)
     1000    0.007    0.000    0.017    0.000 threading.py:777(__init__)
     1000    0.007    0.000    9.759    0.010 threading.py:855(start)
     1000    0.002    0.000    0.003    0.000 threading.py:966(_stop)
     4000    0.011    0.000    0.011    0.000 {built-in method _thread.allocate_lock}
     2000    0.000    0.000    0.000    0.000 {built-in method _thread.get_ident}
     1000    0.073    0.000    0.073    0.000 {built-in method _thread.start_new_thread}
        1    0.000    0.000   12.099   12.099 {built-in method builtins.exec}
     1000    0.001    0.000    0.001    0.000 {method '__enter__' of '_thread.lock' objects}
     3000    0.001    0.000    0.001    0.000 {method '__exit__' of '_thread.lock' objects}
     5000   11.947    0.002   11.947    0.002 {method 'acquire' of '_thread.lock' objects}
     1000    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
     1000    0.000    0.000    0.000    0.000 {method 'append' of 'collections.deque' objects}
     1000    0.000    0.000    0.000    0.000 {method 'append' of 'list' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
     1000    0.000    0.000    0.000    0.000 {method 'discard' of 'set' objects}
     1000    0.000    0.000    0.000    0.000 {method 'locked' of '_thread.lock' objects}
     2000    0.000    0.000    0.000    0.000 {method 'release' of '_thread.lock' objects}



====== THIRD POOL, 1000 THREADS, 10000 OBJECTS, 10000 OPERATIONS INSIDE FUNCTION ======

         55004 function calls in 12.369 seconds

   Ordered by: standard name

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000   12.369   12.369 <string>:1(<module>)
     1000    0.001    0.000    0.001    0.000 _weakrefset.py:82(add)
        1    0.003    0.003   12.369   12.369 client.py:36(test_function)
     2000    0.000    0.000    0.000    0.000 singleton.py:4(__call__)
     1000    0.004    0.000    0.010    0.000 thread_builder.py:115(__init__)
     1000    0.004    0.000    0.019    0.000 thread_builder.py:131(config)
     1000    0.001    0.000    0.032    0.000 thread_builder.py:177(get_thread)
     1000    0.003    0.000    2.384    0.002 threading.py:1001(join)
     1000    0.001    0.000    2.380    0.002 threading.py:1039(_wait_for_tstate_lock)
     2000    0.000    0.000    0.000    0.000 threading.py:1107(daemon)
     1000    0.001    0.000    0.001    0.000 threading.py:1189(_make_invoke_excepthook)
     2000    0.001    0.000    0.001    0.000 threading.py:1318(current_thread)
     3000    0.007    0.000    0.007    0.000 threading.py:228(__init__)
     1000    0.001    0.000    0.001    0.000 threading.py:256(__enter__)
     1000    0.001    0.000    0.001    0.000 threading.py:259(__exit__)
     1000    0.001    0.000    0.001    0.000 threading.py:265(_release_save)
     1000    0.001    0.000    0.002    0.000 threading.py:268(_acquire_restore)
     1000    0.001    0.000    0.001    0.000 threading.py:271(_is_owned)
     1000    0.006    0.000    9.858    0.010 threading.py:280(wait)
     3000    0.002    0.000    0.016    0.000 threading.py:521(__init__)
     2000    0.001    0.000    0.001    0.000 threading.py:529(is_set)
     1000    0.008    0.000    9.868    0.010 threading.py:556(wait)
     1000    0.001    0.000    0.001    0.000 threading.py:750(_newname)
     1000    0.004    0.000    0.012    0.000 threading.py:777(__init__)
     1000    0.008    0.000    9.950    0.010 threading.py:855(start)
     1000    0.002    0.000    0.002    0.000 threading.py:966(_stop)
     4000    0.011    0.000    0.011    0.000 {built-in method _thread.allocate_lock}
     2000    0.000    0.000    0.000    0.000 {built-in method _thread.get_ident}
     1000    0.072    0.000    0.072    0.000 {built-in method _thread.start_new_thread}
        1    0.000    0.000   12.369   12.369 {built-in method builtins.exec}
     1000    0.001    0.000    0.001    0.000 {method '__enter__' of '_thread.lock' objects}
     3000    0.001    0.000    0.001    0.000 {method '__exit__' of '_thread.lock' objects}
     5000   12.222    0.002   12.222    0.002 {method 'acquire' of '_thread.lock' objects}
     1000    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
     1000    0.000    0.000    0.000    0.000 {method 'append' of 'collections.deque' objects}
     1000    0.000    0.000    0.000    0.000 {method 'append' of 'list' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
     1000    0.000    0.000    0.000    0.000 {method 'discard' of 'set' objects}
     1000    0.000    0.000    0.000    0.000 {method 'locked' of '_thread.lock' objects}
     2000    0.000    0.000    0.000    0.000 {method 'release' of '_thread.lock' objects}


